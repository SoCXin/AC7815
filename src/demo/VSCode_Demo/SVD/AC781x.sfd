/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     AC781x.sfd
 * @brief    CMSIS-SVD SFD File
 * @version  1.0
 * @date     24. January 2019
 * @note     Generated by SVDConv V3.2.66 on Thursday, 24.01.2019 10:50:19
 *           from File 'AC781x.svd',
 *           last modified on Sunday, 08.04.2018 03:14:08
 */




// -----------------------------  Register Item Address: ADC_STR  ---------------------------------
// SVD Line: 89

unsigned int ADC_STR __AT (0x40003000);



// ---------------------------------  Field Item: ADC_STR_AMO  ------------------------------------
// SVD Line: 98

//  <item> SFDITEM_FIELD__ADC_STR_AMO
//    <name> AMO </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003000) \nAnalog monitor event occrs\n0 : 0 = no analog monitor event\n1 : 1 = analog monitor event occurs,write 0 to clear </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_STR ) </loc>
//      <o.0..0> AMO
//        <0=> 0: 0 = no analog monitor event
//        <1=> 1: 1 = analog monitor event occurs,write 0 to clear
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: ADC_STR_EOC  ------------------------------------
// SVD Line: 117

//  <item> SFDITEM_FIELD__ADC_STR_EOC
//    <name> EOC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40003000) \nRegular group conversion completed flag\n0 : 0 = Regular group conversion not completed\n1 : 1 = Regular group conversion completed,write 0 or Read ADC_RDR to clear </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_STR ) </loc>
//      <o.1..1> EOC
//        <0=> 0: 0 = Regular group conversion not completed
//        <1=> 1: 1 = Regular group conversion completed,write 0 or Read ADC_RDR to clear
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_STR_IEOC  ------------------------------------
// SVD Line: 136

//  <item> SFDITEM_FIELD__ADC_STR_IEOC
//    <name> IEOC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40003000) \nInjection group conversion completed flag\n0 : 0 = Injection group conversion not completed\n1 : 1 = Injection group conversion completed,write 0 to clear </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_STR ) </loc>
//      <o.2..2> IEOC
//        <0=> 0: 0 = Injection group conversion not completed
//        <1=> 1: 1 = Injection group conversion completed,write 0 to clear
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_STR_IDLE  ------------------------------------
// SVD Line: 155

//  <item> SFDITEM_FIELD__ADC_STR_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40003000) \nADC idle state indicate(is useful for sleep function)\n0 : 0 = ADC not in idle state\n1 : 1 = ADC is in idle state </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_STR ) </loc>
//      <o.3..3> IDLE
//        <0=> 0: 0 = ADC not in idle state
//        <1=> 1: 1 = ADC is in idle state
//    </combo>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_STR  ------------------------------------
// SVD Line: 89

//  <rtree> SFDITEM_REG__ADC_STR
//    <name> STR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003000) ADC status Register </i>
//    <loc> ( (unsigned int)((ADC_STR >> 0) & 0xFFFFFFFF), ((ADC_STR = (ADC_STR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_STR_AMO </item>
//    <item> SFDITEM_FIELD__ADC_STR_EOC </item>
//    <item> SFDITEM_FIELD__ADC_STR_IEOC </item>
//    <item> SFDITEM_FIELD__ADC_STR_IDLE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_CTRL1  --------------------------------
// SVD Line: 176

unsigned int ADC_CTRL1 __AT (0x40003004);



// -------------------------------  Field Item: ADC_CTRL1_AMOCH  ----------------------------------
// SVD Line: 185

//  <item> SFDITEM_FIELD__ADC_CTRL1_AMOCH
//    <name> AMOCH </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40003004) Analog monitor detecting channel </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CTRL1 >> 0) & 0x1F), ((ADC_CTRL1 = (ADC_CTRL1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_AMOSGL  ----------------------------------
// SVD Line: 192

//  <item> SFDITEM_FIELD__ADC_CTRL1_AMOSGL
//    <name> AMOSGL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40003004) \nAnalog monitor detecting channel\n0 : 0 = AMO used in All channels\n1 : 1 = AMO function used in single channel defined in AMOCH register </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.5..5> AMOSGL
//        <0=> 0: 0 = AMO used in All channels
//        <1=> 1: 1 = AMO function used in single channel defined in AMOCH register
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_IAMOEN  ----------------------------------
// SVD Line: 211

//  <item> SFDITEM_FIELD__ADC_CTRL1_IAMOEN
//    <name> IAMOEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40003004) Injection Group Analog Monitor Detect function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.6..6> IAMOEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_AMOEN  ----------------------------------
// SVD Line: 218

//  <item> SFDITEM_FIELD__ADC_CTRL1_AMOEN
//    <name> AMOEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40003004) Regular Group Analog Monitor Detect function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.7..7> AMOEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_DISCNUM  ---------------------------------
// SVD Line: 225

//  <item> SFDITEM_FIELD__ADC_CTRL1_DISCNUM
//    <name> DISCNUM </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40003004) Discontinuous conversion length of channel </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CTRL1 >> 8) & 0x7), ((ADC_CTRL1 = (ADC_CTRL1 & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_IAUTO  ----------------------------------
// SVD Line: 232

//  <item> SFDITEM_FIELD__ADC_CTRL1_IAUTO
//    <name> IAUTO </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40003004) \nInjection Group Automatic conversion\n0 : 0 = Injection group automatic conversion disabled\n1 : 1 = Injection group automatic conversion enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.11..11> IAUTO
//        <0=> 0: 0 = Injection group automatic conversion disabled
//        <1=> 1: 1 = Injection group automatic conversion enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_IDISCEN  ---------------------------------
// SVD Line: 251

//  <item> SFDITEM_FIELD__ADC_CTRL1_IDISCEN
//    <name> IDISCEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40003004) \nDiscontinous mode on injected channels\n0 : 0 = Injection group Discontinous mode disabled\n1 : 1 = Injection group Discontinous mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.12..12> IDISCEN
//        <0=> 0: 0 = Injection group Discontinous mode disabled
//        <1=> 1: 1 = Injection group Discontinous mode enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_DISCEN  ----------------------------------
// SVD Line: 270

//  <item> SFDITEM_FIELD__ADC_CTRL1_DISCEN
//    <name> DISCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40003004) \nDiscontinous mode on regular channels\n0 : 0 = regular group Discontinous mode disabled\n1 : 1 = regular group Discontinous mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.13..13> DISCEN
//        <0=> 0: 0 = regular group Discontinous mode disabled
//        <1=> 1: 1 = regular group Discontinous mode enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_CONT  -----------------------------------
// SVD Line: 289

//  <item> SFDITEM_FIELD__ADC_CTRL1_CONT
//    <name> CONT </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40003004) \nContinuous conversion\n0 : 0 = Single conversion mode\n1 : 1 = continuous conversion mode </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.14..14> CONT
//        <0=> 0: 0 = Single conversion mode
//        <1=> 1: 1 = continuous conversion mode
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_SCAN  -----------------------------------
// SVD Line: 308

//  <item> SFDITEM_FIELD__ADC_CTRL1_SCAN
//    <name> SCAN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40003004) \nScan Mode\n0 : 0 = Scan mode disabled\n1 : 1 = Scan mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.15..15> SCAN
//        <0=> 0: 0 = Scan mode disabled
//        <1=> 1: 1 = Scan mode enabled
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_EOCIE  ----------------------------------
// SVD Line: 327

//  <item> SFDITEM_FIELD__ADC_CTRL1_EOCIE
//    <name> EOCIE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40003004) \nEOC interrupt Enable\n0 : 0 = EOC interrupt Disabled\n1 : 1 = EOC interrupt Enabled, An interrupt is generated when the EOC bit is set </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.16..16> EOCIE
//        <0=> 0: 0 = EOC interrupt Disabled
//        <1=> 1: 1 = EOC interrupt Enabled, An interrupt is generated when the EOC bit is set
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_IEOCIE  ----------------------------------
// SVD Line: 346

//  <item> SFDITEM_FIELD__ADC_CTRL1_IEOCIE
//    <name> IEOCIE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40003004) \nIEOC interrupt Enable\n0 : 0 = IEOC interrupt Disabled\n1 : 1 = IEOC interrupt Enabled, An interrupt is generated when the IEOC bit is set </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.17..17> IEOCIE
//        <0=> 0: 0 = IEOC interrupt Disabled
//        <1=> 1: 1 = IEOC interrupt Enabled, An interrupt is generated when the IEOC bit is set
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_AMOIE  ----------------------------------
// SVD Line: 365

//  <item> SFDITEM_FIELD__ADC_CTRL1_AMOIE
//    <name> AMOIE </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40003004) \nAMO interrupt Enable\n0 : 0 = AMO interrupt Disabled\n1 : 1 = AMO interrupt Enabled, An interrupt is generated when the AMO bit is set </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.18..18> AMOIE
//        <0=> 0: 0 = AMO interrupt Disabled
//        <1=> 1: 1 = AMO interrupt Enabled, An interrupt is generated when the AMO bit is set
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_DMAEN  ----------------------------------
// SVD Line: 384

//  <item> SFDITEM_FIELD__ADC_CTRL1_DMAEN
//    <name> DMAEN </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40003004) \nDMA Function Enable\n0 : 0 = DMA function Disabled\n1 : 1 = DMA function Enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.19..19> DMAEN
//        <0=> 0: 0 = DMA function Disabled
//        <1=> 1: 1 = DMA function Enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_EXTTRIG  ---------------------------------
// SVD Line: 403

//  <item> SFDITEM_FIELD__ADC_CTRL1_EXTTRIG
//    <name> EXTTRIG </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40003004) \nRegular group trig source select\n0 : 0 = Internal trigger source(software trig)\n1 : 1 = external trigger source </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.20..20> EXTTRIG
//        <0=> 0: 0 = Internal trigger source(software trig)
//        <1=> 1: 1 = external trigger source
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_CTRL1_IEXTTRIG  ---------------------------------
// SVD Line: 422

//  <item> SFDITEM_FIELD__ADC_CTRL1_IEXTTRIG
//    <name> IEXTTRIG </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40003004) \nInject group trig source select\n0 : 0 = Internal trigger source(software trig)\n1 : 1 = external trigger source </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.21..21> IEXTTRIG
//        <0=> 0: 0 = Internal trigger source(software trig)
//        <1=> 1: 1 = external trigger source
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_CTRL1_ALIGN  ----------------------------------
// SVD Line: 441

//  <item> SFDITEM_FIELD__ADC_CTRL1_ALIGN
//    <name> ALIGN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40003004) \nData Alignment\n0 : 0 = Right Alignment\n1 : 1 = Left Alignment </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.22..22> ALIGN
//        <0=> 0: 0 = Right Alignment
//        <1=> 1: 1 = Left Alignment
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: ADC_CTRL1_ISWSTART  ---------------------------------
// SVD Line: 460

//  <item> SFDITEM_FIELD__ADC_CTRL1_ISWSTART
//    <name> ISWSTART </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40003004) software trigger for Inject channels </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.30..30> ISWSTART
//    </check>
//  </item>
//  


// ------------------------------  Field Item: ADC_CTRL1_SWSTART  ---------------------------------
// SVD Line: 467

//  <item> SFDITEM_FIELD__ADC_CTRL1_SWSTART
//    <name> SWSTART </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40003004) software trigger for regular channels </i>
//    <check> 
//      <loc> ( (unsigned int) ADC_CTRL1 ) </loc>
//      <o.31..31> SWSTART
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ADC_CTRL1  -----------------------------------
// SVD Line: 176

//  <rtree> SFDITEM_REG__ADC_CTRL1
//    <name> CTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003004) ADC control register 1 </i>
//    <loc> ( (unsigned int)((ADC_CTRL1 >> 0) & 0xFFFFFFFF), ((ADC_CTRL1 = (ADC_CTRL1 & ~(0xC07FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC07FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_CTRL1_AMOCH </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_AMOSGL </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_IAMOEN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_AMOEN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_DISCNUM </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_IAUTO </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_IDISCEN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_DISCEN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_CONT </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_SCAN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_EOCIE </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_IEOCIE </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_AMOIE </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_DMAEN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_EXTTRIG </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_IEXTTRIG </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_ALIGN </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_ISWSTART </item>
//    <item> SFDITEM_FIELD__ADC_CTRL1_SWSTART </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_CTRL2  --------------------------------
// SVD Line: 476

unsigned int ADC_CTRL2 __AT (0x40003008);



// -------------------------------  Field Item: ADC_CTRL2_ADON  -----------------------------------
// SVD Line: 485

//  <item> SFDITEM_FIELD__ADC_CTRL2_ADON
//    <name> ADON </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40003008) \nADC converter ON/OFF register\n0 : 0 = Disable ADC conversion and go to power down mode\n1 : 1 = Enable ADC and to start conversion </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_CTRL2 ) </loc>
//      <o.0..0> ADON
//        <0=> 0: 0 = Disable ADC conversion and go to power down mode
//        <1=> 1: 1 = Enable ADC and to start conversion
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_CTRL2_PSC  -----------------------------------
// SVD Line: 504

//  <item> SFDITEM_FIELD__ADC_CTRL2_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40003008) Bus Clock prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_CTRL2 >> 12) & 0xF), ((ADC_CTRL2 = (ADC_CTRL2 & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_CTRL2  -----------------------------------
// SVD Line: 476

//  <rtree> SFDITEM_REG__ADC_CTRL2
//    <name> CTRL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003008) ADC Control Register 2 </i>
//    <loc> ( (unsigned int)((ADC_CTRL2 >> 0) & 0xFFFFFFFF), ((ADC_CTRL2 = (ADC_CTRL2 & ~(0xF001UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF001) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_CTRL2_ADON </item>
//    <item> SFDITEM_FIELD__ADC_CTRL2_PSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_SPT1  --------------------------------
// SVD Line: 513

unsigned int ADC_SPT1 __AT (0x4000300C);



// -------------------------------  Field Item: ADC_SPT1_SPT10  -----------------------------------
// SVD Line: 522

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT10
//    <name> SPT10 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000300C) \nSample time for Channel 10\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.2..0> SPT10
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT11  -----------------------------------
// SVD Line: 571

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT11
//    <name> SPT11 </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x4000300C) \nSample time for Channel 11\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.5..3> SPT11
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT12  -----------------------------------
// SVD Line: 620

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT12
//    <name> SPT12 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x4000300C) \nSample time for Channel 12\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.8..6> SPT12
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT13  -----------------------------------
// SVD Line: 669

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT13
//    <name> SPT13 </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x4000300C) \nSample time for Channel 13\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.11..9> SPT13
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT14  -----------------------------------
// SVD Line: 718

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT14
//    <name> SPT14 </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x4000300C) \nSample time for Channel 14\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.14..12> SPT14
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT15  -----------------------------------
// SVD Line: 767

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT15
//    <name> SPT15 </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x4000300C) \nSample time for Channel 15\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.17..15> SPT15
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT16  -----------------------------------
// SVD Line: 816

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT16
//    <name> SPT16 </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x4000300C) \nSample time for Channel 16\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.20..18> SPT16
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ADC_SPT1_SPT17  -----------------------------------
// SVD Line: 865

//  <item> SFDITEM_FIELD__ADC_SPT1_SPT17
//    <name> SPT17 </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x4000300C) \nSample time for Channel 17\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT1 ) </loc>
//      <o.23..21> SPT17
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_SPT1  ------------------------------------
// SVD Line: 513

//  <rtree> SFDITEM_REG__ADC_SPT1
//    <name> SPT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000300C) ADC Sample time setting register 1 </i>
//    <loc> ( (unsigned int)((ADC_SPT1 >> 0) & 0xFFFFFFFF), ((ADC_SPT1 = (ADC_SPT1 & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT10 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT11 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT12 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT13 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT14 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT15 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT16 </item>
//    <item> SFDITEM_FIELD__ADC_SPT1_SPT17 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_SPT2  --------------------------------
// SVD Line: 916

unsigned int ADC_SPT2 __AT (0x40003010);



// --------------------------------  Field Item: ADC_SPT2_SPT0  -----------------------------------
// SVD Line: 925

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT0
//    <name> SPT0 </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40003010) \nSample time for Channel 0\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.2..0> SPT0
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT1  -----------------------------------
// SVD Line: 974

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT1
//    <name> SPT1 </name>
//    <rw> 
//    <i> [Bits 5..3] RW (@ 0x40003010) \nSample time for Channel 1\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.5..3> SPT1
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT2  -----------------------------------
// SVD Line: 1023

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT2
//    <name> SPT2 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40003010) \nSample time for Channel 2\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.8..6> SPT2
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT3  -----------------------------------
// SVD Line: 1072

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT3
//    <name> SPT3 </name>
//    <rw> 
//    <i> [Bits 11..9] RW (@ 0x40003010) \nSample time for Channel 3\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.11..9> SPT3
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT4  -----------------------------------
// SVD Line: 1121

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT4
//    <name> SPT4 </name>
//    <rw> 
//    <i> [Bits 14..12] RW (@ 0x40003010) \nSample time for Channel 4\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.14..12> SPT4
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT5  -----------------------------------
// SVD Line: 1170

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT5
//    <name> SPT5 </name>
//    <rw> 
//    <i> [Bits 17..15] RW (@ 0x40003010) \nSample time for Channel 5\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.17..15> SPT5
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT6  -----------------------------------
// SVD Line: 1219

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT6
//    <name> SPT6 </name>
//    <rw> 
//    <i> [Bits 20..18] RW (@ 0x40003010) \nSample time for Channel 6\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.20..18> SPT6
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT7  -----------------------------------
// SVD Line: 1268

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT7
//    <name> SPT7 </name>
//    <rw> 
//    <i> [Bits 23..21] RW (@ 0x40003010) \nSample time for Channel 7\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.23..21> SPT7
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT8  -----------------------------------
// SVD Line: 1317

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT8
//    <name> SPT8 </name>
//    <rw> 
//    <i> [Bits 26..24] RW (@ 0x40003010) \nSample time for Channel 8\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.26..24> SPT8
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ADC_SPT2_SPT9  -----------------------------------
// SVD Line: 1366

//  <item> SFDITEM_FIELD__ADC_SPT2_SPT9
//    <name> SPT9 </name>
//    <rw> 
//    <i> [Bits 29..27] RW (@ 0x40003010) \nSample time for Channel 9\n0 : 000 = 6 ADCCLK\n1 : 001 = 14 ADCCLK\n2 : 010 = 29 ADCCLK\n3 : 011 = 42 ADCCLK\n4 : 100 = 56 ADCCLK\n5 : 101 = 72 ADCCLK\n6 : 110 = 215 ADCCLK\n7 : 111 = 3 ADCCLK </i>
//    <combo> 
//      <loc> ( (unsigned int) ADC_SPT2 ) </loc>
//      <o.29..27> SPT9
//        <0=> 0: 000 = 6 ADCCLK
//        <1=> 1: 001 = 14 ADCCLK
//        <2=> 2: 010 = 29 ADCCLK
//        <3=> 3: 011 = 42 ADCCLK
//        <4=> 4: 100 = 56 ADCCLK
//        <5=> 5: 101 = 72 ADCCLK
//        <6=> 6: 110 = 215 ADCCLK
//        <7=> 7: 111 = 3 ADCCLK
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ADC_SPT2  ------------------------------------
// SVD Line: 916

//  <rtree> SFDITEM_REG__ADC_SPT2
//    <name> SPT2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003010) ADC Sample time setting register 2 </i>
//    <loc> ( (unsigned int)((ADC_SPT2 >> 0) & 0xFFFFFFFF), ((ADC_SPT2 = (ADC_SPT2 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT0 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT1 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT2 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT3 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT4 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT5 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT6 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT7 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT8 </item>
//    <item> SFDITEM_FIELD__ADC_SPT2_SPT9 </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC_IOFR_IOFR_IOFR1  ---------------------------
// SVD Line: 1417

unsigned int ADC_IOFR_IOFR_IOFR1 __AT (0x40003014);



// --------------------------  Field Item: ADC_IOFR_IOFR_IOFR1_IOFR  ------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR1_IOFR
//    <name> IOFR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003014) Injection group offset Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IOFR_IOFR_IOFR1 >> 0) & 0xFFF), ((ADC_IOFR_IOFR_IOFR1 = (ADC_IOFR_IOFR_IOFR1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: ADC_IOFR_IOFR_IOFR1  ------------------------------
// SVD Line: 1417

//  <rtree> SFDITEM_REG__ADC_IOFR_IOFR_IOFR1
//    <name> IOFR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003014) ADC Injection Group Offset Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IOFR_IOFR_IOFR1 >> 0) & 0xFFFFFFFF), ((ADC_IOFR_IOFR_IOFR1 = (ADC_IOFR_IOFR_IOFR1 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR1_IOFR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC_IOFR_IOFR_IOFR2  ---------------------------
// SVD Line: 1417

unsigned int ADC_IOFR_IOFR_IOFR2 __AT (0x40003018);



// --------------------------  Field Item: ADC_IOFR_IOFR_IOFR2_IOFR  ------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR2_IOFR
//    <name> IOFR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003018) Injection group offset Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IOFR_IOFR_IOFR2 >> 0) & 0xFFF), ((ADC_IOFR_IOFR_IOFR2 = (ADC_IOFR_IOFR_IOFR2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: ADC_IOFR_IOFR_IOFR2  ------------------------------
// SVD Line: 1417

//  <rtree> SFDITEM_REG__ADC_IOFR_IOFR_IOFR2
//    <name> IOFR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003018) ADC Injection Group Offset Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IOFR_IOFR_IOFR2 >> 0) & 0xFFFFFFFF), ((ADC_IOFR_IOFR_IOFR2 = (ADC_IOFR_IOFR_IOFR2 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR2_IOFR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC_IOFR_IOFR_IOFR3  ---------------------------
// SVD Line: 1417

unsigned int ADC_IOFR_IOFR_IOFR3 __AT (0x4000301C);



// --------------------------  Field Item: ADC_IOFR_IOFR_IOFR3_IOFR  ------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR3_IOFR
//    <name> IOFR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x4000301C) Injection group offset Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IOFR_IOFR_IOFR3 >> 0) & 0xFFF), ((ADC_IOFR_IOFR_IOFR3 = (ADC_IOFR_IOFR_IOFR3 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: ADC_IOFR_IOFR_IOFR3  ------------------------------
// SVD Line: 1417

//  <rtree> SFDITEM_REG__ADC_IOFR_IOFR_IOFR3
//    <name> IOFR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000301C) ADC Injection Group Offset Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IOFR_IOFR_IOFR3 >> 0) & 0xFFFFFFFF), ((ADC_IOFR_IOFR_IOFR3 = (ADC_IOFR_IOFR_IOFR3 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR3_IOFR </item>
//  </rtree>
//  


// -----------------------  Register Item Address: ADC_IOFR_IOFR_IOFR4  ---------------------------
// SVD Line: 1417

unsigned int ADC_IOFR_IOFR_IOFR4 __AT (0x40003020);



// --------------------------  Field Item: ADC_IOFR_IOFR_IOFR4_IOFR  ------------------------------
// SVD Line: 1429

//  <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR4_IOFR
//    <name> IOFR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003020) Injection group offset Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IOFR_IOFR_IOFR4 >> 0) & 0xFFF), ((ADC_IOFR_IOFR_IOFR4 = (ADC_IOFR_IOFR_IOFR4 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------  Register RTree: ADC_IOFR_IOFR_IOFR4  ------------------------------
// SVD Line: 1417

//  <rtree> SFDITEM_REG__ADC_IOFR_IOFR_IOFR4
//    <name> IOFR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003020) ADC Injection Group Offset Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IOFR_IOFR_IOFR4 >> 0) & 0xFFFFFFFF), ((ADC_IOFR_IOFR_IOFR4 = (ADC_IOFR_IOFR_IOFR4 & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_IOFR_IOFR_IOFR4_IOFR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_AWDH  --------------------------------
// SVD Line: 1438

unsigned int ADC_AWDH __AT (0x40003024);



// --------------------------------  Field Item: ADC_AWDH_AWDH  -----------------------------------
// SVD Line: 1447

//  <item> SFDITEM_FIELD__ADC_AWDH_AWDH
//    <name> AWDH </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003024) High threshold value for analog watchdog </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_AWDH >> 0) & 0xFFF), ((ADC_AWDH = (ADC_AWDH & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_AWDH  ------------------------------------
// SVD Line: 1438

//  <rtree> SFDITEM_REG__ADC_AWDH
//    <name> AWDH </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003024) AWD High threshold register </i>
//    <loc> ( (unsigned int)((ADC_AWDH >> 0) & 0xFFFFFFFF), ((ADC_AWDH = (ADC_AWDH & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_AWDH_AWDH </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_AWDL  --------------------------------
// SVD Line: 1456

unsigned int ADC_AWDL __AT (0x40003028);



// --------------------------------  Field Item: ADC_AWDL_AWDL  -----------------------------------
// SVD Line: 1465

//  <item> SFDITEM_FIELD__ADC_AWDL_AWDL
//    <name> AWDL </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40003028) Low threshold value for analog watchdog </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_AWDL >> 0) & 0xFFF), ((ADC_AWDL = (ADC_AWDL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_AWDL  ------------------------------------
// SVD Line: 1456

//  <rtree> SFDITEM_REG__ADC_AWDL
//    <name> AWDL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003028) AWD Low threshold register </i>
//    <loc> ( (unsigned int)((ADC_AWDL >> 0) & 0xFFFFFFFF), ((ADC_AWDL = (ADC_AWDL & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_AWDL_AWDL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_RSQR1  --------------------------------
// SVD Line: 1474

unsigned int ADC_RSQR1 __AT (0x4000302C);



// -------------------------------  Field Item: ADC_RSQR1_RSQ13  ----------------------------------
// SVD Line: 1483

//  <item> SFDITEM_FIELD__ADC_RSQR1_RSQ13
//    <name> RSQ13 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4000302C) channel selection for regular group 13 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR1 >> 0) & 0x1F), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR1_RSQ14  ----------------------------------
// SVD Line: 1490

//  <item> SFDITEM_FIELD__ADC_RSQR1_RSQ14
//    <name> RSQ14 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x4000302C) channel selection for regular group 14 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR1 >> 5) & 0x1F), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR1_RSQ15  ----------------------------------
// SVD Line: 1497

//  <item> SFDITEM_FIELD__ADC_RSQR1_RSQ15
//    <name> RSQ15 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x4000302C) channel selection for regular group 15 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR1 >> 10) & 0x1F), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR1_RSQ16  ----------------------------------
// SVD Line: 1504

//  <item> SFDITEM_FIELD__ADC_RSQR1_RSQ16
//    <name> RSQ16 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x4000302C) channel selection for regular group 16 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR1 >> 15) & 0x1F), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR1_RSQL  -----------------------------------
// SVD Line: 1511

//  <item> SFDITEM_FIELD__ADC_RSQR1_RSQL
//    <name> RSQL </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000302C) length of regular group </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR1 >> 20) & 0xF), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_RSQR1  -----------------------------------
// SVD Line: 1474

//  <rtree> SFDITEM_REG__ADC_RSQR1
//    <name> RSQR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000302C) ADC regular group sequence configure register 1 </i>
//    <loc> ( (unsigned int)((ADC_RSQR1 >> 0) & 0xFFFFFFFF), ((ADC_RSQR1 = (ADC_RSQR1 & ~(0xFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_RSQR1_RSQ13 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR1_RSQ14 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR1_RSQ15 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR1_RSQ16 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR1_RSQL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_RSQR2  --------------------------------
// SVD Line: 1520

unsigned int ADC_RSQR2 __AT (0x40003030);



// -------------------------------  Field Item: ADC_RSQR2_RSQ7  -----------------------------------
// SVD Line: 1529

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ7
//    <name> RSQ7 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40003030) channel selection for regular group 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 0) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR2_RSQ8  -----------------------------------
// SVD Line: 1536

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ8
//    <name> RSQ8 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40003030) channel selection for regular group 8 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 5) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR2_RSQ9  -----------------------------------
// SVD Line: 1543

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ9
//    <name> RSQ9 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40003030) channel selection for regular group 9 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 10) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR2_RSQ10  ----------------------------------
// SVD Line: 1550

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ10
//    <name> RSQ10 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40003030) channel selection for regular group 10 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 15) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR2_RSQ11  ----------------------------------
// SVD Line: 1557

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ11
//    <name> RSQ11 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x40003030) channel selection for regular group 11 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 20) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR2_RSQ12  ----------------------------------
// SVD Line: 1564

//  <item> SFDITEM_FIELD__ADC_RSQR2_RSQ12
//    <name> RSQ12 </name>
//    <rw> 
//    <i> [Bits 29..25] RW (@ 0x40003030) channel selection for regular group 12 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR2 >> 25) & 0x1F), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x1FUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_RSQR2  -----------------------------------
// SVD Line: 1520

//  <rtree> SFDITEM_REG__ADC_RSQR2
//    <name> RSQR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003030) ADC regular group sequence configure register 2 </i>
//    <loc> ( (unsigned int)((ADC_RSQR2 >> 0) & 0xFFFFFFFF), ((ADC_RSQR2 = (ADC_RSQR2 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ7 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ8 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ9 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ10 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ11 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR2_RSQ12 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ADC_RSQR3  --------------------------------
// SVD Line: 1573

unsigned int ADC_RSQR3 __AT (0x40003034);



// -------------------------------  Field Item: ADC_RSQR3_RSQ1  -----------------------------------
// SVD Line: 1582

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ1
//    <name> RSQ1 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40003034) channel selection for regular group 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 0) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR3_RSQ2  -----------------------------------
// SVD Line: 1589

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ2
//    <name> RSQ2 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40003034) channel selection for regular group 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 5) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR3_RSQ3  -----------------------------------
// SVD Line: 1596

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ3
//    <name> RSQ3 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40003034) channel selection for regular group 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 10) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR3_RSQ4  -----------------------------------
// SVD Line: 1603

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ4
//    <name> RSQ4 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40003034) channel selection for regular group 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 15) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR3_RSQ5  -----------------------------------
// SVD Line: 1610

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ5
//    <name> RSQ5 </name>
//    <rw> 
//    <i> [Bits 24..20] RW (@ 0x40003034) channel selection for regular group 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 20) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ADC_RSQR3_RSQ6  -----------------------------------
// SVD Line: 1617

//  <item> SFDITEM_FIELD__ADC_RSQR3_RSQ6
//    <name> RSQ6 </name>
//    <rw> 
//    <i> [Bits 29..25] RW (@ 0x40003034) channel selection for regular group 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_RSQR3 >> 25) & 0x1F), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x1FUL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_RSQR3  -----------------------------------
// SVD Line: 1573

//  <rtree> SFDITEM_REG__ADC_RSQR3
//    <name> RSQR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003034) ADC regular group sequence configure register 3 </i>
//    <loc> ( (unsigned int)((ADC_RSQR3 >> 0) & 0xFFFFFFFF), ((ADC_RSQR3 = (ADC_RSQR3 & ~(0x3FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ1 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ2 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ3 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ4 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ5 </item>
//    <item> SFDITEM_FIELD__ADC_RSQR3_RSQ6 </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_ISQR  --------------------------------
// SVD Line: 1626

unsigned int ADC_ISQR __AT (0x40003038);



// --------------------------------  Field Item: ADC_ISQR_ISQ1  -----------------------------------
// SVD Line: 1635

//  <item> SFDITEM_FIELD__ADC_ISQR_ISQ1
//    <name> ISQ1 </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40003038) channel selection for injection group 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ISQR >> 0) & 0x1F), ((ADC_ISQR = (ADC_ISQR & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ISQR_ISQ2  -----------------------------------
// SVD Line: 1642

//  <item> SFDITEM_FIELD__ADC_ISQR_ISQ2
//    <name> ISQ2 </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40003038) channel selection for injection group 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ISQR >> 5) & 0x1F), ((ADC_ISQR = (ADC_ISQR & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ISQR_ISQ3  -----------------------------------
// SVD Line: 1649

//  <item> SFDITEM_FIELD__ADC_ISQR_ISQ3
//    <name> ISQ3 </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40003038) channel selection for injection group 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ISQR >> 10) & 0x1F), ((ADC_ISQR = (ADC_ISQR & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ISQR_ISQ4  -----------------------------------
// SVD Line: 1656

//  <item> SFDITEM_FIELD__ADC_ISQR_ISQ4
//    <name> ISQ4 </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40003038) channel selection for injection group 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ISQR >> 15) & 0x1F), ((ADC_ISQR = (ADC_ISQR & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: ADC_ISQR_ISQL  -----------------------------------
// SVD Line: 1663

//  <item> SFDITEM_FIELD__ADC_ISQR_ISQL
//    <name> ISQL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40003038) length of injection group </i>
//    <edit> 
//      <loc> ( (unsigned char)((ADC_ISQR >> 20) & 0x3), ((ADC_ISQR = (ADC_ISQR & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ADC_ISQR  ------------------------------------
// SVD Line: 1626

//  <rtree> SFDITEM_REG__ADC_ISQR
//    <name> ISQR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40003038) ADC injection group sequence configure register </i>
//    <loc> ( (unsigned int)((ADC_ISQR >> 0) & 0xFFFFFFFF), ((ADC_ISQR = (ADC_ISQR & ~(0x3FFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ADC_ISQR_ISQ1 </item>
//    <item> SFDITEM_FIELD__ADC_ISQR_ISQ2 </item>
//    <item> SFDITEM_FIELD__ADC_ISQR_ISQ3 </item>
//    <item> SFDITEM_FIELD__ADC_ISQR_ISQ4 </item>
//    <item> SFDITEM_FIELD__ADC_ISQR_ISQL </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC_IDR_IDR_IDR1  ----------------------------
// SVD Line: 1672

unsigned int ADC_IDR_IDR_IDR1 __AT (0x4000303C);



// ----------------------------  Field Item: ADC_IDR_IDR_IDR1_IDR  --------------------------------
// SVD Line: 1684

//  <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR1_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x4000303C) Injection group data Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IDR_IDR_IDR1 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ADC_IDR_IDR_IDR1  --------------------------------
// SVD Line: 1672

//  <rtree> SFDITEM_REG__ADC_IDR_IDR_IDR1
//    <name> IDR1 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000303C) ADC Injection Group data Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IDR_IDR_IDR1 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR1_IDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC_IDR_IDR_IDR2  ----------------------------
// SVD Line: 1672

unsigned int ADC_IDR_IDR_IDR2 __AT (0x40003040);



// ----------------------------  Field Item: ADC_IDR_IDR_IDR2_IDR  --------------------------------
// SVD Line: 1684

//  <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR2_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x40003040) Injection group data Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IDR_IDR_IDR2 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ADC_IDR_IDR_IDR2  --------------------------------
// SVD Line: 1672

//  <rtree> SFDITEM_REG__ADC_IDR_IDR_IDR2
//    <name> IDR2 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003040) ADC Injection Group data Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IDR_IDR_IDR2 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR2_IDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC_IDR_IDR_IDR3  ----------------------------
// SVD Line: 1672

unsigned int ADC_IDR_IDR_IDR3 __AT (0x40003044);



// ----------------------------  Field Item: ADC_IDR_IDR_IDR3_IDR  --------------------------------
// SVD Line: 1684

//  <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR3_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x40003044) Injection group data Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IDR_IDR_IDR3 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ADC_IDR_IDR_IDR3  --------------------------------
// SVD Line: 1672

//  <rtree> SFDITEM_REG__ADC_IDR_IDR_IDR3
//    <name> IDR3 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003044) ADC Injection Group data Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IDR_IDR_IDR3 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR3_IDR </item>
//  </rtree>
//  


// -------------------------  Register Item Address: ADC_IDR_IDR_IDR4  ----------------------------
// SVD Line: 1672

unsigned int ADC_IDR_IDR_IDR4 __AT (0x40003048);



// ----------------------------  Field Item: ADC_IDR_IDR_IDR4_IDR  --------------------------------
// SVD Line: 1684

//  <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR4_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x40003048) Injection group data Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_IDR_IDR_IDR4 >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: ADC_IDR_IDR_IDR4  --------------------------------
// SVD Line: 1672

//  <rtree> SFDITEM_REG__ADC_IDR_IDR_IDR4
//    <name> IDR4 </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40003048) ADC Injection Group data Register(n) </i>
//    <loc> ( (unsigned int)((ADC_IDR_IDR_IDR4 >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_IDR_IDR_IDR4_IDR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ADC_RDR  ---------------------------------
// SVD Line: 1693

unsigned int ADC_RDR __AT (0x4000304C);



// ---------------------------------  Field Item: ADC_RDR_IDR  ------------------------------------
// SVD Line: 1702

//  <item> SFDITEM_FIELD__ADC_RDR_IDR
//    <name> IDR </name>
//    <r> 
//    <i> [Bits 11..0] RO (@ 0x4000304C) Regular group data Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((ADC_RDR >> 0) & 0xFFF) ) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: ADC_RDR  ------------------------------------
// SVD Line: 1693

//  <rtree> SFDITEM_REG__ADC_RDR
//    <name> RDR </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x4000304C) ADC Regular Group data Register </i>
//    <loc> ( (unsigned int)((ADC_RDR >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__ADC_RDR_IDR </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: ADC  --------------------------------------
// SVD Line: 74

//  <view> ADC
//    <name> ADC </name>
//    <item> SFDITEM_REG__ADC_STR </item>
//    <item> SFDITEM_REG__ADC_CTRL1 </item>
//    <item> SFDITEM_REG__ADC_CTRL2 </item>
//    <item> SFDITEM_REG__ADC_SPT1 </item>
//    <item> SFDITEM_REG__ADC_SPT2 </item>
//    <item> SFDITEM_REG__ADC_IOFR_IOFR_IOFR1 </item>
//    <item> SFDITEM_REG__ADC_IOFR_IOFR_IOFR2 </item>
//    <item> SFDITEM_REG__ADC_IOFR_IOFR_IOFR3 </item>
//    <item> SFDITEM_REG__ADC_IOFR_IOFR_IOFR4 </item>
//    <item> SFDITEM_REG__ADC_AWDH </item>
//    <item> SFDITEM_REG__ADC_AWDL </item>
//    <item> SFDITEM_REG__ADC_RSQR1 </item>
//    <item> SFDITEM_REG__ADC_RSQR2 </item>
//    <item> SFDITEM_REG__ADC_RSQR3 </item>
//    <item> SFDITEM_REG__ADC_ISQR </item>
//    <item> SFDITEM_REG__ADC_IDR_IDR_IDR1 </item>
//    <item> SFDITEM_REG__ADC_IDR_IDR_IDR2 </item>
//    <item> SFDITEM_REG__ADC_IDR_IDR_IDR3 </item>
//    <item> SFDITEM_REG__ADC_IDR_IDR_IDR4 </item>
//    <item> SFDITEM_REG__ADC_RDR </item>
//  </view>
//  


// ----------------------------  Register Item Address: PWDT_INIT0  -------------------------------
// SVD Line: 1729

unsigned int PWDT_INIT0 __AT (0x40017000);



// -------------------------------  Field Item: PWDT_INIT0_OVF  -----------------------------------
// SVD Line: 1738

//  <item> SFDITEM_FIELD__PWDT_INIT0_OVF
//    <name> OVF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40017000) \nPWDT Counter Overflow flag\n0 : 0 = PWDT counter no overflow.\n1 : 1 = PWDT counter runs from 0xFFFF to 0x0000. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.0..0> OVF
//        <0=> 0: 0 = PWDT counter no overflow.
//        <1=> 1: 1 = PWDT counter runs from 0xFFFF to 0x0000.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWDT_INIT0_RDYF  ----------------------------------
// SVD Line: 1757

//  <item> SFDITEM_FIELD__PWDT_INIT0_RDYF
//    <name> RDYF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40017000) \nPWDT Pulse Width Valid Flag\n0 : 0 = PWDT pulse width register(s) is not up-to-date.\n1 : 1 = PWDT pulse width register(s) has been updated. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.1..1> RDYF
//        <0=> 0: 0 = PWDT pulse width register(s) is not up-to-date.
//        <1=> 1: 1 = PWDT pulse width register(s) has been updated.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: PWDT_INIT0_SR  -----------------------------------
// SVD Line: 1776

//  <item> SFDITEM_FIELD__PWDT_INIT0_SR
//    <name> SR </name>
//    <w> 
//    <i> [Bit 2] WO (@ 0x40017000) \nPWDT Soft Reset Register\n0 : 0 = No action taken.\n1 : 1 = Writing 1 to this field will perform soft reset to PWDT. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.2..2> SR
//        <0=> 0: 0 = No action taken.
//        <1=> 1: 1 = Writing 1 to this field will perform soft reset to PWDT.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWDT_INIT0_OVIE  ----------------------------------
// SVD Line: 1795

//  <item> SFDITEM_FIELD__PWDT_INIT0_OVIE
//    <name> OVIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40017000) \nPWDT Counter Overflow Interrupt Enable\n0 : 0 = Disable PWDT to generate interrupt when PWDTOV is set.\n1 : 1 = Enable PWDT to generate interrupt when PWDTOV is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.3..3> OVIE
//        <0=> 0: 0 = Disable PWDT to generate interrupt when PWDTOV is set.
//        <1=> 1: 1 = Enable PWDT to generate interrupt when PWDTOV is set.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT0_PRDYIE  ---------------------------------
// SVD Line: 1814

//  <item> SFDITEM_FIELD__PWDT_INIT0_PRDYIE
//    <name> PRDYIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40017000) \nPWDT Pulse Width Data Ready Interrupt Enable\n0 : 0 = Disable PWDT to generate interrupt when PWDTRDY is set.\n1 : 1 = Enable PWDT to generate interrupt when PWDTRDY is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.4..4> PRDYIE
//        <0=> 0: 0 = Disable PWDT to generate interrupt when PWDTRDY is set.
//        <1=> 1: 1 = Enable PWDT to generate interrupt when PWDTRDY is set.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: PWDT_INIT0_IE  -----------------------------------
// SVD Line: 1833

//  <item> SFDITEM_FIELD__PWDT_INIT0_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40017000) \nPWDT Module Interrupt Enable\n0 : 0 = Disables the PWDT to generate interrupt.\n1 : 1 = Enables the PWDT to generate interrupt. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.5..5> IE
//        <0=> 0: 0 = Disables the PWDT to generate interrupt.
//        <1=> 1: 1 = Enables the PWDT to generate interrupt.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT0_PWDTEN  ---------------------------------
// SVD Line: 1852

//  <item> SFDITEM_FIELD__PWDT_INIT0_PWDTEN
//    <name> PWDTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40017000) \nPWDT Module Enable\n0 : 0 = The PWDT is disabled.\n1 : 1 = The PWDT is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.6..6> PWDTEN
//        <0=> 0: 0 = The PWDT is disabled.
//        <1=> 1: 1 = The PWDT is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWDT_INIT0_PSC  -----------------------------------
// SVD Line: 1871

//  <item> SFDITEM_FIELD__PWDT_INIT0_PSC
//    <name> PSC </name>
//    <rw> 
//    <i> [Bits 9..7] RW (@ 0x40017000) \nPWDT Clock Prescaler (CLKPRE) Setting\n0 : 000 = Clock divided by 1.\n1 : 001 = Clock divided by 2.\n2 : 010 = Clock divided by 4.\n3 : 011 = Clock divided by 8.\n4 : 100 = Clock divided by 16.\n5 : 101 = Clock divided by 32.\n6 : 110 = Clock divided by 64.\n7 : 111 = Clock divided by 128. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.9..7> PSC
//        <0=> 0: 000 = Clock divided by 1.
//        <1=> 1: 001 = Clock divided by 2.
//        <2=> 2: 010 = Clock divided by 4.
//        <3=> 3: 011 = Clock divided by 8.
//        <4=> 4: 100 = Clock divided by 16.
//        <5=> 5: 101 = Clock divided by 32.
//        <6=> 6: 110 = Clock divided by 64.
//        <7=> 7: 111 = Clock divided by 128.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWDT_INIT0_EDGE  ----------------------------------
// SVD Line: 1920

//  <item> SFDITEM_FIELD__PWDT_INIT0_EDGE
//    <name> EDGE </name>
//    <rw> 
//    <i> [Bits 11..10] RW (@ 0x40017000) \nPWDT Input Edge Sensitivity\n0 : 00 = The first falling-edge starts the pulse width measurement, and on all the subsequent falling edges, the pulse width is captured.\n1 : 01 = The first rising edge starts the pulse width measurement, and on all the subsequent rising and falling edges, the pulse width is captured.\n2 : 10 = The first falling edge starts the pulse width measurement, and on all the subsequent rising and falling edges, the pulse width is captured.\n3 : 11 = The first-rising edge starts the pulse width measurement, and on all the subsequent rising edges, the pulse width is captured. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.11..10> EDGE
//        <0=> 0: 00 = The first falling-edge starts the pulse width measurement, and on all the subsequent falling edges, the pulse width is captured.
//        <1=> 1: 01 = The first rising edge starts the pulse width measurement, and on all the subsequent rising and falling edges, the pulse width is captured.
//        <2=> 2: 10 = The first falling edge starts the pulse width measurement, and on all the subsequent rising and falling edges, the pulse width is captured.
//        <3=> 3: 11 = The first-rising edge starts the pulse width measurement, and on all the subsequent rising edges, the pulse width is captured.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT0_PINSEL  ---------------------------------
// SVD Line: 1949

//  <item> SFDITEM_FIELD__PWDT_INIT0_PINSEL
//    <name> PINSEL </name>
//    <rw> 
//    <i> [Bits 13..12] RW (@ 0x40017000) \nPWDT Pulse Inputs Selection\n0 : 00 = PWDTIN[0] is enabled.\n1 : 01 = PWDTIN[1] is enabled.\n2 : 10 = PWDTIN[2] enabled.\n3 : 11 = PWDTIN[3] enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.13..12> PINSEL
//        <0=> 0: 00 = PWDTIN[0] is enabled.
//        <1=> 1: 01 = PWDTIN[1] is enabled.
//        <2=> 2: 10 = PWDTIN[2] enabled.
//        <3=> 3: 11 = PWDTIN[3] enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWDT_INIT0_PCLKSEL  ---------------------------------
// SVD Line: 1978

//  <item> SFDITEM_FIELD__PWDT_INIT0_PCLKSEL
//    <name> PCLKSEL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40017000) \nPWDT Clock Source Selection\n0 : 0 = Bus clock is selected as the clock source of PWDT counter.\n1 : 1 = Alternative clock is selected as the clock source of PWDT counter. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT0 ) </loc>
//      <o.15..15> PCLKSEL
//        <0=> 0: 0 = Bus clock is selected as the clock source of PWDT counter.
//        <1=> 1: 1 = Alternative clock is selected as the clock source of PWDT counter.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT0_PPWCV  ----------------------------------
// SVD Line: 1997

//  <item> SFDITEM_FIELD__PWDT_INIT0_PPWCV
//    <name> PPWCV </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x40017000) Positive Pulse Width Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWDT_INIT0 >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWDT_INIT0  -----------------------------------
// SVD Line: 1729

//  <rtree> SFDITEM_REG__PWDT_INIT0
//    <name> INIT0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017000) PWDT Initialize Register 0 </i>
//    <loc> ( (unsigned int)((PWDT_INIT0 >> 0) & 0xFFFFFFFF), ((PWDT_INIT0 = (PWDT_INIT0 & ~(0xBFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWDT_INIT0_OVF </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_RDYF </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_SR </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_OVIE </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PRDYIE </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_IE </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PWDTEN </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PSC </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_EDGE </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PINSEL </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PCLKSEL </item>
//    <item> SFDITEM_FIELD__PWDT_INIT0_PPWCV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWDT_NPWCV  -------------------------------
// SVD Line: 2006

unsigned int PWDT_NPWCV __AT (0x40017004);



// ------------------------------  Field Item: PWDT_NPWCV_NPWCV  ----------------------------------
// SVD Line: 2015

//  <item> SFDITEM_FIELD__PWDT_NPWCV_NPWCV
//    <name> NPWCV </name>
//    <r> 
//    <i> [Bits 15..0] RO (@ 0x40017004) Negative Pulse Width. It is suggested to use half-word (16-bit) or word (32-bit) to read out this value. </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWDT_NPWCV >> 0) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWDT_NPWCV_PWDTC  ----------------------------------
// SVD Line: 2022

//  <item> SFDITEM_FIELD__PWDT_NPWCV_PWDTC
//    <name> PWDTC </name>
//    <r> 
//    <i> [Bits 31..16] RO (@ 0x40017004) PWDT Counter. It is suggested to use half-word (16-bit) or word (32-bit) to read out this value. </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWDT_NPWCV >> 16) & 0xFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWDT_NPWCV  -----------------------------------
// SVD Line: 2006

//  <rtree> SFDITEM_REG__PWDT_NPWCV
//    <name> NPWCV </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40017004) Negative Pulse Width Count Value </i>
//    <loc> ( (unsigned int)((PWDT_NPWCV >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__PWDT_NPWCV_NPWCV </item>
//    <item> SFDITEM_FIELD__PWDT_NPWCV_PWDTC </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWDT_INIT1  -------------------------------
// SVD Line: 2031

unsigned int PWDT_INIT1 __AT (0x40017008);



// -----------------------------  Field Item: PWDT_INIT1_FILTVAL  ---------------------------------
// SVD Line: 2040

//  <item> SFDITEM_FIELD__PWDT_INIT1_FILTVAL
//    <name> FILTVAL </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40017008) PWDT filter Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWDT_INIT1 >> 0) & 0xF), ((PWDT_INIT1 = (PWDT_INIT1 & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: PWDT_INIT1_FILTPSC  ---------------------------------
// SVD Line: 2047

//  <item> SFDITEM_FIELD__PWDT_INIT1_FILTPSC
//    <name> FILTPSC </name>
//    <rw> 
//    <i> [Bits 7..4] RW (@ 0x40017008) PWDT input filter function Enable Bit </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWDT_INIT1 >> 4) & 0xF), ((PWDT_INIT1 = (PWDT_INIT1 & ~(0xFUL << 4 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 4 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT1_FILTEN  ---------------------------------
// SVD Line: 2054

//  <item> SFDITEM_FIELD__PWDT_INIT1_FILTEN
//    <name> FILTEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40017008) \nPWDT input filter function Enable Bit\n0 : 0 = PWDT input filter function is disable\n1 : 1 = PWDT input filter function is enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT1 ) </loc>
//      <o.8..8> FILTEN
//        <0=> 0: 0 = PWDT input filter function is disable
//        <1=> 1: 1 = PWDT input filter function is enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT1_HALLEN  ---------------------------------
// SVD Line: 2073

//  <item> SFDITEM_FIELD__PWDT_INIT1_HALLEN
//    <name> HALLEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40017008) \nHall Sensor Signal Detect function Enable Bit\n0 : 0 = Hall Sensor Signal Detect function Disable\n1 : 1 = Hall Sensor Signal Detect function Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT1 ) </loc>
//      <o.9..9> HALLEN
//        <0=> 0: 0 = Hall Sensor Signal Detect function Disable
//        <1=> 1: 1 = Hall Sensor Signal Detect function Enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT1_TIMEN  ----------------------------------
// SVD Line: 2092

//  <item> SFDITEM_FIELD__PWDT_INIT1_TIMEN
//    <name> TIMEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40017008) \nPWDT Timer Function Enable Bit\n0 : 0 = PWDT Timer Function Disable\n1 : 1 = PWDT Timer Function Enable . </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT1 ) </loc>
//      <o.10..10> TIMEN
//        <0=> 0: 0 = PWDT Timer Function Disable
//        <1=> 1: 1 = PWDT Timer Function Enable .
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWDT_INIT1_CMPEN  ----------------------------------
// SVD Line: 2111

//  <item> SFDITEM_FIELD__PWDT_INIT1_CMPEN
//    <name> CMPEN </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40017008) \nPWDT Compare Mode Enable Bit\n0 : 0 = enable the pwt_in0 ~ pwt_in2 derived from acmp0_pwt_a ~ acmp0_pwt_c external\n1 : 1 = enable the pwt_in0 ~ pwt_in2 derived from acmp0_pwt_a ~ acmp0_pwt_c internally </i>
//    <combo> 
//      <loc> ( (unsigned int) PWDT_INIT1 ) </loc>
//      <o.11..11> CMPEN
//        <0=> 0: 0 = enable the pwt_in0 ~ pwt_in2 derived from acmp0_pwt_a ~ acmp0_pwt_c external
//        <1=> 1: 1 = enable the pwt_in0 ~ pwt_in2 derived from acmp0_pwt_a ~ acmp0_pwt_c internally
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWDT_INIT1_TIMCNTVAL  --------------------------------
// SVD Line: 2130

//  <item> SFDITEM_FIELD__PWDT_INIT1_TIMCNTVAL
//    <name> TIMCNTVAL </name>
//    <rw> 
//    <i> [Bits 27..12] RW (@ 0x40017008) PWDT Timer Load Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWDT_INIT1 >> 12) & 0xFFFF), ((PWDT_INIT1 = (PWDT_INIT1 & ~(0xFFFFUL << 12 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: PWDT_INIT1_HALLSTATUS  -------------------------------
// SVD Line: 2137

//  <item> SFDITEM_FIELD__PWDT_INIT1_HALLSTATUS
//    <name> HALLSTATUS </name>
//    <r> 
//    <i> [Bits 30..28] RO (@ 0x40017008) HALL Sensor C Status Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWDT_INIT1 >> 28) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWDT_INIT1  -----------------------------------
// SVD Line: 2031

//  <rtree> SFDITEM_REG__PWDT_INIT1
//    <name> INIT1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40017008) Pulse Width Detection Timer Initialize Register 1 </i>
//    <loc> ( (unsigned int)((PWDT_INIT1 >> 0) & 0xFFFFFFFF), ((PWDT_INIT1 = (PWDT_INIT1 & ~(0xFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWDT_INIT1_FILTVAL </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_FILTPSC </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_FILTEN </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_HALLEN </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_TIMEN </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_CMPEN </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_TIMCNTVAL </item>
//    <item> SFDITEM_FIELD__PWDT_INIT1_HALLSTATUS </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWDT  -------------------------------------
// SVD Line: 1714

//  <view> PWDT
//    <name> PWDT </name>
//    <item> SFDITEM_REG__PWDT_INIT0 </item>
//    <item> SFDITEM_REG__PWDT_NPWCV </item>
//    <item> SFDITEM_REG__PWDT_INIT1 </item>
//  </view>
//  


// ----------------------------  Register Item Address: ACMP0_CR0  --------------------------------
// SVD Line: 2165

unsigned int ACMP0_CR0 __AT (0x40005000);



// --------------------------------  Field Item: ACMP0_CR0_MOD  -----------------------------------
// SVD Line: 2174

//  <item> SFDITEM_FIELD__ACMP0_CR0_MOD
//    <name> MOD </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40005000) \nACMP0 sensitivity modes of the interrupt trigger\n0 : 00 = ACMP0 interrupt on output falling edge.\n1 : 01 = ACMP0 interrupt on output rising edge.\n2 : 10 = ACMP0 interrupt on output falling edge.\n3 : 11 = ACMP0 interrupt on output falling or rising edge. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR0 ) </loc>
//      <o.1..0> MOD
//        <0=> 0: 00 = ACMP0 interrupt on output falling edge.
//        <1=> 1: 01 = ACMP0 interrupt on output rising edge.
//        <2=> 2: 10 = ACMP0 interrupt on output falling edge.
//        <3=> 3: 11 = ACMP0 interrupt on output falling or rising edge.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ACMP0_CR0_OPE  -----------------------------------
// SVD Line: 2203

//  <item> SFDITEM_FIELD__ACMP0_CR0_OPE
//    <name> OPE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005000) \nACMP0 hall output Enable\n0 : 0 = ACMP0 hall output Disabled.\n1 : 1 = ACMP0 hall output enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR0 ) </loc>
//      <o.2..2> OPE
//        <0=> 0: 0 = ACMP0 hall output Disabled.
//        <1=> 1: 1 = ACMP0 hall output enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ACMP0_CR0_IE  ------------------------------------
// SVD Line: 2222

//  <item> SFDITEM_FIELD__ACMP0_CR0_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005000) \nACMP0 Interrupt Enable\n0 : 0 = Disable the ACMP Interrupt.\n1 : 1 = Enable the ACMP Interrupt. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR0 ) </loc>
//      <o.4..4> IE
//        <0=> 0: 0 = Disable the ACMP Interrupt.
//        <1=> 1: 1 = Enable the ACMP Interrupt.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ACMP0_CR0_HYST  -----------------------------------
// SVD Line: 2241

//  <item> SFDITEM_FIELD__ACMP0_CR0_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005000) \nAnalog Comparator Hysterisis Selection\n0 : 0 = 20 mV.\n1 : 1 = 30 mV. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR0 ) </loc>
//      <o.6..6> HYST
//        <0=> 0: 0 = 20 mV.
//        <1=> 1: 1 = 30 mV.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ACMP0_CR0_EN  ------------------------------------
// SVD Line: 2260

//  <item> SFDITEM_FIELD__ACMP0_CR0_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005000) \nAnalog Comparator Enable\n0 : 0 = The ACMP is disabled.\n1 : 1 = The ACMP is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR0 ) </loc>
//      <o.7..7> EN
//        <0=> 0: 0 = The ACMP is disabled.
//        <1=> 1: 1 = The ACMP is enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_CR0  -----------------------------------
// SVD Line: 2165

//  <rtree> SFDITEM_REG__ACMP0_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005000) ACMP0 Configuration Register 0 </i>
//    <loc> ( (unsigned int)((ACMP0_CR0 >> 0) & 0xFFFFFFFF), ((ACMP0_CR0 = (ACMP0_CR0 & ~(0xD7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xD7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CR0_MOD </item>
//    <item> SFDITEM_FIELD__ACMP0_CR0_OPE </item>
//    <item> SFDITEM_FIELD__ACMP0_CR0_IE </item>
//    <item> SFDITEM_FIELD__ACMP0_CR0_HYST </item>
//    <item> SFDITEM_FIELD__ACMP0_CR0_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_CR1  --------------------------------
// SVD Line: 2281

unsigned int ACMP0_CR1 __AT (0x40005004);



// -------------------------------  Field Item: ACMP0_CR1_NSEL  -----------------------------------
// SVD Line: 2290

//  <item> SFDITEM_FIELD__ACMP0_CR1_NSEL
//    <name> NSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40005004) \nACMP0 Negative Input Select\n0 : 000 = External input 0\n1 : 001 = External input 1\n2 : 010 = External input 2\n3 : 011 = External input 3\n4 : 100 = External input 4\n5 : 101 = DAC0 Output\n6 : 110 = ACMP0 output tie 0\n7 : 111 = ACMP0 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR1 ) </loc>
//      <o.2..0> NSEL
//        <0=> 0: 000 = External input 0
//        <1=> 1: 001 = External input 1
//        <2=> 2: 010 = External input 2
//        <3=> 3: 011 = External input 3
//        <4=> 4: 100 = External input 4
//        <5=> 5: 101 = DAC0 Output
//        <6=> 6: 110 = ACMP0 output tie 0
//        <7=> 7: 111 = ACMP0 output tie 0
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ACMP0_CR1_PSEL  -----------------------------------
// SVD Line: 2339

//  <item> SFDITEM_FIELD__ACMP0_CR1_PSEL
//    <name> PSEL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40005004) \nACMP0 Positive Input Select\n0 : 000 = External input 0\n1 : 001 = External input 1\n2 : 010 = External input 2\n3 : 011 = External input 3\n4 : 100 = External input 4\n5 : 101 = DAC0 Output\n6 : 110 = ACMP0 output tie 0\n7 : 111 = ACMP0 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR1 ) </loc>
//      <o.6..4> PSEL
//        <0=> 0: 000 = External input 0
//        <1=> 1: 001 = External input 1
//        <2=> 2: 010 = External input 2
//        <3=> 3: 011 = External input 3
//        <4=> 4: 100 = External input 4
//        <5=> 5: 101 = DAC0 Output
//        <6=> 6: 110 = ACMP0 output tie 0
//        <7=> 7: 111 = ACMP0 output tie 0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_CR1  -----------------------------------
// SVD Line: 2281

//  <rtree> SFDITEM_REG__ACMP0_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005004) ACMP Configuration Register 1 </i>
//    <loc> ( (unsigned int)((ACMP0_CR1 >> 0) & 0xFFFFFFFF), ((ACMP0_CR1 = (ACMP0_CR1 & ~(0x77UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CR1_NSEL </item>
//    <item> SFDITEM_FIELD__ACMP0_CR1_PSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_CR2  --------------------------------
// SVD Line: 2390

unsigned int ACMP0_CR2 __AT (0x40005008);



// --------------------------------  Field Item: ACMP0_CR2_VAL  -----------------------------------
// SVD Line: 2399

//  <item> SFDITEM_FIELD__ACMP0_CR2_VAL
//    <name> VAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40005008) DAC0 Output Level Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_CR2 >> 0) & 0x3F), ((ACMP0_CR2 = (ACMP0_CR2 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ACMP0_CR2_DACEN  ----------------------------------
// SVD Line: 2406

//  <item> SFDITEM_FIELD__ACMP0_CR2_DACEN
//    <name> DACEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005008) \nDAC Enable\n0 : 0 = The DAC0 is disabled.\n1 : 1 = The DAC0 is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR2 ) </loc>
//      <o.7..7> DACEN
//        <0=> 0: 0 = The DAC0 is disabled.
//        <1=> 1: 1 = The DAC0 is enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_CR2  -----------------------------------
// SVD Line: 2390

//  <rtree> SFDITEM_REG__ACMP0_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005008) ACMP0 configuration register 2 </i>
//    <loc> ( (unsigned int)((ACMP0_CR2 >> 0) & 0xFFFFFFFF), ((ACMP0_CR2 = (ACMP0_CR2 & ~(0xBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CR2_VAL </item>
//    <item> SFDITEM_FIELD__ACMP0_CR2_DACEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_CR3  --------------------------------
// SVD Line: 2427

unsigned int ACMP0_CR3 __AT (0x4000500C);



// ------------------------------  Field Item: ACMP0_CR3_NSPLEN  ----------------------------------
// SVD Line: 2436

//  <item> SFDITEM_FIELD__ACMP0_CR3_NSPLEN
//    <name> NSPLEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000500C) \nACMP0 negative input polling mode enable\n0 : 0 = ACMP0 negative input polling mode disabled\n1 : 1 = ACMP0 negative input polling mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR3 ) </loc>
//      <o.3..3> NSPLEN
//        <0=> 0: 0 = ACMP0 negative input polling mode disabled
//        <1=> 1: 1 = ACMP0 negative input polling mode enabled
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: ACMP0_CR3_PSPLEN  ----------------------------------
// SVD Line: 2455

//  <item> SFDITEM_FIELD__ACMP0_CR3_PSPLEN
//    <name> PSPLEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000500C) \nACMP0 positive input polling mode enable\n0 : 0 = ACMP0 positive input polling mode disabled\n1 : 1 = ACMP0 positive input polling mode enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_CR3 ) </loc>
//      <o.7..7> PSPLEN
//        <0=> 0: 0 = ACMP0 positive input polling mode disabled
//        <1=> 1: 1 = ACMP0 positive input polling mode enabled
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_CR3  -----------------------------------
// SVD Line: 2427

//  <rtree> SFDITEM_REG__ACMP0_CR3
//    <name> CR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000500C) ACMP0 configuration register 3 </i>
//    <loc> ( (unsigned int)((ACMP0_CR3 >> 0) & 0xFFFFFFFF), ((ACMP0_CR3 = (ACMP0_CR3 & ~(0x88UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x88) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CR3_NSPLEN </item>
//    <item> SFDITEM_FIELD__ACMP0_CR3_PSPLEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_CR4  --------------------------------
// SVD Line: 2476

unsigned int ACMP0_CR4 __AT (0x40005010);



// -------------------------------  Field Item: ACMP0_CR4_PLSEQ  ----------------------------------
// SVD Line: 2485

//  <item> SFDITEM_FIELD__ACMP0_CR4_PLSEQ
//    <name> PLSEQ </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40005010) ACMP0 polling channel sequence set </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP0_CR4 >> 0) & 0x3F), ((ACMP0_CR4 = (ACMP0_CR4 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_CR4  -----------------------------------
// SVD Line: 2476

//  <rtree> SFDITEM_REG__ACMP0_CR4
//    <name> CR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005010) ACMP0 configuration register 4 </i>
//    <loc> ( (unsigned int)((ACMP0_CR4 >> 0) & 0xFFFFFFFF), ((ACMP0_CR4 = (ACMP0_CR4 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_CR4_PLSEQ </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ACMP0_DR  --------------------------------
// SVD Line: 2494

unsigned int ACMP0_DR __AT (0x40005014);



// ---------------------------------  Field Item: ACMP0_DR_O0  ------------------------------------
// SVD Line: 2503

//  <item> SFDITEM_FIELD__ACMP0_DR_O0
//    <name> O0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005014) ACMP0 polling mode channel 0 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.0..0> O0
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O1  ------------------------------------
// SVD Line: 2510

//  <item> SFDITEM_FIELD__ACMP0_DR_O1
//    <name> O1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005014) ACMP0 polling mode channel 1 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.1..1> O1
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O2  ------------------------------------
// SVD Line: 2517

//  <item> SFDITEM_FIELD__ACMP0_DR_O2
//    <name> O2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005014) ACMP0 polling mode channel 2 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.2..2> O2
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O3  ------------------------------------
// SVD Line: 2524

//  <item> SFDITEM_FIELD__ACMP0_DR_O3
//    <name> O3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005014) ACMP0 polling mode channel 3 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.3..3> O3
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O4  ------------------------------------
// SVD Line: 2531

//  <item> SFDITEM_FIELD__ACMP0_DR_O4
//    <name> O4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005014) ACMP0 polling mode channel 4 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.4..4> O4
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O5  ------------------------------------
// SVD Line: 2538

//  <item> SFDITEM_FIELD__ACMP0_DR_O5
//    <name> O5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005014) ACMP0 polling mode channel 5 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.5..5> O5
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_DR_O  -------------------------------------
// SVD Line: 2545

//  <item> SFDITEM_FIELD__ACMP0_DR_O
//    <name> O </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005014) ACMP0 normal mode output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_DR ) </loc>
//      <o.7..7> O
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_DR  ------------------------------------
// SVD Line: 2494

//  <rtree> SFDITEM_REG__ACMP0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005014) ACMP0 data output register 0 </i>
//    <loc> ( (unsigned int)((ACMP0_DR >> 0) & 0xFFFFFFFF), ((ACMP0_DR = (ACMP0_DR & ~(0xBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_DR_O0 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O1 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O2 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O3 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O4 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O5 </item>
//    <item> SFDITEM_FIELD__ACMP0_DR_O </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ACMP0_SR  --------------------------------
// SVD Line: 2554

unsigned int ACMP0_SR __AT (0x40005018);



// ---------------------------------  Field Item: ACMP0_SR_F0  ------------------------------------
// SVD Line: 2563

//  <item> SFDITEM_FIELD__ACMP0_SR_F0
//    <name> F0 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40005018) ACMP0 polling mode channel 0 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.0..0> F0
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F1  ------------------------------------
// SVD Line: 2570

//  <item> SFDITEM_FIELD__ACMP0_SR_F1
//    <name> F1 </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40005018) ACMP0 polling mode channel 1 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.1..1> F1
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F2  ------------------------------------
// SVD Line: 2577

//  <item> SFDITEM_FIELD__ACMP0_SR_F2
//    <name> F2 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40005018) ACMP0 polling mode channel 2 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.2..2> F2
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F3  ------------------------------------
// SVD Line: 2584

//  <item> SFDITEM_FIELD__ACMP0_SR_F3
//    <name> F3 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40005018) ACMP0 polling mode channel 3 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.3..3> F3
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F4  ------------------------------------
// SVD Line: 2591

//  <item> SFDITEM_FIELD__ACMP0_SR_F4
//    <name> F4 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005018) ACMP0 polling mode channel 4 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.4..4> F4
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F5  ------------------------------------
// SVD Line: 2598

//  <item> SFDITEM_FIELD__ACMP0_SR_F5
//    <name> F5 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40005018) ACMP0 polling mode channel 5 interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.5..5> F5
//    </check>
//  </item>
//  


// --------------------------------  Field Item: ACMP0_SR_WPF  ------------------------------------
// SVD Line: 2605

//  <item> SFDITEM_FIELD__ACMP0_SR_WPF
//    <name> WPF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005018) ACMP0 low power mode wakeup interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.6..6> WPF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP0_SR_F  -------------------------------------
// SVD Line: 2612

//  <item> SFDITEM_FIELD__ACMP0_SR_F
//    <name> F </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005018) ACMP0 normal mode interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP0_SR ) </loc>
//      <o.7..7> F
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_SR  ------------------------------------
// SVD Line: 2554

//  <rtree> SFDITEM_REG__ACMP0_SR
//    <name> SR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005018) ACMP0 status register 0 </i>
//    <loc> ( (unsigned int)((ACMP0_SR >> 0) & 0xFFFFFFFF), ((ACMP0_SR = (ACMP0_SR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_SR_F0 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F1 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F2 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F3 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F4 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F5 </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_WPF </item>
//    <item> SFDITEM_FIELD__ACMP0_SR_F </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: ACMP0_FD  --------------------------------
// SVD Line: 2621

unsigned int ACMP0_FD __AT (0x4000501C);



// --------------------------------  Field Item: ACMP0_FD_PLFD  -----------------------------------
// SVD Line: 2630

//  <item> SFDITEM_FIELD__ACMP0_FD_PLFD
//    <name> PLFD </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000501C) \nACMP0 polling mode frequency divider\n0 : 00 = source_clk/256\n1 : 01 = source_clk/100\n2 : 10 = source_clk/70\n3 : 11 = source_clk/50 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_FD ) </loc>
//      <o.1..0> PLFD
//        <0=> 0: 00 = source_clk/256
//        <1=> 1: 01 = source_clk/100
//        <2=> 2: 10 = source_clk/70
//        <3=> 3: 11 = source_clk/50
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_FD  ------------------------------------
// SVD Line: 2621

//  <rtree> SFDITEM_REG__ACMP0_FD
//    <name> FD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000501C) ACMP0 polling frequency divider register </i>
//    <loc> ( (unsigned int)((ACMP0_FD >> 0) & 0xFFFFFFFF), ((ACMP0_FD = (ACMP0_FD & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_FD_PLFD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_OPA  --------------------------------
// SVD Line: 2661

unsigned int ACMP0_OPA __AT (0x40005020);



// ------------------------------  Field Item: ACMP0_OPA_OPASEL  ----------------------------------
// SVD Line: 2670

//  <item> SFDITEM_FIELD__ACMP0_OPA_OPASEL
//    <name> OPASEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40005020) \nACMP0 Hall output A set\n0 : 000 = polling channel 0\n1 : 001 = polling channel 1\n2 : 010 = polling channel 2\n3 : 011 = polling channel 3\n4 : 100 = polling channel 4\n5 : 101 = polling channel 5\n6 : 110 = ACMP0 output tie 0\n7 : 111 = ACMP0 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_OPA ) </loc>
//      <o.2..0> OPASEL
//        <0=> 0: 000 = polling channel 0
//        <1=> 1: 001 = polling channel 1
//        <2=> 2: 010 = polling channel 2
//        <3=> 3: 011 = polling channel 3
//        <4=> 4: 100 = polling channel 4
//        <5=> 5: 101 = polling channel 5
//        <6=> 6: 110 = ACMP0 output tie 0
//        <7=> 7: 111 = ACMP0 output tie 0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_OPA  -----------------------------------
// SVD Line: 2661

//  <rtree> SFDITEM_REG__ACMP0_OPA
//    <name> OPA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005020) ACMP0 hall output A set register </i>
//    <loc> ( (unsigned int)((ACMP0_OPA >> 0) & 0xFFFFFFFF), ((ACMP0_OPA = (ACMP0_OPA & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_OPA_OPASEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_OPB  --------------------------------
// SVD Line: 2721

unsigned int ACMP0_OPB __AT (0x40005024);



// ------------------------------  Field Item: ACMP0_OPB_OPBSEL  ----------------------------------
// SVD Line: 2730

//  <item> SFDITEM_FIELD__ACMP0_OPB_OPBSEL
//    <name> OPBSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40005024) \nACMP0 Hall output B set\n0 : 000 = polling channel 0\n1 : 001 = polling channel 1\n2 : 010 = polling channel 2\n3 : 011 = polling channel 3\n4 : 100 = polling channel 4\n5 : 101 = polling channel 5\n6 : 110 = ACMP0 output tie 0\n7 : 111 = ACMP0 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_OPB ) </loc>
//      <o.2..0> OPBSEL
//        <0=> 0: 000 = polling channel 0
//        <1=> 1: 001 = polling channel 1
//        <2=> 2: 010 = polling channel 2
//        <3=> 3: 011 = polling channel 3
//        <4=> 4: 100 = polling channel 4
//        <5=> 5: 101 = polling channel 5
//        <6=> 6: 110 = ACMP0 output tie 0
//        <7=> 7: 111 = ACMP0 output tie 0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_OPB  -----------------------------------
// SVD Line: 2721

//  <rtree> SFDITEM_REG__ACMP0_OPB
//    <name> OPB </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005024) ACMP0 hall output B set register </i>
//    <loc> ( (unsigned int)((ACMP0_OPB >> 0) & 0xFFFFFFFF), ((ACMP0_OPB = (ACMP0_OPB & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_OPB_OPBSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP0_OPC  --------------------------------
// SVD Line: 2781

unsigned int ACMP0_OPC __AT (0x40005028);



// ------------------------------  Field Item: ACMP0_OPC_OPCSEL  ----------------------------------
// SVD Line: 2790

//  <item> SFDITEM_FIELD__ACMP0_OPC_OPCSEL
//    <name> OPCSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40005028) \nACMP0 Hall output C set\n0 : 000 = polling channel 0\n1 : 001 = polling channel 1\n2 : 010 = polling channel 2\n3 : 011 = polling channel 3\n4 : 100 = polling channel 4\n5 : 101 = polling channel 5\n6 : 110 = ACMP0 output tie 0\n7 : 111 = ACMP0 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_OPC ) </loc>
//      <o.2..0> OPCSEL
//        <0=> 0: 000 = polling channel 0
//        <1=> 1: 001 = polling channel 1
//        <2=> 2: 010 = polling channel 2
//        <3=> 3: 011 = polling channel 3
//        <4=> 4: 100 = polling channel 4
//        <5=> 5: 101 = polling channel 5
//        <6=> 6: 110 = ACMP0 output tie 0
//        <7=> 7: 111 = ACMP0 output tie 0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP0_OPC  -----------------------------------
// SVD Line: 2781

//  <rtree> SFDITEM_REG__ACMP0_OPC
//    <name> OPC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005028) ACMP0 hall output C set register </i>
//    <loc> ( (unsigned int)((ACMP0_OPC >> 0) & 0xFFFFFFFF), ((ACMP0_OPC = (ACMP0_OPC & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_OPC_OPCSEL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: ACMP0_DACSR  -------------------------------
// SVD Line: 2841

unsigned int ACMP0_DACSR __AT (0x4000502C);



// -----------------------------  Field Item: ACMP0_DACSR_DACREF  ---------------------------------
// SVD Line: 2850

//  <item> SFDITEM_FIELD__ACMP0_DACSR_DACREF
//    <name> DACREF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000502C) \nACMP DAC reference select\n0 : 0 = DAC selects bandgap as reference\n1 : 1 = DAC selects Vdd as reference </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP0_DACSR ) </loc>
//      <o.0..0> DACREF
//        <0=> 0: 0 = DAC selects bandgap as reference
//        <1=> 1: 1 = DAC selects Vdd as reference
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: ACMP0_DACSR  ----------------------------------
// SVD Line: 2841

//  <rtree> SFDITEM_REG__ACMP0_DACSR
//    <name> DACSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000502C) ACMP DAC reference select register </i>
//    <loc> ( (unsigned int)((ACMP0_DACSR >> 0) & 0xFFFFFFFF), ((ACMP0_DACSR = (ACMP0_DACSR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP0_DACSR_DACREF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: ACMP0  -------------------------------------
// SVD Line: 2149

//  <view> ACMP0
//    <name> ACMP0 </name>
//    <item> SFDITEM_REG__ACMP0_CR0 </item>
//    <item> SFDITEM_REG__ACMP0_CR1 </item>
//    <item> SFDITEM_REG__ACMP0_CR2 </item>
//    <item> SFDITEM_REG__ACMP0_CR3 </item>
//    <item> SFDITEM_REG__ACMP0_CR4 </item>
//    <item> SFDITEM_REG__ACMP0_DR </item>
//    <item> SFDITEM_REG__ACMP0_SR </item>
//    <item> SFDITEM_REG__ACMP0_FD </item>
//    <item> SFDITEM_REG__ACMP0_OPA </item>
//    <item> SFDITEM_REG__ACMP0_OPB </item>
//    <item> SFDITEM_REG__ACMP0_OPC </item>
//    <item> SFDITEM_REG__ACMP0_DACSR </item>
//  </view>
//  


// ----------------------------  Register Item Address: ACMP1_CR0  --------------------------------
// SVD Line: 2890

unsigned int ACMP1_CR0 __AT (0x40005030);



// --------------------------------  Field Item: ACMP1_CR0_MOD  -----------------------------------
// SVD Line: 2899

//  <item> SFDITEM_FIELD__ACMP1_CR0_MOD
//    <name> MOD </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40005030) \nACMP1 sensitivity modes of the interrupt trigger\n0 : 00 = ACMP1 interrupt on output falling edge.\n1 : 01 = ACMP1 interrupt on output rising edge.\n2 : 10 = ACMP1 interrupt on output falling edge.\n3 : 11 = ACMP1 interrupt on output falling or rising edge. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR0 ) </loc>
//      <o.1..0> MOD
//        <0=> 0: 00 = ACMP1 interrupt on output falling edge.
//        <1=> 1: 01 = ACMP1 interrupt on output rising edge.
//        <2=> 2: 10 = ACMP1 interrupt on output falling edge.
//        <3=> 3: 11 = ACMP1 interrupt on output falling or rising edge.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ACMP1_CR0_IE  ------------------------------------
// SVD Line: 2928

//  <item> SFDITEM_FIELD__ACMP1_CR0_IE
//    <name> IE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40005030) \nACMP1 Interrupt Enable\n0 : 0 = Disable the ACMP1 Interrupt.\n1 : 1 = Enable the ACMP1 Interrupt. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR0 ) </loc>
//      <o.4..4> IE
//        <0=> 0: 0 = Disable the ACMP1 Interrupt.
//        <1=> 1: 1 = Enable the ACMP1 Interrupt.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ACMP1_CR0_HYST  -----------------------------------
// SVD Line: 2947

//  <item> SFDITEM_FIELD__ACMP1_CR0_HYST
//    <name> HYST </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40005030) \nAnalog Comparator Hysterisis Selection\n0 : 0 = 20 mV.\n1 : 1 = 30 mV. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR0 ) </loc>
//      <o.6..6> HYST
//        <0=> 0: 0 = 20 mV.
//        <1=> 1: 1 = 30 mV.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: ACMP1_CR0_EN  ------------------------------------
// SVD Line: 2966

//  <item> SFDITEM_FIELD__ACMP1_CR0_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005030) \nAnalog Comparator Enable\n0 : 0 = The ACMP1 is disabled.\n1 : 1 = The ACMP1 is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR0 ) </loc>
//      <o.7..7> EN
//        <0=> 0: 0 = The ACMP1 is disabled.
//        <1=> 1: 1 = The ACMP1 is enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_CR0  -----------------------------------
// SVD Line: 2890

//  <rtree> SFDITEM_REG__ACMP1_CR0
//    <name> CR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005030) ACMP1 Configuration Register 0 </i>
//    <loc> ( (unsigned int)((ACMP1_CR0 >> 0) & 0xFFFFFFFF), ((ACMP1_CR0 = (ACMP1_CR0 & ~(0xD3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xD3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_CR0_MOD </item>
//    <item> SFDITEM_FIELD__ACMP1_CR0_IE </item>
//    <item> SFDITEM_FIELD__ACMP1_CR0_HYST </item>
//    <item> SFDITEM_FIELD__ACMP1_CR0_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_CR1  --------------------------------
// SVD Line: 2987

unsigned int ACMP1_CR1 __AT (0x40005034);



// -------------------------------  Field Item: ACMP1_CR1_NSEL  -----------------------------------
// SVD Line: 2996

//  <item> SFDITEM_FIELD__ACMP1_CR1_NSEL
//    <name> NSEL </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x40005034) \nACMP1 Negative Input Select\n0 : 000 = External input 0\n1 : 001 = External input 1\n2 : 010 = External input 2\n3 : 011 = External input 3\n4 : 100 = External input 4\n5 : 101 = DAC1 Output\n6 : 110 = ACMP1 output tie 0\n7 : 111 = ACMP1 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR1 ) </loc>
//      <o.2..0> NSEL
//        <0=> 0: 000 = External input 0
//        <1=> 1: 001 = External input 1
//        <2=> 2: 010 = External input 2
//        <3=> 3: 011 = External input 3
//        <4=> 4: 100 = External input 4
//        <5=> 5: 101 = DAC1 Output
//        <6=> 6: 110 = ACMP1 output tie 0
//        <7=> 7: 111 = ACMP1 output tie 0
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: ACMP1_CR1_PSEL  -----------------------------------
// SVD Line: 3045

//  <item> SFDITEM_FIELD__ACMP1_CR1_PSEL
//    <name> PSEL </name>
//    <rw> 
//    <i> [Bits 6..4] RW (@ 0x40005034) \nACMP1 Positive Input Select\n0 : 000 = External input 0\n1 : 001 = External input 1\n2 : 010 = External input 2\n3 : 011 = External input 3\n4 : 100 = External input 4\n5 : 101 = DAC1 Output\n6 : 110 = ACMP1 output tie 0\n7 : 111 = ACMP1 output tie 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR1 ) </loc>
//      <o.6..4> PSEL
//        <0=> 0: 000 = External input 0
//        <1=> 1: 001 = External input 1
//        <2=> 2: 010 = External input 2
//        <3=> 3: 011 = External input 3
//        <4=> 4: 100 = External input 4
//        <5=> 5: 101 = DAC1 Output
//        <6=> 6: 110 = ACMP1 output tie 0
//        <7=> 7: 111 = ACMP1 output tie 0
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_CR1  -----------------------------------
// SVD Line: 2987

//  <rtree> SFDITEM_REG__ACMP1_CR1
//    <name> CR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005034) ACMP1 Configuration Register 1 </i>
//    <loc> ( (unsigned int)((ACMP1_CR1 >> 0) & 0xFFFFFFFF), ((ACMP1_CR1 = (ACMP1_CR1 & ~(0x77UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x77) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_CR1_NSEL </item>
//    <item> SFDITEM_FIELD__ACMP1_CR1_PSEL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_CR2  --------------------------------
// SVD Line: 3096

unsigned int ACMP1_CR2 __AT (0x40005038);



// --------------------------------  Field Item: ACMP1_CR2_VAL  -----------------------------------
// SVD Line: 3105

//  <item> SFDITEM_FIELD__ACMP1_CR2_VAL
//    <name> VAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40005038) DAC1 Output Level Selection </i>
//    <edit> 
//      <loc> ( (unsigned char)((ACMP1_CR2 >> 0) & 0x3F), ((ACMP1_CR2 = (ACMP1_CR2 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: ACMP1_CR2_DACEN  ----------------------------------
// SVD Line: 3112

//  <item> SFDITEM_FIELD__ACMP1_CR2_DACEN
//    <name> DACEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40005038) \nDAC1 Enable\n0 : 0 = The DAC1 is disabled.\n1 : 1 = The DAC1 is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) ACMP1_CR2 ) </loc>
//      <o.7..7> DACEN
//        <0=> 0: 0 = The DAC1 is disabled.
//        <1=> 1: 1 = The DAC1 is enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_CR2  -----------------------------------
// SVD Line: 3096

//  <rtree> SFDITEM_REG__ACMP1_CR2
//    <name> CR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40005038) ACMP1 configuration register 2 </i>
//    <loc> ( (unsigned int)((ACMP1_CR2 >> 0) & 0xFFFFFFFF), ((ACMP1_CR2 = (ACMP1_CR2 & ~(0xBFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_CR2_VAL </item>
//    <item> SFDITEM_FIELD__ACMP1_CR2_DACEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: ACMP1_DSR  --------------------------------
// SVD Line: 3133

unsigned int ACMP1_DSR __AT (0x4000503C);



// ---------------------------------  Field Item: ACMP1_DSR_O  ------------------------------------
// SVD Line: 3142

//  <item> SFDITEM_FIELD__ACMP1_DSR_O
//    <name> O </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000503C) ACMP1 output </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_DSR ) </loc>
//      <o.0..0> O
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: ACMP1_DSR_F  ------------------------------------
// SVD Line: 3149

//  <item> SFDITEM_FIELD__ACMP1_DSR_F
//    <name> F </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000503C) ACMP1 interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_DSR ) </loc>
//      <o.4..4> F
//    </check>
//  </item>
//  


// --------------------------------  Field Item: ACMP1_DSR_WUF  -----------------------------------
// SVD Line: 3156

//  <item> SFDITEM_FIELD__ACMP1_DSR_WUF
//    <name> WUF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000503C) ACMP1 low power wakeup interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) ACMP1_DSR ) </loc>
//      <o.6..6> WUF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: ACMP1_DSR  -----------------------------------
// SVD Line: 3133

//  <rtree> SFDITEM_REG__ACMP1_DSR
//    <name> DSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000503C) ACMP0 data output register 0 </i>
//    <loc> ( (unsigned int)((ACMP1_DSR >> 0) & 0xFFFFFFFF), ((ACMP1_DSR = (ACMP1_DSR & ~(0x51UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x51) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__ACMP1_DSR_O </item>
//    <item> SFDITEM_FIELD__ACMP1_DSR_F </item>
//    <item> SFDITEM_FIELD__ACMP1_DSR_WUF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: ACMP1  -------------------------------------
// SVD Line: 2874

//  <view> ACMP1
//    <name> ACMP1 </name>
//    <item> SFDITEM_REG__ACMP1_CR0 </item>
//    <item> SFDITEM_REG__ACMP1_CR1 </item>
//    <item> SFDITEM_REG__ACMP1_CR2 </item>
//    <item> SFDITEM_REG__ACMP1_DSR </item>
//  </view>
//  


// ----------------------------  Register Item Address: SPI1_CFG0  --------------------------------
// SVD Line: 3184

unsigned int SPI1_CFG0 __AT (0x4000C000);



// -----------------------------  Field Item: SPI1_CFG0_SCK_HIGH  ---------------------------------
// SVD Line: 3192

//  <item> SFDITEM_FIELD__SPI1_CFG0_SCK_HIGH
//    <name> SCK_HIGH </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000C000) SCK High Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG0 >> 0) & 0xFF), ((SPI1_CFG0 = (SPI1_CFG0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG0_SCK_LOW  ---------------------------------
// SVD Line: 3199

//  <item> SFDITEM_FIELD__SPI1_CFG0_SCK_LOW
//    <name> SCK_LOW </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4000C000) SCK Low Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG0 >> 8) & 0xFF), ((SPI1_CFG0 = (SPI1_CFG0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG0_CS_HOLD  ---------------------------------
// SVD Line: 3206

//  <item> SFDITEM_FIELD__SPI1_CFG0_CS_HOLD
//    <name> CS_HOLD </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4000C000) CS hold Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG0 >> 16) & 0xFF), ((SPI1_CFG0 = (SPI1_CFG0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI1_CFG0_CS_SETUP  ---------------------------------
// SVD Line: 3213

//  <item> SFDITEM_FIELD__SPI1_CFG0_CS_SETUP
//    <name> CS_SETUP </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x4000C000) CS Setup Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG0 >> 24) & 0xFF), ((SPI1_CFG0 = (SPI1_CFG0 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CFG0  -----------------------------------
// SVD Line: 3184

//  <rtree> SFDITEM_REG__SPI1_CFG0
//    <name> CFG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C000) SPI Configuration Register 0 </i>
//    <loc> ( (unsigned int)((SPI1_CFG0 >> 0) & 0xFFFFFFFF), ((SPI1_CFG0 = (SPI1_CFG0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CFG0_SCK_HIGH </item>
//    <item> SFDITEM_FIELD__SPI1_CFG0_SCK_LOW </item>
//    <item> SFDITEM_FIELD__SPI1_CFG0_CS_HOLD </item>
//    <item> SFDITEM_FIELD__SPI1_CFG0_CS_SETUP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_CFG1  --------------------------------
// SVD Line: 3222

unsigned int SPI1_CFG1 __AT (0x4000C004);



// ------------------------------  Field Item: SPI1_CFG1_CS_IDLE  ---------------------------------
// SVD Line: 3230

//  <item> SFDITEM_FIELD__SPI1_CFG1_CS_IDLE
//    <name> CS_IDLE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000C004) CS idle count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG1 >> 0) & 0xFF), ((SPI1_CFG1 = (SPI1_CFG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_TXEIE  ----------------------------------
// SVD Line: 3237

//  <item> SFDITEM_FIELD__SPI1_CFG1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000C004) TX buffer empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.8..8> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_RXFIE  ----------------------------------
// SVD Line: 3244

//  <item> SFDITEM_FIELD__SPI1_CFG1_RXFIE
//    <name> RXFIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000C004) RXFIE </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.9..9> RXFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_TXUIE  ----------------------------------
// SVD Line: 3251

//  <item> SFDITEM_FIELD__SPI1_CFG1_TXUIE
//    <name> TXUIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000C004) TX buffer underflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.10..10> TXUIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_RXOIE  ----------------------------------
// SVD Line: 3258

//  <item> SFDITEM_FIELD__SPI1_CFG1_RXOIE
//    <name> RXOIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000C004) RX buffer overflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.11..11> RXOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_MSTR  -----------------------------------
// SVD Line: 3265

//  <item> SFDITEM_FIELD__SPI1_CFG1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000C004) \nmaster/slave mode selection\n0 : 0 = slave mode\n1 : 1 = master mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.12..12> MSTR
//        <0=> 0: 0 = slave mode
//        <1=> 1: 1 = master mode
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_MODFIE  ----------------------------------
// SVD Line: 3284

//  <item> SFDITEM_FIELD__SPI1_CFG1_MODFIE
//    <name> MODFIE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000C004) mode fault interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.13..13> MODFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_DMATXEN  ---------------------------------
// SVD Line: 3291

//  <item> SFDITEM_FIELD__SPI1_CFG1_DMATXEN
//    <name> DMATXEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000C004) DMA TX channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.14..14> DMATXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_DMARXEN  ---------------------------------
// SVD Line: 3298

//  <item> SFDITEM_FIELD__SPI1_CFG1_DMARXEN
//    <name> DMARXEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000C004) DMA RX channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.15..15> DMARXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_CPOL  -----------------------------------
// SVD Line: 3305

//  <item> SFDITEM_FIELD__SPI1_CFG1_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000C004) \nclock polarity\n0 : 0 = SCK is 0 when idle\n1 : 1 = SCK is 1 when idle </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.16..16> CPOL
//        <0=> 0: 0 = SCK is 0 when idle
//        <1=> 1: 1 = SCK is 1 when idle
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_CPHA  -----------------------------------
// SVD Line: 3324

//  <item> SFDITEM_FIELD__SPI1_CFG1_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000C004) \nclock phase\n0 : 0 = the second SCK transition is the first data capture edge\n1 : 1 = the first SCK transition is the first data capture edge </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.17..17> CPHA
//        <0=> 0: 0 = the second SCK transition is the first data capture edge
//        <1=> 1: 1 = the first SCK transition is the first data capture edge
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_MSBF  -----------------------------------
// SVD Line: 3343

//  <item> SFDITEM_FIELD__SPI1_CFG1_MSBF
//    <name> MSBF </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000C004) TX MSB first Select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.18..18> MSBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_RMSBF  ----------------------------------
// SVD Line: 3350

//  <item> SFDITEM_FIELD__SPI1_CFG1_RMSBF
//    <name> RMSBF </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000C004) RX MSB first Select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.19..19> RMSBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_FRMSIZE  ---------------------------------
// SVD Line: 3357

//  <item> SFDITEM_FIELD__SPI1_CFG1_FRMSIZE
//    <name> FRMSIZE </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000C004) frame size </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI1_CFG1 >> 20) & 0xF), ((SPI1_CFG1 = (SPI1_CFG1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_CSOE  -----------------------------------
// SVD Line: 3364

//  <item> SFDITEM_FIELD__SPI1_CFG1_CSOE
//    <name> CSOE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000C004) CS hardware output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.25..25> CSOE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_MODFEN  ----------------------------------
// SVD Line: 3371

//  <item> SFDITEM_FIELD__SPI1_CFG1_MODFEN
//    <name> MODFEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4000C004) mode fault detect enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.26..26> MODFEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_CFG1_CONT_CS  ---------------------------------
// SVD Line: 3378

//  <item> SFDITEM_FIELD__SPI1_CFG1_CONT_CS
//    <name> CONT_CS </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000C004) CS continuous output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.28..28> CONT_CS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG1_WKUEN  ----------------------------------
// SVD Line: 3385

//  <item> SFDITEM_FIELD__SPI1_CFG1_WKUEN
//    <name> WKUEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000C004) wake up function enable(only valid for slave mode) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG1 ) </loc>
//      <o.30..30> WKUEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CFG1  -----------------------------------
// SVD Line: 3222

//  <rtree> SFDITEM_REG__SPI1_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C004) SPI Configuration Register 1 </i>
//    <loc> ( (unsigned int)((SPI1_CFG1 >> 0) & 0xFFFFFFFF), ((SPI1_CFG1 = (SPI1_CFG1 & ~(0x56FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x56FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CFG1_CS_IDLE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_TXEIE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_RXFIE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_TXUIE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_RXOIE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_MSTR </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_MODFIE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_DMATXEN </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_DMARXEN </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_CPOL </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_CPHA </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_MSBF </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_RMSBF </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_FRMSIZE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_CSOE </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_MODFEN </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_CONT_CS </item>
//    <item> SFDITEM_FIELD__SPI1_CFG1_WKUEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI1_CMD  --------------------------------
// SVD Line: 3394

unsigned int SPI1_CMD __AT (0x4000C008);



// -------------------------------  Field Item: SPI1_CMD_SPIEN  -----------------------------------
// SVD Line: 3403

//  <item> SFDITEM_FIELD__SPI1_CMD_SPIEN
//    <name> SPIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C008) SPI Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CMD ) </loc>
//      <o.0..0> SPIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CMD_SWRST  -----------------------------------
// SVD Line: 3410

//  <item> SFDITEM_FIELD__SPI1_CMD_SWRST
//    <name> SWRST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000C008) software reset </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CMD ) </loc>
//      <o.4..4> SWRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CMD_CSRLS  -----------------------------------
// SVD Line: 3417

//  <item> SFDITEM_FIELD__SPI1_CMD_CSRLS
//    <name> CSRLS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000C008) CS release(only valid for CS continuous output) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CMD ) </loc>
//      <o.5..5> CSRLS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CMD_ROTRIG  ----------------------------------
// SVD Line: 3424

//  <item> SFDITEM_FIELD__SPI1_CMD_ROTRIG
//    <name> ROTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000C008) Master RX only mode trigger </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CMD ) </loc>
//      <o.6..6> ROTRIG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CMD  ------------------------------------
// SVD Line: 3394

//  <rtree> SFDITEM_REG__SPI1_CMD
//    <name> CMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C008) SPI Command Register </i>
//    <loc> ( (unsigned int)((SPI1_CMD >> 0) & 0xFFFFFFFF), ((SPI1_CMD = (SPI1_CMD & ~(0x71UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x71) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CMD_SPIEN </item>
//    <item> SFDITEM_FIELD__SPI1_CMD_SWRST </item>
//    <item> SFDITEM_FIELD__SPI1_CMD_CSRLS </item>
//    <item> SFDITEM_FIELD__SPI1_CMD_ROTRIG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI1_STATUS  -------------------------------
// SVD Line: 3433

unsigned int SPI1_STATUS __AT (0x4000C00C);



// ------------------------------  Field Item: SPI1_STATUS_TXEF  ----------------------------------
// SVD Line: 3442

//  <item> SFDITEM_FIELD__SPI1_STATUS_TXEF
//    <name> TXEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000C00C) TX buffer empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.0..0> TXEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_RXFF  ----------------------------------
// SVD Line: 3449

//  <item> SFDITEM_FIELD__SPI1_STATUS_RXFF
//    <name> RXFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C00C) RX buffer Full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.1..1> RXFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_TXUF  ----------------------------------
// SVD Line: 3456

//  <item> SFDITEM_FIELD__SPI1_STATUS_TXUF
//    <name> TXUF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000C00C) TX buffer underflow flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.2..2> TXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_RXOF  ----------------------------------
// SVD Line: 3463

//  <item> SFDITEM_FIELD__SPI1_STATUS_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000C00C) RX buffer overflow flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_MODEF  ---------------------------------
// SVD Line: 3470

//  <item> SFDITEM_FIELD__SPI1_STATUS_MODEF
//    <name> MODEF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000C00C) Mode error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.4..4> MODEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_MEBY  ----------------------------------
// SVD Line: 3477

//  <item> SFDITEM_FIELD__SPI1_STATUS_MEBY
//    <name> MEBY </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000C00C) SPI master engine busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.7..7> MEBY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI1_STATUS_IDLEF  ---------------------------------
// SVD Line: 3484

//  <item> SFDITEM_FIELD__SPI1_STATUS_IDLEF
//    <name> IDLEF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000C00C) SPI IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_STATUS ) </loc>
//      <o.8..8> IDLEF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SPI1_STATUS  ----------------------------------
// SVD Line: 3433

//  <rtree> SFDITEM_REG__SPI1_STATUS
//    <name> STATUS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C00C) SPI Status Register </i>
//    <loc> ( (unsigned int)((SPI1_STATUS >> 0) & 0xFFFFFFFF), ((SPI1_STATUS = (SPI1_STATUS & ~(0x19FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x19F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_STATUS_TXEF </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_RXFF </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_TXUF </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_RXOF </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_MODEF </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_MEBY </item>
//    <item> SFDITEM_FIELD__SPI1_STATUS_IDLEF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_DATA  --------------------------------
// SVD Line: 3493

unsigned int SPI1_DATA __AT (0x4000C010);



// -------------------------------  Field Item: SPI1_DATA_DATA  -----------------------------------
// SVD Line: 3502

//  <item> SFDITEM_FIELD__SPI1_DATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000C010) Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI1_DATA >> 0) & 0xFFFF), ((SPI1_DATA = (SPI1_DATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_DATA  -----------------------------------
// SVD Line: 3493

//  <rtree> SFDITEM_REG__SPI1_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C010) SPI Data Register </i>
//    <loc> ( (unsigned int)((SPI1_DATA >> 0) & 0xFFFFFFFF), ((SPI1_DATA = (SPI1_DATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_DATA_DATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI1_CFG2  --------------------------------
// SVD Line: 3511

unsigned int SPI1_CFG2 __AT (0x4000C014);



// -------------------------------  Field Item: SPI1_CFG2_MNDC  -----------------------------------
// SVD Line: 3520

//  <item> SFDITEM_FIELD__SPI1_CFG2_MNDC
//    <name> MNDC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000C014) Master No Overflow mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG2 ) </loc>
//      <o.1..1> MNDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG2_TOEN  -----------------------------------
// SVD Line: 3527

//  <item> SFDITEM_FIELD__SPI1_CFG2_TOEN
//    <name> TOEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000C014) TX only mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG2 ) </loc>
//      <o.2..2> TOEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI1_CFG2_ROEN  -----------------------------------
// SVD Line: 3534

//  <item> SFDITEM_FIELD__SPI1_CFG2_ROEN
//    <name> ROEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000C014) RX only mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI1_CFG2 ) </loc>
//      <o.3..3> ROEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI1_CFG2  -----------------------------------
// SVD Line: 3511

//  <rtree> SFDITEM_REG__SPI1_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000C014) SPI configuration register 2 </i>
//    <loc> ( (unsigned int)((SPI1_CFG2 >> 0) & 0xFFFFFFFF), ((SPI1_CFG2 = (SPI1_CFG2 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI1_CFG2_MNDC </item>
//    <item> SFDITEM_FIELD__SPI1_CFG2_TOEN </item>
//    <item> SFDITEM_FIELD__SPI1_CFG2_ROEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SPI1  -------------------------------------
// SVD Line: 3168

//  <view> SPI1
//    <name> SPI1 </name>
//    <item> SFDITEM_REG__SPI1_CFG0 </item>
//    <item> SFDITEM_REG__SPI1_CFG1 </item>
//    <item> SFDITEM_REG__SPI1_CMD </item>
//    <item> SFDITEM_REG__SPI1_STATUS </item>
//    <item> SFDITEM_REG__SPI1_DATA </item>
//    <item> SFDITEM_REG__SPI1_CFG2 </item>
//  </view>
//  


// ----------------------------  Register Item Address: SPI2_CFG0  --------------------------------
// SVD Line: 3561

unsigned int SPI2_CFG0 __AT (0x4000D000);



// -----------------------------  Field Item: SPI2_CFG0_SCK_HIGH  ---------------------------------
// SVD Line: 3569

//  <item> SFDITEM_FIELD__SPI2_CFG0_SCK_HIGH
//    <name> SCK_HIGH </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000D000) SCK High Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG0 >> 0) & 0xFF), ((SPI2_CFG0 = (SPI2_CFG0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG0_SCK_LOW  ---------------------------------
// SVD Line: 3576

//  <item> SFDITEM_FIELD__SPI2_CFG0_SCK_LOW
//    <name> SCK_LOW </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x4000D000) SCK Low Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG0 >> 8) & 0xFF), ((SPI2_CFG0 = (SPI2_CFG0 & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG0_CS_HOLD  ---------------------------------
// SVD Line: 3583

//  <item> SFDITEM_FIELD__SPI2_CFG0_CS_HOLD
//    <name> CS_HOLD </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x4000D000) CS hold Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG0 >> 16) & 0xFF), ((SPI2_CFG0 = (SPI2_CFG0 & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: SPI2_CFG0_CS_SETUP  ---------------------------------
// SVD Line: 3590

//  <item> SFDITEM_FIELD__SPI2_CFG0_CS_SETUP
//    <name> CS_SETUP </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x4000D000) CS Setup Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG0 >> 24) & 0xFF), ((SPI2_CFG0 = (SPI2_CFG0 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CFG0  -----------------------------------
// SVD Line: 3561

//  <rtree> SFDITEM_REG__SPI2_CFG0
//    <name> CFG0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D000) SPI Configuration Register 0 </i>
//    <loc> ( (unsigned int)((SPI2_CFG0 >> 0) & 0xFFFFFFFF), ((SPI2_CFG0 = (SPI2_CFG0 & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CFG0_SCK_HIGH </item>
//    <item> SFDITEM_FIELD__SPI2_CFG0_SCK_LOW </item>
//    <item> SFDITEM_FIELD__SPI2_CFG0_CS_HOLD </item>
//    <item> SFDITEM_FIELD__SPI2_CFG0_CS_SETUP </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_CFG1  --------------------------------
// SVD Line: 3599

unsigned int SPI2_CFG1 __AT (0x4000D004);



// ------------------------------  Field Item: SPI2_CFG1_CS_IDLE  ---------------------------------
// SVD Line: 3607

//  <item> SFDITEM_FIELD__SPI2_CFG1_CS_IDLE
//    <name> CS_IDLE </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000D004) CS idle count </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG1 >> 0) & 0xFF), ((SPI2_CFG1 = (SPI2_CFG1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_TXEIE  ----------------------------------
// SVD Line: 3614

//  <item> SFDITEM_FIELD__SPI2_CFG1_TXEIE
//    <name> TXEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000D004) TX buffer empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.8..8> TXEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_RXFIE  ----------------------------------
// SVD Line: 3621

//  <item> SFDITEM_FIELD__SPI2_CFG1_RXFIE
//    <name> RXFIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000D004) RXFIE </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.9..9> RXFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_TXUIE  ----------------------------------
// SVD Line: 3628

//  <item> SFDITEM_FIELD__SPI2_CFG1_TXUIE
//    <name> TXUIE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4000D004) TX buffer underflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.10..10> TXUIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_RXOIE  ----------------------------------
// SVD Line: 3635

//  <item> SFDITEM_FIELD__SPI2_CFG1_RXOIE
//    <name> RXOIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000D004) RX buffer overflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.11..11> RXOIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_MSTR  -----------------------------------
// SVD Line: 3642

//  <item> SFDITEM_FIELD__SPI2_CFG1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000D004) \nmaster/slave mode selection\n0 : 0 = slave mode\n1 : 1 = master mode </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.12..12> MSTR
//        <0=> 0: 0 = slave mode
//        <1=> 1: 1 = master mode
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_MODFIE  ----------------------------------
// SVD Line: 3661

//  <item> SFDITEM_FIELD__SPI2_CFG1_MODFIE
//    <name> MODFIE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000D004) mode fault interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.13..13> MODFIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_DMATXEN  ---------------------------------
// SVD Line: 3668

//  <item> SFDITEM_FIELD__SPI2_CFG1_DMATXEN
//    <name> DMATXEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000D004) DMA TX channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.14..14> DMATXEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_DMARXEN  ---------------------------------
// SVD Line: 3675

//  <item> SFDITEM_FIELD__SPI2_CFG1_DMARXEN
//    <name> DMARXEN </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000D004) DMA RX channel enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.15..15> DMARXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_CPOL  -----------------------------------
// SVD Line: 3682

//  <item> SFDITEM_FIELD__SPI2_CFG1_CPOL
//    <name> CPOL </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4000D004) \nclock polarity\n0 : 0 = SCK is 0 when idle\n1 : 1 = SCK is 1 when idle </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.16..16> CPOL
//        <0=> 0: 0 = SCK is 0 when idle
//        <1=> 1: 1 = SCK is 1 when idle
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_CPHA  -----------------------------------
// SVD Line: 3701

//  <item> SFDITEM_FIELD__SPI2_CFG1_CPHA
//    <name> CPHA </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4000D004) \nclock phase\n0 : 0 = the second SCK transition is the first data capture edge\n1 : 1 = the first SCK transition is the first data capture edge </i>
//    <combo> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.17..17> CPHA
//        <0=> 0: 0 = the second SCK transition is the first data capture edge
//        <1=> 1: 1 = the first SCK transition is the first data capture edge
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_MSBF  -----------------------------------
// SVD Line: 3720

//  <item> SFDITEM_FIELD__SPI2_CFG1_MSBF
//    <name> MSBF </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4000D004) TX MSB first Select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.18..18> MSBF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_RMSBF  ----------------------------------
// SVD Line: 3727

//  <item> SFDITEM_FIELD__SPI2_CFG1_RMSBF
//    <name> RMSBF </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4000D004) RX MSB first Select </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.19..19> RMSBF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_FRMSIZE  ---------------------------------
// SVD Line: 3734

//  <item> SFDITEM_FIELD__SPI2_CFG1_FRMSIZE
//    <name> FRMSIZE </name>
//    <rw> 
//    <i> [Bits 23..20] RW (@ 0x4000D004) frame size </i>
//    <edit> 
//      <loc> ( (unsigned char)((SPI2_CFG1 >> 20) & 0xF), ((SPI2_CFG1 = (SPI2_CFG1 & ~(0xFUL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_CSOE  -----------------------------------
// SVD Line: 3741

//  <item> SFDITEM_FIELD__SPI2_CFG1_CSOE
//    <name> CSOE </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x4000D004) CS hardware output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.25..25> CSOE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_MODFEN  ----------------------------------
// SVD Line: 3748

//  <item> SFDITEM_FIELD__SPI2_CFG1_MODFEN
//    <name> MODFEN </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x4000D004) mode fault detect enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.26..26> MODFEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_CFG1_CONT_CS  ---------------------------------
// SVD Line: 3755

//  <item> SFDITEM_FIELD__SPI2_CFG1_CONT_CS
//    <name> CONT_CS </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x4000D004) CS continuous output enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.28..28> CONT_CS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG1_WKUEN  ----------------------------------
// SVD Line: 3762

//  <item> SFDITEM_FIELD__SPI2_CFG1_WKUEN
//    <name> WKUEN </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x4000D004) wake up function enable(only valid for slave mode) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG1 ) </loc>
//      <o.30..30> WKUEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CFG1  -----------------------------------
// SVD Line: 3599

//  <rtree> SFDITEM_REG__SPI2_CFG1
//    <name> CFG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D004) SPI Configuration Register 1 </i>
//    <loc> ( (unsigned int)((SPI2_CFG1 >> 0) & 0xFFFFFFFF), ((SPI2_CFG1 = (SPI2_CFG1 & ~(0x56FFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x56FFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CFG1_CS_IDLE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_TXEIE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_RXFIE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_TXUIE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_RXOIE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_MSTR </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_MODFIE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_DMATXEN </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_DMARXEN </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_CPOL </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_CPHA </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_MSBF </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_RMSBF </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_FRMSIZE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_CSOE </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_MODFEN </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_CONT_CS </item>
//    <item> SFDITEM_FIELD__SPI2_CFG1_WKUEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: SPI2_CMD  --------------------------------
// SVD Line: 3771

unsigned int SPI2_CMD __AT (0x4000D008);



// -------------------------------  Field Item: SPI2_CMD_SPIEN  -----------------------------------
// SVD Line: 3780

//  <item> SFDITEM_FIELD__SPI2_CMD_SPIEN
//    <name> SPIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D008) SPI Enable </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CMD ) </loc>
//      <o.0..0> SPIEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CMD_SWRST  -----------------------------------
// SVD Line: 3787

//  <item> SFDITEM_FIELD__SPI2_CMD_SWRST
//    <name> SWRST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000D008) software reset </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CMD ) </loc>
//      <o.4..4> SWRST
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CMD_CSRLS  -----------------------------------
// SVD Line: 3794

//  <item> SFDITEM_FIELD__SPI2_CMD_CSRLS
//    <name> CSRLS </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000D008) CS release(only valid for CS continuous output) </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CMD ) </loc>
//      <o.5..5> CSRLS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CMD_ROTRIG  ----------------------------------
// SVD Line: 3801

//  <item> SFDITEM_FIELD__SPI2_CMD_ROTRIG
//    <name> ROTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000D008) Master RX only mode trigger </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CMD ) </loc>
//      <o.6..6> ROTRIG
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CMD  ------------------------------------
// SVD Line: 3771

//  <rtree> SFDITEM_REG__SPI2_CMD
//    <name> CMD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D008) SPI Command Register </i>
//    <loc> ( (unsigned int)((SPI2_CMD >> 0) & 0xFFFFFFFF), ((SPI2_CMD = (SPI2_CMD & ~(0x71UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x71) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CMD_SPIEN </item>
//    <item> SFDITEM_FIELD__SPI2_CMD_SWRST </item>
//    <item> SFDITEM_FIELD__SPI2_CMD_CSRLS </item>
//    <item> SFDITEM_FIELD__SPI2_CMD_ROTRIG </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: SPI2_STATUS  -------------------------------
// SVD Line: 3810

unsigned int SPI2_STATUS __AT (0x4000D00C);



// ------------------------------  Field Item: SPI2_STATUS_TXEF  ----------------------------------
// SVD Line: 3819

//  <item> SFDITEM_FIELD__SPI2_STATUS_TXEF
//    <name> TXEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000D00C) TX buffer empty flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.0..0> TXEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_RXFF  ----------------------------------
// SVD Line: 3826

//  <item> SFDITEM_FIELD__SPI2_STATUS_RXFF
//    <name> RXFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D00C) RX buffer Full flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.1..1> RXFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_TXUF  ----------------------------------
// SVD Line: 3833

//  <item> SFDITEM_FIELD__SPI2_STATUS_TXUF
//    <name> TXUF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D00C) TX buffer underflow flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.2..2> TXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_RXOF  ----------------------------------
// SVD Line: 3840

//  <item> SFDITEM_FIELD__SPI2_STATUS_RXOF
//    <name> RXOF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D00C) RX buffer overflow flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_MODEF  ---------------------------------
// SVD Line: 3847

//  <item> SFDITEM_FIELD__SPI2_STATUS_MODEF
//    <name> MODEF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000D00C) Mode error flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.4..4> MODEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_MEBY  ----------------------------------
// SVD Line: 3854

//  <item> SFDITEM_FIELD__SPI2_STATUS_MEBY
//    <name> MEBY </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000D00C) SPI master engine busy flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.7..7> MEBY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: SPI2_STATUS_IDLEF  ---------------------------------
// SVD Line: 3861

//  <item> SFDITEM_FIELD__SPI2_STATUS_IDLEF
//    <name> IDLEF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000D00C) SPI IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_STATUS ) </loc>
//      <o.8..8> IDLEF
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: SPI2_STATUS  ----------------------------------
// SVD Line: 3810

//  <rtree> SFDITEM_REG__SPI2_STATUS
//    <name> STATUS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D00C) SPI Status Register </i>
//    <loc> ( (unsigned int)((SPI2_STATUS >> 0) & 0xFFFFFFFF), ((SPI2_STATUS = (SPI2_STATUS & ~(0x19FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x19F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_STATUS_TXEF </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_RXFF </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_TXUF </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_RXOF </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_MODEF </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_MEBY </item>
//    <item> SFDITEM_FIELD__SPI2_STATUS_IDLEF </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_DATA  --------------------------------
// SVD Line: 3870

unsigned int SPI2_DATA __AT (0x4000D010);



// -------------------------------  Field Item: SPI2_DATA_DATA  -----------------------------------
// SVD Line: 3879

//  <item> SFDITEM_FIELD__SPI2_DATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4000D010) Data </i>
//    <edit> 
//      <loc> ( (unsigned short)((SPI2_DATA >> 0) & 0xFFFF), ((SPI2_DATA = (SPI2_DATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_DATA  -----------------------------------
// SVD Line: 3870

//  <rtree> SFDITEM_REG__SPI2_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D010) SPI Data Register </i>
//    <loc> ( (unsigned int)((SPI2_DATA >> 0) & 0xFFFFFFFF), ((SPI2_DATA = (SPI2_DATA & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_DATA_DATA </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: SPI2_CFG2  --------------------------------
// SVD Line: 3888

unsigned int SPI2_CFG2 __AT (0x4000D014);



// -------------------------------  Field Item: SPI2_CFG2_MNDC  -----------------------------------
// SVD Line: 3897

//  <item> SFDITEM_FIELD__SPI2_CFG2_MNDC
//    <name> MNDC </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000D014) Master No Overflow mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG2 ) </loc>
//      <o.1..1> MNDC
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG2_TOEN  -----------------------------------
// SVD Line: 3904

//  <item> SFDITEM_FIELD__SPI2_CFG2_TOEN
//    <name> TOEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000D014) TX only mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG2 ) </loc>
//      <o.2..2> TOEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: SPI2_CFG2_ROEN  -----------------------------------
// SVD Line: 3911

//  <item> SFDITEM_FIELD__SPI2_CFG2_ROEN
//    <name> ROEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000D014) RX only mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) SPI2_CFG2 ) </loc>
//      <o.3..3> ROEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: SPI2_CFG2  -----------------------------------
// SVD Line: 3888

//  <rtree> SFDITEM_REG__SPI2_CFG2
//    <name> CFG2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000D014) SPI configuration register 2 </i>
//    <loc> ( (unsigned int)((SPI2_CFG2 >> 0) & 0xFFFFFFFF), ((SPI2_CFG2 = (SPI2_CFG2 & ~(0xEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__SPI2_CFG2_MNDC </item>
//    <item> SFDITEM_FIELD__SPI2_CFG2_TOEN </item>
//    <item> SFDITEM_FIELD__SPI2_CFG2_ROEN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: SPI2  -------------------------------------
// SVD Line: 3545

//  <view> SPI2
//    <name> SPI2 </name>
//    <item> SFDITEM_REG__SPI2_CFG0 </item>
//    <item> SFDITEM_REG__SPI2_CFG1 </item>
//    <item> SFDITEM_REG__SPI2_CMD </item>
//    <item> SFDITEM_REG__SPI2_STATUS </item>
//    <item> SFDITEM_REG__SPI2_DATA </item>
//    <item> SFDITEM_REG__SPI2_CFG2 </item>
//  </view>
//  


// ----------------------------  Register Item Address: I2C1_ADDR1  -------------------------------
// SVD Line: 3939

unsigned int I2C1_ADDR1 __AT (0x4000E000);



// --------------------------------  Field Item: I2C1_ADDR1_AD  -----------------------------------
// SVD Line: 3947

//  <item> SFDITEM_FIELD__I2C1_ADDR1_AD
//    <name> AD </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000E000) Address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_ADDR1 >> 1) & 0x7F), ((I2C1_ADDR1 = (I2C1_ADDR1 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C1_ADDR1  -----------------------------------
// SVD Line: 3939

//  <rtree> SFDITEM_REG__I2C1_ADDR1
//    <name> ADDR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E000) I2C Address Register 1 </i>
//    <loc> ( (unsigned int)((I2C1_ADDR1 >> 0) & 0xFFFFFFFF), ((I2C1_ADDR1 = (I2C1_ADDR1 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_ADDR1_AD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_ADDR2  -------------------------------
// SVD Line: 3956

unsigned int I2C1_ADDR2 __AT (0x4000E004);



// --------------------------------  Field Item: I2C1_ADDR2_AD  -----------------------------------
// SVD Line: 3965

//  <item> SFDITEM_FIELD__I2C1_ADDR2_AD
//    <name> AD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000E004) Address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_ADDR2 >> 0) & 0x7), ((I2C1_ADDR2 = (I2C1_ADDR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C1_ADDR2  -----------------------------------
// SVD Line: 3956

//  <rtree> SFDITEM_REG__I2C1_ADDR2
//    <name> ADDR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E004) I2C ADDR register 2 </i>
//    <loc> ( (unsigned int)((I2C1_ADDR2 >> 0) & 0xFFFFFFFF), ((I2C1_ADDR2 = (I2C1_ADDR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_ADDR2_AD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_SAMPLE_CNT  -----------------------------
// SVD Line: 3974

unsigned int I2C1_SAMPLE_CNT __AT (0x4000E008);



// -----------------------  Field Item: I2C1_SAMPLE_CNT_SAMPLE_CNT_DIV  ---------------------------
// SVD Line: 3983

//  <item> SFDITEM_FIELD__I2C1_SAMPLE_CNT_SAMPLE_CNT_DIV
//    <name> SAMPLE_CNT_DIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000E008) Adjust the width of each sample </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_SAMPLE_CNT >> 0) & 0xFF), ((I2C1_SAMPLE_CNT = (I2C1_SAMPLE_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_SAMPLE_CNT  --------------------------------
// SVD Line: 3974

//  <rtree> SFDITEM_REG__I2C1_SAMPLE_CNT
//    <name> SAMPLE_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E008) I2C SAMPLE CNT Register </i>
//    <loc> ( (unsigned int)((I2C1_SAMPLE_CNT >> 0) & 0xFFFFFFFF), ((I2C1_SAMPLE_CNT = (I2C1_SAMPLE_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_SAMPLE_CNT_SAMPLE_CNT_DIV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_STEP_CNT  ------------------------------
// SVD Line: 3992

unsigned int I2C1_STEP_CNT __AT (0x4000E00C);



// -------------------------  Field Item: I2C1_STEP_CNT_STEP_CNT_DIV  -----------------------------
// SVD Line: 4000

//  <item> SFDITEM_FIELD__I2C1_STEP_CNT_STEP_CNT_DIV
//    <name> STEP_CNT_DIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000E00C) Specifies the number of Samples per half pulse width </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_STEP_CNT >> 0) & 0xFF), ((I2C1_STEP_CNT = (I2C1_STEP_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_STEP_CNT  ---------------------------------
// SVD Line: 3992

//  <rtree> SFDITEM_REG__I2C1_STEP_CNT
//    <name> STEP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E00C) I2C STEP CNT Register </i>
//    <loc> ( (unsigned int)((I2C1_STEP_CNT >> 0) & 0xFFFFFFFF), ((I2C1_STEP_CNT = (I2C1_STEP_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_STEP_CNT_STEP_CNT_DIV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROL1  ------------------------------
// SVD Line: 4009

unsigned int I2C1_CONTROL1 __AT (0x4000E010);



// -----------------------------  Field Item: I2C1_CONTROL1_WUEN  ---------------------------------
// SVD Line: 4017

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_WUEN
//    <name> WUEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000E010) wakeup enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.2..2> WUEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL1_TACK  ---------------------------------
// SVD Line: 4024

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_TACK
//    <name> TACK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000E010) \nTransmit Acknowledge Enable\n0 : 0 = ACK will sent to the bus on the following receiving byte\n1 : 1 = NACK will sent to the bus on the following receiving byte </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.3..3> TACK
//        <0=> 0: 0 = ACK will sent to the bus on the following receiving byte
//        <1=> 1: 1 = NACK will sent to the bus on the following receiving byte
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: I2C1_CONTROL1_TX  ----------------------------------
// SVD Line: 4043

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_TX
//    <name> TX </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E010) Transmit Mode Select(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.4..4> TX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL1_MSTR  ---------------------------------
// SVD Line: 4050

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E010) \nI2C operation mode Select\n0 : 0 = Slave Mode\n1 : 1 = Master Mode </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.5..5> MSTR
//        <0=> 0: 0 = Slave Mode
//        <1=> 1: 1 = Master Mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL1_IICIE  --------------------------------
// SVD Line: 4069

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_IICIE
//    <name> IICIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E010) I2C interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.6..6> IICIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL1_IICEN  --------------------------------
// SVD Line: 4076

//  <item> SFDITEM_FIELD__I2C1_CONTROL1_IICEN
//    <name> IICEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E010) I2C Module Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL1 ) </loc>
//      <o.7..7> IICEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL1  ---------------------------------
// SVD Line: 4009

//  <rtree> SFDITEM_REG__I2C1_CONTROL1
//    <name> CONTROL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E010) I2C Control Register 1 </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL1 >> 0) & 0xFFFFFFFF), ((I2C1_CONTROL1 = (I2C1_CONTROL1 & ~(0xFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_WUEN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_TACK </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_TX </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_MSTR </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_IICIE </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL1_IICEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROL2  ------------------------------
// SVD Line: 4085

unsigned int I2C1_CONTROL2 __AT (0x4000E014);



// -----------------------------  Field Item: I2C1_CONTROL2_STREN  --------------------------------
// SVD Line: 4093

//  <item> SFDITEM_FIELD__I2C1_CONTROL2_STREN
//    <name> STREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E014) SCL Strech enable(Valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL2 ) </loc>
//      <o.0..0> STREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL2_ARBEN  --------------------------------
// SVD Line: 4100

//  <item> SFDITEM_FIELD__I2C1_CONTROL2_ARBEN
//    <name> ARBEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000E014) Arbitration Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL2 ) </loc>
//      <o.3..3> ARBEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL2_SYNCEN  --------------------------------
// SVD Line: 4107

//  <item> SFDITEM_FIELD__I2C1_CONTROL2_SYNCEN
//    <name> SYNCEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E014) SCL Sync Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL2 ) </loc>
//      <o.4..4> SYNCEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL2_ADEXT  --------------------------------
// SVD Line: 4114

//  <item> SFDITEM_FIELD__I2C1_CONTROL2_ADEXT
//    <name> ADEXT </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E014) Address Extension(valid for Slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL2 ) </loc>
//      <o.6..6> ADEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL2_GCAEN  --------------------------------
// SVD Line: 4121

//  <item> SFDITEM_FIELD__I2C1_CONTROL2_GCAEN
//    <name> GCAEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E014) General Call enable(valid for Slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL2 ) </loc>
//      <o.7..7> GCAEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL2  ---------------------------------
// SVD Line: 4085

//  <rtree> SFDITEM_REG__I2C1_CONTROL2
//    <name> CONTROL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E014) I2C Control Register 2 </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL2 >> 0) & 0xFFFFFFFF), ((I2C1_CONTROL2 = (I2C1_CONTROL2 & ~(0xD9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xD9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL2_STREN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL2_ARBEN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL2_SYNCEN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL2_ADEXT </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL2_GCAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROL3  ------------------------------
// SVD Line: 4130

unsigned int I2C1_CONTROL3 __AT (0x4000E018);



// -----------------------------  Field Item: I2C1_CONTROL3_MNTEN  --------------------------------
// SVD Line: 4138

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_MNTEN
//    <name> MNTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E018) Monitor Function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.0..0> MNTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL3_NACKIE  --------------------------------
// SVD Line: 4145

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_NACKIE
//    <name> NACKIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E018) NACK get interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.1..1> NACKIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL3_TXEMIE  --------------------------------
// SVD Line: 4152

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_TXEMIE
//    <name> TXEMIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E018) TX buffer empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.4..4> TXEMIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_CONTROL3_RXFIE  --------------------------------
// SVD Line: 4159

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_RXFIE
//    <name> RXFIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E018) RX buffer full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.5..5> RXFIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL3_TXUFIE  --------------------------------
// SVD Line: 4166

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_TXUFIE
//    <name> TXUFIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E018) TX buffer underflow error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.6..6> TXUFIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL3_RXOFIE  --------------------------------
// SVD Line: 4173

//  <item> SFDITEM_FIELD__I2C1_CONTROL3_RXOFIE
//    <name> RXOFIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E018) RX buffer overflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL3 ) </loc>
//      <o.7..7> RXOFIE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL3  ---------------------------------
// SVD Line: 4130

//  <rtree> SFDITEM_REG__I2C1_CONTROL3
//    <name> CONTROL3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E018) I2C Control Register 3 </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL3 >> 0) & 0xFFFFFFFF), ((I2C1_CONTROL3 = (I2C1_CONTROL3 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_MNTEN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_NACKIE </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_TXEMIE </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_RXFIE </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_TXUFIE </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL3_RXOFIE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C1_CONTROL4  ------------------------------
// SVD Line: 4182

unsigned int I2C1_CONTROL4 __AT (0x4000E01C);



// ----------------------------  Field Item: I2C1_CONTROL4_DMATXEN  -------------------------------
// SVD Line: 4190

//  <item> SFDITEM_FIELD__I2C1_CONTROL4_DMATXEN
//    <name> DMATXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E01C) DMATX enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL4 ) </loc>
//      <o.0..0> DMATXEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_CONTROL4_DMARXEN  -------------------------------
// SVD Line: 4197

//  <item> SFDITEM_FIELD__I2C1_CONTROL4_DMARXEN
//    <name> DMARXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E01C) DMARX enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_CONTROL4 ) </loc>
//      <o.1..1> DMARXEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_CONTROL4  ---------------------------------
// SVD Line: 4182

//  <rtree> SFDITEM_REG__I2C1_CONTROL4
//    <name> CONTROL4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E01C) I2C Control Register 4 </i>
//    <loc> ( (unsigned int)((I2C1_CONTROL4 >> 0) & 0xFFFFFFFF), ((I2C1_CONTROL4 = (I2C1_CONTROL4 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_CONTROL4_DMATXEN </item>
//    <item> SFDITEM_FIELD__I2C1_CONTROL4_DMARXEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C1_STATUS1  ------------------------------
// SVD Line: 4206

unsigned int I2C1_STATUS1 __AT (0x4000E020);



// ------------------------------  Field Item: I2C1_STATUS1_RACK  ---------------------------------
// SVD Line: 4214

//  <item> SFDITEM_FIELD__I2C1_STATUS1_RACK
//    <name> RACK </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000E020) Acknowledge received(master or Slave TX mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.0..0> RACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS1_SRW  ----------------------------------
// SVD Line: 4221

//  <item> SFDITEM_FIELD__I2C1_STATUS1_SRW
//    <name> SRW </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000E020) Slave read/write </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.2..2> SRW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_STATUS1_READY  ---------------------------------
// SVD Line: 4228

//  <item> SFDITEM_FIELD__I2C1_STATUS1_READY
//    <name> READY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000E020) internal hardware core is ready for new command or not </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.3..3> READY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_STATUS1_ARBLOST  --------------------------------
// SVD Line: 4235

//  <item> SFDITEM_FIELD__I2C1_STATUS1_ARBLOST
//    <name> ARBLOST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E020) Arbitration lost flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.4..4> ARBLOST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS1_BUSY  ---------------------------------
// SVD Line: 4242

//  <item> SFDITEM_FIELD__I2C1_STATUS1_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000E020) indicates the status of the bus regardless of slave or master mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.5..5> BUSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS1_SAMF  ---------------------------------
// SVD Line: 4249

//  <item> SFDITEM_FIELD__I2C1_STATUS1_SAMF
//    <name> SAMF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E020) Address match </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.6..6> SAMF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS1_BND  ----------------------------------
// SVD Line: 4256

//  <item> SFDITEM_FIELD__I2C1_STATUS1_BND
//    <name> BND </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000E020) Byte end flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS1 ) </loc>
//      <o.7..7> BND
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_STATUS1  ----------------------------------
// SVD Line: 4206

//  <rtree> SFDITEM_REG__I2C1_STATUS1
//    <name> STATUS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E020) I2C Status Register 1 </i>
//    <loc> ( (unsigned int)((I2C1_STATUS1 >> 0) & 0xFFFFFFFF), ((I2C1_STATUS1 = (I2C1_STATUS1 & ~(0x50UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x50) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_RACK </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_SRW </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_READY </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_BUSY </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_SAMF </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS1_BND </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C1_STATUS2  ------------------------------
// SVD Line: 4265

unsigned int I2C1_STATUS2 __AT (0x4000E024);



// ------------------------------  Field Item: I2C1_STATUS2_TXEF  ---------------------------------
// SVD Line: 4273

//  <item> SFDITEM_FIELD__I2C1_STATUS2_TXEF
//    <name> TXEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E024) TX buffer empty flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS2 ) </loc>
//      <o.0..0> TXEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS2_RXFF  ---------------------------------
// SVD Line: 4280

//  <item> SFDITEM_FIELD__I2C1_STATUS2_RXFF
//    <name> RXFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E024) RX buffer Full flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS2 ) </loc>
//      <o.1..1> RXFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS2_TXUF  ---------------------------------
// SVD Line: 4287

//  <item> SFDITEM_FIELD__I2C1_STATUS2_TXUF
//    <name> TXUF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000E024) TX buffer underflow flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS2 ) </loc>
//      <o.2..2> TXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS2_RXOF  ---------------------------------
// SVD Line: 4294

//  <item> SFDITEM_FIELD__I2C1_STATUS2_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000E024) RX buffer overflow flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS2 ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_STATUS2_IDLE  ---------------------------------
// SVD Line: 4301

//  <item> SFDITEM_FIELD__I2C1_STATUS2_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000E024) I2C Core Hardware state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_STATUS2 ) </loc>
//      <o.7..7> IDLE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_STATUS2  ----------------------------------
// SVD Line: 4265

//  <rtree> SFDITEM_REG__I2C1_STATUS2
//    <name> STATUS2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E024) I2C Status Register 2 </i>
//    <loc> ( (unsigned int)((I2C1_STATUS2 >> 0) & 0xFFFFFFFF), ((I2C1_STATUS2 = (I2C1_STATUS2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_STATUS2_TXEF </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS2_RXFF </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS2_TXUF </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS2_RXOF </item>
//    <item> SFDITEM_FIELD__I2C1_STATUS2_IDLE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C1_DGL_CFG  ------------------------------
// SVD Line: 4310

unsigned int I2C1_DGL_CFG __AT (0x4000E028);



// ----------------------------  Field Item: I2C1_DGL_CFG_DGL_CNT  --------------------------------
// SVD Line: 4318

//  <item> SFDITEM_FIELD__I2C1_DGL_CFG_DGL_CNT
//    <name> DGL_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000E028) Deglitch Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_DGL_CFG >> 0) & 0xF), ((I2C1_DGL_CFG = (I2C1_DGL_CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C1_DGL_CFG_STARTF  --------------------------------
// SVD Line: 4325

//  <item> SFDITEM_FIELD__I2C1_DGL_CFG_STARTF
//    <name> STARTF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000E028) I2C Bus Start Detect Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_DGL_CFG ) </loc>
//      <o.4..4> STARTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C1_DGL_CFG_SSIE  ---------------------------------
// SVD Line: 4332

//  <item> SFDITEM_FIELD__I2C1_DGL_CFG_SSIE
//    <name> SSIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000E028) I2C Bus STOP or START interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_DGL_CFG ) </loc>
//      <o.5..5> SSIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_DGL_CFG_STOPF  ---------------------------------
// SVD Line: 4339

//  <item> SFDITEM_FIELD__I2C1_DGL_CFG_STOPF
//    <name> STOPF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000E028) I2C Bus Stop detect Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_DGL_CFG ) </loc>
//      <o.6..6> STOPF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C1_DGL_CFG_DGLEN  ---------------------------------
// SVD Line: 4346

//  <item> SFDITEM_FIELD__I2C1_DGL_CFG_DGLEN
//    <name> DGLEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000E028) I2C Deglitch filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_DGL_CFG ) </loc>
//      <o.7..7> DGLEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C1_DGL_CFG  ----------------------------------
// SVD Line: 4310

//  <rtree> SFDITEM_REG__I2C1_DGL_CFG
//    <name> DGL_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E028) I2C Deglitch Configuration Register </i>
//    <loc> ( (unsigned int)((I2C1_DGL_CFG >> 0) & 0xFFFFFFFF), ((I2C1_DGL_CFG = (I2C1_DGL_CFG & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_DGL_CFG_DGL_CNT </item>
//    <item> SFDITEM_FIELD__I2C1_DGL_CFG_STARTF </item>
//    <item> SFDITEM_FIELD__I2C1_DGL_CFG_SSIE </item>
//    <item> SFDITEM_FIELD__I2C1_DGL_CFG_STOPF </item>
//    <item> SFDITEM_FIELD__I2C1_DGL_CFG_DGLEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C1_DATA  --------------------------------
// SVD Line: 4355

unsigned int I2C1_DATA __AT (0x4000E02C);



// -------------------------------  Field Item: I2C1_DATA_DATA  -----------------------------------
// SVD Line: 4363

//  <item> SFDITEM_FIELD__I2C1_DATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000E02C) Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C1_DATA >> 0) & 0xFF), ((I2C1_DATA = (I2C1_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C1_DATA_MAK  -----------------------------------
// SVD Line: 4370

//  <item> SFDITEM_FIELD__I2C1_DATA_MAK
//    <name> MAK </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000E02C) Slave Monitor Function ACK bit </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_DATA ) </loc>
//      <o.8..8> MAK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C1_DATA  -----------------------------------
// SVD Line: 4355

//  <rtree> SFDITEM_REG__I2C1_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E02C) I2C Data Register </i>
//    <loc> ( (unsigned int)((I2C1_DATA >> 0) & 0xFFFFFFFF), ((I2C1_DATA = (I2C1_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_DATA_DATA </item>
//    <item> SFDITEM_FIELD__I2C1_DATA_MAK </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C1_START_STOP  -----------------------------
// SVD Line: 4379

unsigned int I2C1_START_STOP __AT (0x4000E030);



// ----------------------------  Field Item: I2C1_START_STOP_START  -------------------------------
// SVD Line: 4387

//  <item> SFDITEM_FIELD__I2C1_START_STOP_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000E030) I2C Start(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_START_STOP ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C1_START_STOP_STOP  --------------------------------
// SVD Line: 4394

//  <item> SFDITEM_FIELD__I2C1_START_STOP_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000E030) I2C Stop(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C1_START_STOP ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: I2C1_START_STOP  --------------------------------
// SVD Line: 4379

//  <rtree> SFDITEM_REG__I2C1_START_STOP
//    <name> START_STOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000E030) I2C START_STOP Register </i>
//    <loc> ( (unsigned int)((I2C1_START_STOP >> 0) & 0xFFFFFFFF), ((I2C1_START_STOP = (I2C1_START_STOP & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C1_START_STOP_START </item>
//    <item> SFDITEM_FIELD__I2C1_START_STOP_STOP </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C1  -------------------------------------
// SVD Line: 3923

//  <view> I2C1
//    <name> I2C1 </name>
//    <item> SFDITEM_REG__I2C1_ADDR1 </item>
//    <item> SFDITEM_REG__I2C1_ADDR2 </item>
//    <item> SFDITEM_REG__I2C1_SAMPLE_CNT </item>
//    <item> SFDITEM_REG__I2C1_STEP_CNT </item>
//    <item> SFDITEM_REG__I2C1_CONTROL1 </item>
//    <item> SFDITEM_REG__I2C1_CONTROL2 </item>
//    <item> SFDITEM_REG__I2C1_CONTROL3 </item>
//    <item> SFDITEM_REG__I2C1_CONTROL4 </item>
//    <item> SFDITEM_REG__I2C1_STATUS1 </item>
//    <item> SFDITEM_REG__I2C1_STATUS2 </item>
//    <item> SFDITEM_REG__I2C1_DGL_CFG </item>
//    <item> SFDITEM_REG__I2C1_DATA </item>
//    <item> SFDITEM_REG__I2C1_START_STOP </item>
//  </view>
//  


// ----------------------------  Register Item Address: I2C2_ADDR1  -------------------------------
// SVD Line: 4421

unsigned int I2C2_ADDR1 __AT (0x4000F000);



// --------------------------------  Field Item: I2C2_ADDR1_AD  -----------------------------------
// SVD Line: 4429

//  <item> SFDITEM_FIELD__I2C2_ADDR1_AD
//    <name> AD </name>
//    <rw> 
//    <i> [Bits 7..1] RW (@ 0x4000F000) Address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_ADDR1 >> 1) & 0x7F), ((I2C2_ADDR1 = (I2C2_ADDR1 & ~(0x7FUL << 1 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 1 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C2_ADDR1  -----------------------------------
// SVD Line: 4421

//  <rtree> SFDITEM_REG__I2C2_ADDR1
//    <name> ADDR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F000) I2C Address Register 1 </i>
//    <loc> ( (unsigned int)((I2C2_ADDR1 >> 0) & 0xFFFFFFFF), ((I2C2_ADDR1 = (I2C2_ADDR1 & ~(0xFEUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFE) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_ADDR1_AD </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_ADDR2  -------------------------------
// SVD Line: 4438

unsigned int I2C2_ADDR2 __AT (0x4000F004);



// --------------------------------  Field Item: I2C2_ADDR2_AD  -----------------------------------
// SVD Line: 4447

//  <item> SFDITEM_FIELD__I2C2_ADDR2_AD
//    <name> AD </name>
//    <rw> 
//    <i> [Bits 2..0] RW (@ 0x4000F004) Address </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_ADDR2 >> 0) & 0x7), ((I2C2_ADDR2 = (I2C2_ADDR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: I2C2_ADDR2  -----------------------------------
// SVD Line: 4438

//  <rtree> SFDITEM_REG__I2C2_ADDR2
//    <name> ADDR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F004) I2C ADDR register 2 </i>
//    <loc> ( (unsigned int)((I2C2_ADDR2 >> 0) & 0xFFFFFFFF), ((I2C2_ADDR2 = (I2C2_ADDR2 & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_ADDR2_AD </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C2_SAMPLE_CNT  -----------------------------
// SVD Line: 4456

unsigned int I2C2_SAMPLE_CNT __AT (0x4000F008);



// -----------------------  Field Item: I2C2_SAMPLE_CNT_SAMPLE_CNT_DIV  ---------------------------
// SVD Line: 4465

//  <item> SFDITEM_FIELD__I2C2_SAMPLE_CNT_SAMPLE_CNT_DIV
//    <name> SAMPLE_CNT_DIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000F008) Adjust the width of each sample </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_SAMPLE_CNT >> 0) & 0xFF), ((I2C2_SAMPLE_CNT = (I2C2_SAMPLE_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: I2C2_SAMPLE_CNT  --------------------------------
// SVD Line: 4456

//  <rtree> SFDITEM_REG__I2C2_SAMPLE_CNT
//    <name> SAMPLE_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F008) I2C SAMPLE CNT Register </i>
//    <loc> ( (unsigned int)((I2C2_SAMPLE_CNT >> 0) & 0xFFFFFFFF), ((I2C2_SAMPLE_CNT = (I2C2_SAMPLE_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_SAMPLE_CNT_SAMPLE_CNT_DIV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_STEP_CNT  ------------------------------
// SVD Line: 4474

unsigned int I2C2_STEP_CNT __AT (0x4000F00C);



// -------------------------  Field Item: I2C2_STEP_CNT_STEP_CNT_DIV  -----------------------------
// SVD Line: 4482

//  <item> SFDITEM_FIELD__I2C2_STEP_CNT_STEP_CNT_DIV
//    <name> STEP_CNT_DIV </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000F00C) Specifies the number of Samples per half pulse width </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_STEP_CNT >> 0) & 0xFF), ((I2C2_STEP_CNT = (I2C2_STEP_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_STEP_CNT  ---------------------------------
// SVD Line: 4474

//  <rtree> SFDITEM_REG__I2C2_STEP_CNT
//    <name> STEP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F00C) I2C STEP CNT Register </i>
//    <loc> ( (unsigned int)((I2C2_STEP_CNT >> 0) & 0xFFFFFFFF), ((I2C2_STEP_CNT = (I2C2_STEP_CNT & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_STEP_CNT_STEP_CNT_DIV </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROL1  ------------------------------
// SVD Line: 4491

unsigned int I2C2_CONTROL1 __AT (0x4000F010);



// -----------------------------  Field Item: I2C2_CONTROL1_WUEN  ---------------------------------
// SVD Line: 4499

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_WUEN
//    <name> WUEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000F010) wakeup enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.2..2> WUEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL1_TACK  ---------------------------------
// SVD Line: 4506

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_TACK
//    <name> TACK </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000F010) \nTransmit Acknowledge Enable\n0 : 0 = ACK will sent to the bus on the following receiving byte\n1 : 1 = NACK will sent to the bus on the following receiving byte </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.3..3> TACK
//        <0=> 0: 0 = ACK will sent to the bus on the following receiving byte
//        <1=> 1: 1 = NACK will sent to the bus on the following receiving byte
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: I2C2_CONTROL1_TX  ----------------------------------
// SVD Line: 4525

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_TX
//    <name> TX </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000F010) Transmit Mode Select(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.4..4> TX
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL1_MSTR  ---------------------------------
// SVD Line: 4532

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_MSTR
//    <name> MSTR </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000F010) \nI2C operation mode Select\n0 : 0 = Slave Mode\n1 : 1 = Master Mode </i>
//    <combo> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.5..5> MSTR
//        <0=> 0: 0 = Slave Mode
//        <1=> 1: 1 = Master Mode
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL1_IICIE  --------------------------------
// SVD Line: 4551

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_IICIE
//    <name> IICIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000F010) I2C interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.6..6> IICIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL1_IICEN  --------------------------------
// SVD Line: 4558

//  <item> SFDITEM_FIELD__I2C2_CONTROL1_IICEN
//    <name> IICEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000F010) I2C Module Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL1 ) </loc>
//      <o.7..7> IICEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROL1  ---------------------------------
// SVD Line: 4491

//  <rtree> SFDITEM_REG__I2C2_CONTROL1
//    <name> CONTROL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F010) I2C Control Register 1 </i>
//    <loc> ( (unsigned int)((I2C2_CONTROL1 >> 0) & 0xFFFFFFFF), ((I2C2_CONTROL1 = (I2C2_CONTROL1 & ~(0xFCUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFC) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_WUEN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_TACK </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_TX </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_MSTR </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_IICIE </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL1_IICEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROL2  ------------------------------
// SVD Line: 4567

unsigned int I2C2_CONTROL2 __AT (0x4000F014);



// -----------------------------  Field Item: I2C2_CONTROL2_STREN  --------------------------------
// SVD Line: 4575

//  <item> SFDITEM_FIELD__I2C2_CONTROL2_STREN
//    <name> STREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F014) SCL Strech enable(Valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL2 ) </loc>
//      <o.0..0> STREN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL2_ARBEN  --------------------------------
// SVD Line: 4582

//  <item> SFDITEM_FIELD__I2C2_CONTROL2_ARBEN
//    <name> ARBEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4000F014) Arbitration Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL2 ) </loc>
//      <o.3..3> ARBEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL2_SYNCEN  --------------------------------
// SVD Line: 4589

//  <item> SFDITEM_FIELD__I2C2_CONTROL2_SYNCEN
//    <name> SYNCEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000F014) SCL Sync Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL2 ) </loc>
//      <o.4..4> SYNCEN
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL2_ADEXT  --------------------------------
// SVD Line: 4596

//  <item> SFDITEM_FIELD__I2C2_CONTROL2_ADEXT
//    <name> ADEXT </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000F014) Address Extension(valid for Slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL2 ) </loc>
//      <o.6..6> ADEXT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL2_GCAEN  --------------------------------
// SVD Line: 4603

//  <item> SFDITEM_FIELD__I2C2_CONTROL2_GCAEN
//    <name> GCAEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000F014) General Call enable(valid for Slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL2 ) </loc>
//      <o.7..7> GCAEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROL2  ---------------------------------
// SVD Line: 4567

//  <rtree> SFDITEM_REG__I2C2_CONTROL2
//    <name> CONTROL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F014) I2C Control Register 2 </i>
//    <loc> ( (unsigned int)((I2C2_CONTROL2 >> 0) & 0xFFFFFFFF), ((I2C2_CONTROL2 = (I2C2_CONTROL2 & ~(0xD9UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xD9) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROL2_STREN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL2_ARBEN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL2_SYNCEN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL2_ADEXT </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL2_GCAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROL3  ------------------------------
// SVD Line: 4612

unsigned int I2C2_CONTROL3 __AT (0x4000F018);



// -----------------------------  Field Item: I2C2_CONTROL3_MNTEN  --------------------------------
// SVD Line: 4620

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_MNTEN
//    <name> MNTEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F018) Monitor Function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.0..0> MNTEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL3_NACKIE  --------------------------------
// SVD Line: 4627

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_NACKIE
//    <name> NACKIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000F018) NACK get interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.1..1> NACKIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL3_TXEMIE  --------------------------------
// SVD Line: 4634

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_TXEMIE
//    <name> TXEMIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000F018) TX buffer empty interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.4..4> TXEMIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_CONTROL3_RXFIE  --------------------------------
// SVD Line: 4641

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_RXFIE
//    <name> RXFIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000F018) RX buffer full interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.5..5> RXFIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL3_TXUFIE  --------------------------------
// SVD Line: 4648

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_TXUFIE
//    <name> TXUFIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000F018) TX buffer underflow error interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.6..6> TXUFIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL3_RXOFIE  --------------------------------
// SVD Line: 4655

//  <item> SFDITEM_FIELD__I2C2_CONTROL3_RXOFIE
//    <name> RXOFIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000F018) RX buffer overflow interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL3 ) </loc>
//      <o.7..7> RXOFIE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROL3  ---------------------------------
// SVD Line: 4612

//  <rtree> SFDITEM_REG__I2C2_CONTROL3
//    <name> CONTROL3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F018) I2C Control Register 3 </i>
//    <loc> ( (unsigned int)((I2C2_CONTROL3 >> 0) & 0xFFFFFFFF), ((I2C2_CONTROL3 = (I2C2_CONTROL3 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_MNTEN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_NACKIE </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_TXEMIE </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_RXFIE </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_TXUFIE </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL3_RXOFIE </item>
//  </rtree>
//  


// --------------------------  Register Item Address: I2C2_CONTROL4  ------------------------------
// SVD Line: 4664

unsigned int I2C2_CONTROL4 __AT (0x4000F01C);



// ----------------------------  Field Item: I2C2_CONTROL4_DMATXEN  -------------------------------
// SVD Line: 4672

//  <item> SFDITEM_FIELD__I2C2_CONTROL4_DMATXEN
//    <name> DMATXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F01C) DMATX enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL4 ) </loc>
//      <o.0..0> DMATXEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_CONTROL4_DMARXEN  -------------------------------
// SVD Line: 4679

//  <item> SFDITEM_FIELD__I2C2_CONTROL4_DMARXEN
//    <name> DMARXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000F01C) DMARX enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_CONTROL4 ) </loc>
//      <o.1..1> DMARXEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_CONTROL4  ---------------------------------
// SVD Line: 4664

//  <rtree> SFDITEM_REG__I2C2_CONTROL4
//    <name> CONTROL4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F01C) I2C Control Register 4 </i>
//    <loc> ( (unsigned int)((I2C2_CONTROL4 >> 0) & 0xFFFFFFFF), ((I2C2_CONTROL4 = (I2C2_CONTROL4 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_CONTROL4_DMATXEN </item>
//    <item> SFDITEM_FIELD__I2C2_CONTROL4_DMARXEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C2_STATUS1  ------------------------------
// SVD Line: 4688

unsigned int I2C2_STATUS1 __AT (0x4000F020);



// ------------------------------  Field Item: I2C2_STATUS1_RACK  ---------------------------------
// SVD Line: 4696

//  <item> SFDITEM_FIELD__I2C2_STATUS1_RACK
//    <name> RACK </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4000F020) Acknowledge received(master or Slave TX mode) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.0..0> RACK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS1_SRW  ----------------------------------
// SVD Line: 4703

//  <item> SFDITEM_FIELD__I2C2_STATUS1_SRW
//    <name> SRW </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000F020) Slave read/write </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.2..2> SRW
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_STATUS1_READY  ---------------------------------
// SVD Line: 4710

//  <item> SFDITEM_FIELD__I2C2_STATUS1_READY
//    <name> READY </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000F020) internal hardware core is ready for new command or not </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.3..3> READY
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_STATUS1_ARBLOST  --------------------------------
// SVD Line: 4717

//  <item> SFDITEM_FIELD__I2C2_STATUS1_ARBLOST
//    <name> ARBLOST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000F020) Arbitration lost flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.4..4> ARBLOST
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS1_BUSY  ---------------------------------
// SVD Line: 4724

//  <item> SFDITEM_FIELD__I2C2_STATUS1_BUSY
//    <name> BUSY </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4000F020) indicates the status of the bus regardless of slave or master mode </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.5..5> BUSY
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS1_SAMF  ---------------------------------
// SVD Line: 4731

//  <item> SFDITEM_FIELD__I2C2_STATUS1_SAMF
//    <name> SAMF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000F020) Address match </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.6..6> SAMF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS1_BND  ----------------------------------
// SVD Line: 4738

//  <item> SFDITEM_FIELD__I2C2_STATUS1_BND
//    <name> BND </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000F020) Byte end flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS1 ) </loc>
//      <o.7..7> BND
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_STATUS1  ----------------------------------
// SVD Line: 4688

//  <rtree> SFDITEM_REG__I2C2_STATUS1
//    <name> STATUS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F020) I2C Status Register 1 </i>
//    <loc> ( (unsigned int)((I2C2_STATUS1 >> 0) & 0xFFFFFFFF), ((I2C2_STATUS1 = (I2C2_STATUS1 & ~(0x50UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x50) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_RACK </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_SRW </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_READY </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_ARBLOST </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_BUSY </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_SAMF </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS1_BND </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C2_STATUS2  ------------------------------
// SVD Line: 4747

unsigned int I2C2_STATUS2 __AT (0x4000F024);



// ------------------------------  Field Item: I2C2_STATUS2_TXEF  ---------------------------------
// SVD Line: 4755

//  <item> SFDITEM_FIELD__I2C2_STATUS2_TXEF
//    <name> TXEF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F024) TX buffer empty flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS2 ) </loc>
//      <o.0..0> TXEF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS2_RXFF  ---------------------------------
// SVD Line: 4762

//  <item> SFDITEM_FIELD__I2C2_STATUS2_RXFF
//    <name> RXFF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000F024) RX buffer Full flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS2 ) </loc>
//      <o.1..1> RXFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS2_TXUF  ---------------------------------
// SVD Line: 4769

//  <item> SFDITEM_FIELD__I2C2_STATUS2_TXUF
//    <name> TXUF </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4000F024) TX buffer underflow flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS2 ) </loc>
//      <o.2..2> TXUF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS2_RXOF  ---------------------------------
// SVD Line: 4776

//  <item> SFDITEM_FIELD__I2C2_STATUS2_RXOF
//    <name> RXOF </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4000F024) RX buffer overflow flag(only valid for slave) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS2 ) </loc>
//      <o.3..3> RXOF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_STATUS2_IDLE  ---------------------------------
// SVD Line: 4783

//  <item> SFDITEM_FIELD__I2C2_STATUS2_IDLE
//    <name> IDLE </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4000F024) I2C Core Hardware state </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_STATUS2 ) </loc>
//      <o.7..7> IDLE
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_STATUS2  ----------------------------------
// SVD Line: 4747

//  <rtree> SFDITEM_REG__I2C2_STATUS2
//    <name> STATUS2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F024) I2C Status Register 2 </i>
//    <loc> ( (unsigned int)((I2C2_STATUS2 >> 0) & 0xFFFFFFFF), ((I2C2_STATUS2 = (I2C2_STATUS2 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_STATUS2_TXEF </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS2_RXFF </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS2_TXUF </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS2_RXOF </item>
//    <item> SFDITEM_FIELD__I2C2_STATUS2_IDLE </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: I2C2_DGL_CFG  ------------------------------
// SVD Line: 4792

unsigned int I2C2_DGL_CFG __AT (0x4000F028);



// ----------------------------  Field Item: I2C2_DGL_CFG_DGL_CNT  --------------------------------
// SVD Line: 4800

//  <item> SFDITEM_FIELD__I2C2_DGL_CFG_DGL_CNT
//    <name> DGL_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4000F028) Deglitch Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_DGL_CFG >> 0) & 0xF), ((I2C2_DGL_CFG = (I2C2_DGL_CFG & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: I2C2_DGL_CFG_STARTF  --------------------------------
// SVD Line: 4807

//  <item> SFDITEM_FIELD__I2C2_DGL_CFG_STARTF
//    <name> STARTF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000F028) I2C Bus Start Detect Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_DGL_CFG ) </loc>
//      <o.4..4> STARTF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: I2C2_DGL_CFG_SSIE  ---------------------------------
// SVD Line: 4814

//  <item> SFDITEM_FIELD__I2C2_DGL_CFG_SSIE
//    <name> SSIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000F028) I2C Bus STOP or START interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_DGL_CFG ) </loc>
//      <o.5..5> SSIE
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_DGL_CFG_STOPF  ---------------------------------
// SVD Line: 4821

//  <item> SFDITEM_FIELD__I2C2_DGL_CFG_STOPF
//    <name> STOPF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000F028) I2C Bus Stop detect Flag </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_DGL_CFG ) </loc>
//      <o.6..6> STOPF
//    </check>
//  </item>
//  


// -----------------------------  Field Item: I2C2_DGL_CFG_DGLEN  ---------------------------------
// SVD Line: 4828

//  <item> SFDITEM_FIELD__I2C2_DGL_CFG_DGLEN
//    <name> DGLEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000F028) I2C Deglitch filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_DGL_CFG ) </loc>
//      <o.7..7> DGLEN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: I2C2_DGL_CFG  ----------------------------------
// SVD Line: 4792

//  <rtree> SFDITEM_REG__I2C2_DGL_CFG
//    <name> DGL_CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F028) I2C Deglitch Configuration Register </i>
//    <loc> ( (unsigned int)((I2C2_DGL_CFG >> 0) & 0xFFFFFFFF), ((I2C2_DGL_CFG = (I2C2_DGL_CFG & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_DGL_CFG_DGL_CNT </item>
//    <item> SFDITEM_FIELD__I2C2_DGL_CFG_STARTF </item>
//    <item> SFDITEM_FIELD__I2C2_DGL_CFG_SSIE </item>
//    <item> SFDITEM_FIELD__I2C2_DGL_CFG_STOPF </item>
//    <item> SFDITEM_FIELD__I2C2_DGL_CFG_DGLEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: I2C2_DATA  --------------------------------
// SVD Line: 4837

unsigned int I2C2_DATA __AT (0x4000F02C);



// -------------------------------  Field Item: I2C2_DATA_DATA  -----------------------------------
// SVD Line: 4845

//  <item> SFDITEM_FIELD__I2C2_DATA_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000F02C) Data </i>
//    <edit> 
//      <loc> ( (unsigned char)((I2C2_DATA >> 0) & 0xFF), ((I2C2_DATA = (I2C2_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: I2C2_DATA_MAK  -----------------------------------
// SVD Line: 4852

//  <item> SFDITEM_FIELD__I2C2_DATA_MAK
//    <name> MAK </name>
//    <r> 
//    <i> [Bit 8] RO (@ 0x4000F02C) Slave Monitor Function ACK bit </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_DATA ) </loc>
//      <o.8..8> MAK
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: I2C2_DATA  -----------------------------------
// SVD Line: 4837

//  <rtree> SFDITEM_REG__I2C2_DATA
//    <name> DATA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F02C) I2C Data Register </i>
//    <loc> ( (unsigned int)((I2C2_DATA >> 0) & 0xFFFFFFFF), ((I2C2_DATA = (I2C2_DATA & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_DATA_DATA </item>
//    <item> SFDITEM_FIELD__I2C2_DATA_MAK </item>
//  </rtree>
//  


// -------------------------  Register Item Address: I2C2_START_STOP  -----------------------------
// SVD Line: 4861

unsigned int I2C2_START_STOP __AT (0x4000F030);



// ----------------------------  Field Item: I2C2_START_STOP_START  -------------------------------
// SVD Line: 4869

//  <item> SFDITEM_FIELD__I2C2_START_STOP_START
//    <name> START </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000F030) I2C Start(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_START_STOP ) </loc>
//      <o.0..0> START
//    </check>
//  </item>
//  


// ----------------------------  Field Item: I2C2_START_STOP_STOP  --------------------------------
// SVD Line: 4876

//  <item> SFDITEM_FIELD__I2C2_START_STOP_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000F030) I2C Stop(valid for master) </i>
//    <check> 
//      <loc> ( (unsigned int) I2C2_START_STOP ) </loc>
//      <o.1..1> STOP
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: I2C2_START_STOP  --------------------------------
// SVD Line: 4861

//  <rtree> SFDITEM_REG__I2C2_START_STOP
//    <name> START_STOP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000F030) I2C START_STOP Register </i>
//    <loc> ( (unsigned int)((I2C2_START_STOP >> 0) & 0xFFFFFFFF), ((I2C2_START_STOP = (I2C2_START_STOP & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__I2C2_START_STOP_START </item>
//    <item> SFDITEM_FIELD__I2C2_START_STOP_STOP </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: I2C2  -------------------------------------
// SVD Line: 4405

//  <view> I2C2
//    <name> I2C2 </name>
//    <item> SFDITEM_REG__I2C2_ADDR1 </item>
//    <item> SFDITEM_REG__I2C2_ADDR2 </item>
//    <item> SFDITEM_REG__I2C2_SAMPLE_CNT </item>
//    <item> SFDITEM_REG__I2C2_STEP_CNT </item>
//    <item> SFDITEM_REG__I2C2_CONTROL1 </item>
//    <item> SFDITEM_REG__I2C2_CONTROL2 </item>
//    <item> SFDITEM_REG__I2C2_CONTROL3 </item>
//    <item> SFDITEM_REG__I2C2_CONTROL4 </item>
//    <item> SFDITEM_REG__I2C2_STATUS1 </item>
//    <item> SFDITEM_REG__I2C2_STATUS2 </item>
//    <item> SFDITEM_REG__I2C2_DGL_CFG </item>
//    <item> SFDITEM_REG__I2C2_DATA </item>
//    <item> SFDITEM_REG__I2C2_START_STOP </item>
//  </view>
//  


// ----------------------------  Register Item Address: TIMER_MCR  --------------------------------
// SVD Line: 4898

unsigned int TIMER_MCR __AT (0x40011000);



// -------------------------------  Field Item: TIMER_MCR_MDIS  -----------------------------------
// SVD Line: 4907

//  <item> SFDITEM_FIELD__TIMER_MCR_MDIS
//    <name> MDIS </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011000) \nTimers Module Disable Register\n0 : 0 = Timers are enabled.\n1 : 1 = Timers are disabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER_MCR ) </loc>
//      <o.1..1> MDIS
//        <0=> 0: 0 = Timers are enabled.
//        <1=> 1: 1 = Timers are disabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER_MCR  -----------------------------------
// SVD Line: 4898

//  <rtree> SFDITEM_REG__TIMER_MCR
//    <name> MCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011000) Timer Module Control Regitser </i>
//    <loc> ( (unsigned int)((TIMER_MCR >> 0) & 0xFFFFFFFF), ((TIMER_MCR = (TIMER_MCR & ~(0x2UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x2) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER_MCR_MDIS </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER  -------------------------------------
// SVD Line: 4888

//  <view> TIMER
//    <name> TIMER </name>
//    <item> SFDITEM_REG__TIMER_MCR </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER0_INITVAL  -----------------------------
// SVD Line: 4945

unsigned int TIMER0_INITVAL __AT (0x40011100);



// ----------------------------  Field Item: TIMER0_INITVAL_LDVAL  --------------------------------
// SVD Line: 4954

//  <item> SFDITEM_FIELD__TIMER0_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011100) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER0_INITVAL = (TIMER0_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER0_INITVAL  ---------------------------------
// SVD Line: 4945

//  <rtree> SFDITEM_REG__TIMER0_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011100) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER0_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER0_INITVAL = (TIMER0_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_CVAL  -------------------------------
// SVD Line: 4963

unsigned int TIMER0_CVAL __AT (0x40011104);



// -------------------------------  Field Item: TIMER0_CVAL_CNT  ----------------------------------
// SVD Line: 4972

//  <item> SFDITEM_FIELD__TIMER0_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011104) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER0_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_CVAL  ----------------------------------
// SVD Line: 4963

//  <rtree> SFDITEM_REG__TIMER0_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011104) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER0_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER0_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER0_INIT  -------------------------------
// SVD Line: 4981

unsigned int TIMER0_INIT __AT (0x40011108);



// -----------------------------  Field Item: TIMER0_INIT_TIMEREN  --------------------------------
// SVD Line: 4990

//  <item> SFDITEM_FIELD__TIMER0_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011108) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER0_INIT_TIE  ----------------------------------
// SVD Line: 5009

//  <item> SFDITEM_FIELD__TIMER0_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011108) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER0_INIT_LINKEN  ---------------------------------
// SVD Line: 5028

//  <item> SFDITEM_FIELD__TIMER0_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011108) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER0_INIT  ----------------------------------
// SVD Line: 4981

//  <rtree> SFDITEM_REG__TIMER0_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011108) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER0_INIT >> 0) & 0xFFFFFFFF), ((TIMER0_INIT = (TIMER0_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER0_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER0_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER0_TF  --------------------------------
// SVD Line: 5050

unsigned int TIMER0_TF __AT (0x4001110C);



// --------------------------------  Field Item: TIMER0_TF_TIF  -----------------------------------
// SVD Line: 5059

//  <item> SFDITEM_FIELD__TIMER0_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001110C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER0_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER0_TF  -----------------------------------
// SVD Line: 5050

//  <rtree> SFDITEM_REG__TIMER0_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001110C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER0_TF >> 0) & 0xFFFFFFFF), ((TIMER0_TF = (TIMER0_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER0_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER0  ------------------------------------
// SVD Line: 4930

//  <view> TIMER0
//    <name> TIMER0 </name>
//    <item> SFDITEM_REG__TIMER0_INITVAL </item>
//    <item> SFDITEM_REG__TIMER0_CVAL </item>
//    <item> SFDITEM_REG__TIMER0_INIT </item>
//    <item> SFDITEM_REG__TIMER0_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER1_INITVAL  -----------------------------
// SVD Line: 5097

unsigned int TIMER1_INITVAL __AT (0x40011110);



// ----------------------------  Field Item: TIMER1_INITVAL_LDVAL  --------------------------------
// SVD Line: 5106

//  <item> SFDITEM_FIELD__TIMER1_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011110) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER1_INITVAL = (TIMER1_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER1_INITVAL  ---------------------------------
// SVD Line: 5097

//  <rtree> SFDITEM_REG__TIMER1_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011110) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER1_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER1_INITVAL = (TIMER1_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_CVAL  -------------------------------
// SVD Line: 5115

unsigned int TIMER1_CVAL __AT (0x40011114);



// -------------------------------  Field Item: TIMER1_CVAL_CNT  ----------------------------------
// SVD Line: 5124

//  <item> SFDITEM_FIELD__TIMER1_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011114) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER1_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_CVAL  ----------------------------------
// SVD Line: 5115

//  <rtree> SFDITEM_REG__TIMER1_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011114) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER1_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER1_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER1_INIT  -------------------------------
// SVD Line: 5133

unsigned int TIMER1_INIT __AT (0x40011118);



// -----------------------------  Field Item: TIMER1_INIT_TIMEREN  --------------------------------
// SVD Line: 5142

//  <item> SFDITEM_FIELD__TIMER1_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011118) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER1_INIT_TIE  ----------------------------------
// SVD Line: 5161

//  <item> SFDITEM_FIELD__TIMER1_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011118) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER1_INIT_LINKEN  ---------------------------------
// SVD Line: 5180

//  <item> SFDITEM_FIELD__TIMER1_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011118) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER1_INIT  ----------------------------------
// SVD Line: 5133

//  <rtree> SFDITEM_REG__TIMER1_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011118) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER1_INIT >> 0) & 0xFFFFFFFF), ((TIMER1_INIT = (TIMER1_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER1_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER1_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER1_TF  --------------------------------
// SVD Line: 5202

unsigned int TIMER1_TF __AT (0x4001111C);



// --------------------------------  Field Item: TIMER1_TF_TIF  -----------------------------------
// SVD Line: 5211

//  <item> SFDITEM_FIELD__TIMER1_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001111C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER1_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER1_TF  -----------------------------------
// SVD Line: 5202

//  <rtree> SFDITEM_REG__TIMER1_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001111C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER1_TF >> 0) & 0xFFFFFFFF), ((TIMER1_TF = (TIMER1_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER1_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER1  ------------------------------------
// SVD Line: 5082

//  <view> TIMER1
//    <name> TIMER1 </name>
//    <item> SFDITEM_REG__TIMER1_INITVAL </item>
//    <item> SFDITEM_REG__TIMER1_CVAL </item>
//    <item> SFDITEM_REG__TIMER1_INIT </item>
//    <item> SFDITEM_REG__TIMER1_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER2_INITVAL  -----------------------------
// SVD Line: 5250

unsigned int TIMER2_INITVAL __AT (0x40011120);



// ----------------------------  Field Item: TIMER2_INITVAL_LDVAL  --------------------------------
// SVD Line: 5259

//  <item> SFDITEM_FIELD__TIMER2_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011120) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER2_INITVAL = (TIMER2_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER2_INITVAL  ---------------------------------
// SVD Line: 5250

//  <rtree> SFDITEM_REG__TIMER2_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011120) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER2_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER2_INITVAL = (TIMER2_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_CVAL  -------------------------------
// SVD Line: 5268

unsigned int TIMER2_CVAL __AT (0x40011124);



// -------------------------------  Field Item: TIMER2_CVAL_CNT  ----------------------------------
// SVD Line: 5277

//  <item> SFDITEM_FIELD__TIMER2_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011124) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER2_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_CVAL  ----------------------------------
// SVD Line: 5268

//  <rtree> SFDITEM_REG__TIMER2_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011124) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER2_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER2_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER2_INIT  -------------------------------
// SVD Line: 5286

unsigned int TIMER2_INIT __AT (0x40011128);



// -----------------------------  Field Item: TIMER2_INIT_TIMEREN  --------------------------------
// SVD Line: 5295

//  <item> SFDITEM_FIELD__TIMER2_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011128) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER2_INIT_TIE  ----------------------------------
// SVD Line: 5314

//  <item> SFDITEM_FIELD__TIMER2_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011128) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER2_INIT_LINKEN  ---------------------------------
// SVD Line: 5333

//  <item> SFDITEM_FIELD__TIMER2_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011128) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER2_INIT  ----------------------------------
// SVD Line: 5286

//  <rtree> SFDITEM_REG__TIMER2_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011128) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER2_INIT >> 0) & 0xFFFFFFFF), ((TIMER2_INIT = (TIMER2_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER2_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER2_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER2_TF  --------------------------------
// SVD Line: 5355

unsigned int TIMER2_TF __AT (0x4001112C);



// --------------------------------  Field Item: TIMER2_TF_TIF  -----------------------------------
// SVD Line: 5364

//  <item> SFDITEM_FIELD__TIMER2_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001112C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER2_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER2_TF  -----------------------------------
// SVD Line: 5355

//  <rtree> SFDITEM_REG__TIMER2_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001112C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER2_TF >> 0) & 0xFFFFFFFF), ((TIMER2_TF = (TIMER2_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER2_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER2  ------------------------------------
// SVD Line: 5235

//  <view> TIMER2
//    <name> TIMER2 </name>
//    <item> SFDITEM_REG__TIMER2_INITVAL </item>
//    <item> SFDITEM_REG__TIMER2_CVAL </item>
//    <item> SFDITEM_REG__TIMER2_INIT </item>
//    <item> SFDITEM_REG__TIMER2_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER3_INITVAL  -----------------------------
// SVD Line: 5403

unsigned int TIMER3_INITVAL __AT (0x40011130);



// ----------------------------  Field Item: TIMER3_INITVAL_LDVAL  --------------------------------
// SVD Line: 5412

//  <item> SFDITEM_FIELD__TIMER3_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011130) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER3_INITVAL = (TIMER3_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER3_INITVAL  ---------------------------------
// SVD Line: 5403

//  <rtree> SFDITEM_REG__TIMER3_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011130) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER3_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER3_INITVAL = (TIMER3_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_CVAL  -------------------------------
// SVD Line: 5421

unsigned int TIMER3_CVAL __AT (0x40011134);



// -------------------------------  Field Item: TIMER3_CVAL_CNT  ----------------------------------
// SVD Line: 5430

//  <item> SFDITEM_FIELD__TIMER3_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011134) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER3_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_CVAL  ----------------------------------
// SVD Line: 5421

//  <rtree> SFDITEM_REG__TIMER3_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011134) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER3_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER3_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER3_INIT  -------------------------------
// SVD Line: 5439

unsigned int TIMER3_INIT __AT (0x40011138);



// -----------------------------  Field Item: TIMER3_INIT_TIMEREN  --------------------------------
// SVD Line: 5448

//  <item> SFDITEM_FIELD__TIMER3_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011138) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER3_INIT_TIE  ----------------------------------
// SVD Line: 5467

//  <item> SFDITEM_FIELD__TIMER3_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011138) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER3_INIT_LINKEN  ---------------------------------
// SVD Line: 5486

//  <item> SFDITEM_FIELD__TIMER3_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011138) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER3_INIT  ----------------------------------
// SVD Line: 5439

//  <rtree> SFDITEM_REG__TIMER3_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011138) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER3_INIT >> 0) & 0xFFFFFFFF), ((TIMER3_INIT = (TIMER3_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER3_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER3_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER3_TF  --------------------------------
// SVD Line: 5508

unsigned int TIMER3_TF __AT (0x4001113C);



// --------------------------------  Field Item: TIMER3_TF_TIF  -----------------------------------
// SVD Line: 5517

//  <item> SFDITEM_FIELD__TIMER3_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001113C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER3_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER3_TF  -----------------------------------
// SVD Line: 5508

//  <rtree> SFDITEM_REG__TIMER3_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001113C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER3_TF >> 0) & 0xFFFFFFFF), ((TIMER3_TF = (TIMER3_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER3_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER3  ------------------------------------
// SVD Line: 5388

//  <view> TIMER3
//    <name> TIMER3 </name>
//    <item> SFDITEM_REG__TIMER3_INITVAL </item>
//    <item> SFDITEM_REG__TIMER3_CVAL </item>
//    <item> SFDITEM_REG__TIMER3_INIT </item>
//    <item> SFDITEM_REG__TIMER3_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER4_INITVAL  -----------------------------
// SVD Line: 5556

unsigned int TIMER4_INITVAL __AT (0x40011140);



// ----------------------------  Field Item: TIMER4_INITVAL_LDVAL  --------------------------------
// SVD Line: 5565

//  <item> SFDITEM_FIELD__TIMER4_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011140) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER4_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER4_INITVAL = (TIMER4_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER4_INITVAL  ---------------------------------
// SVD Line: 5556

//  <rtree> SFDITEM_REG__TIMER4_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011140) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER4_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER4_INITVAL = (TIMER4_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER4_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER4_CVAL  -------------------------------
// SVD Line: 5574

unsigned int TIMER4_CVAL __AT (0x40011144);



// -------------------------------  Field Item: TIMER4_CVAL_CNT  ----------------------------------
// SVD Line: 5583

//  <item> SFDITEM_FIELD__TIMER4_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011144) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER4_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER4_CVAL  ----------------------------------
// SVD Line: 5574

//  <rtree> SFDITEM_REG__TIMER4_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011144) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER4_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER4_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER4_INIT  -------------------------------
// SVD Line: 5592

unsigned int TIMER4_INIT __AT (0x40011148);



// -----------------------------  Field Item: TIMER4_INIT_TIMEREN  --------------------------------
// SVD Line: 5601

//  <item> SFDITEM_FIELD__TIMER4_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011148) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER4_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER4_INIT_TIE  ----------------------------------
// SVD Line: 5620

//  <item> SFDITEM_FIELD__TIMER4_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011148) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER4_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER4_INIT_LINKEN  ---------------------------------
// SVD Line: 5639

//  <item> SFDITEM_FIELD__TIMER4_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011148) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER4_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER4_INIT  ----------------------------------
// SVD Line: 5592

//  <rtree> SFDITEM_REG__TIMER4_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011148) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER4_INIT >> 0) & 0xFFFFFFFF), ((TIMER4_INIT = (TIMER4_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER4_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER4_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER4_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER4_TF  --------------------------------
// SVD Line: 5661

unsigned int TIMER4_TF __AT (0x4001114C);



// --------------------------------  Field Item: TIMER4_TF_TIF  -----------------------------------
// SVD Line: 5670

//  <item> SFDITEM_FIELD__TIMER4_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001114C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER4_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER4_TF  -----------------------------------
// SVD Line: 5661

//  <rtree> SFDITEM_REG__TIMER4_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001114C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER4_TF >> 0) & 0xFFFFFFFF), ((TIMER4_TF = (TIMER4_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER4_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER4  ------------------------------------
// SVD Line: 5541

//  <view> TIMER4
//    <name> TIMER4 </name>
//    <item> SFDITEM_REG__TIMER4_INITVAL </item>
//    <item> SFDITEM_REG__TIMER4_CVAL </item>
//    <item> SFDITEM_REG__TIMER4_INIT </item>
//    <item> SFDITEM_REG__TIMER4_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER5_INITVAL  -----------------------------
// SVD Line: 5709

unsigned int TIMER5_INITVAL __AT (0x40011150);



// ----------------------------  Field Item: TIMER5_INITVAL_LDVAL  --------------------------------
// SVD Line: 5718

//  <item> SFDITEM_FIELD__TIMER5_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011150) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER5_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER5_INITVAL = (TIMER5_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER5_INITVAL  ---------------------------------
// SVD Line: 5709

//  <rtree> SFDITEM_REG__TIMER5_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011150) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER5_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER5_INITVAL = (TIMER5_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER5_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER5_CVAL  -------------------------------
// SVD Line: 5727

unsigned int TIMER5_CVAL __AT (0x40011154);



// -------------------------------  Field Item: TIMER5_CVAL_CNT  ----------------------------------
// SVD Line: 5736

//  <item> SFDITEM_FIELD__TIMER5_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011154) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER5_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER5_CVAL  ----------------------------------
// SVD Line: 5727

//  <rtree> SFDITEM_REG__TIMER5_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011154) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER5_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER5_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER5_INIT  -------------------------------
// SVD Line: 5745

unsigned int TIMER5_INIT __AT (0x40011158);



// -----------------------------  Field Item: TIMER5_INIT_TIMEREN  --------------------------------
// SVD Line: 5754

//  <item> SFDITEM_FIELD__TIMER5_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011158) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER5_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER5_INIT_TIE  ----------------------------------
// SVD Line: 5773

//  <item> SFDITEM_FIELD__TIMER5_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011158) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER5_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER5_INIT_LINKEN  ---------------------------------
// SVD Line: 5792

//  <item> SFDITEM_FIELD__TIMER5_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011158) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER5_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER5_INIT  ----------------------------------
// SVD Line: 5745

//  <rtree> SFDITEM_REG__TIMER5_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011158) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER5_INIT >> 0) & 0xFFFFFFFF), ((TIMER5_INIT = (TIMER5_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER5_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER5_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER5_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER5_TF  --------------------------------
// SVD Line: 5814

unsigned int TIMER5_TF __AT (0x4001115C);



// --------------------------------  Field Item: TIMER5_TF_TIF  -----------------------------------
// SVD Line: 5823

//  <item> SFDITEM_FIELD__TIMER5_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001115C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER5_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER5_TF  -----------------------------------
// SVD Line: 5814

//  <rtree> SFDITEM_REG__TIMER5_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001115C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER5_TF >> 0) & 0xFFFFFFFF), ((TIMER5_TF = (TIMER5_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER5_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER5  ------------------------------------
// SVD Line: 5694

//  <view> TIMER5
//    <name> TIMER5 </name>
//    <item> SFDITEM_REG__TIMER5_INITVAL </item>
//    <item> SFDITEM_REG__TIMER5_CVAL </item>
//    <item> SFDITEM_REG__TIMER5_INIT </item>
//    <item> SFDITEM_REG__TIMER5_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER6_INITVAL  -----------------------------
// SVD Line: 5862

unsigned int TIMER6_INITVAL __AT (0x40011160);



// ----------------------------  Field Item: TIMER6_INITVAL_LDVAL  --------------------------------
// SVD Line: 5871

//  <item> SFDITEM_FIELD__TIMER6_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011160) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER6_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER6_INITVAL = (TIMER6_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER6_INITVAL  ---------------------------------
// SVD Line: 5862

//  <rtree> SFDITEM_REG__TIMER6_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011160) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER6_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER6_INITVAL = (TIMER6_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER6_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER6_CVAL  -------------------------------
// SVD Line: 5880

unsigned int TIMER6_CVAL __AT (0x40011164);



// -------------------------------  Field Item: TIMER6_CVAL_CNT  ----------------------------------
// SVD Line: 5889

//  <item> SFDITEM_FIELD__TIMER6_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011164) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER6_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER6_CVAL  ----------------------------------
// SVD Line: 5880

//  <rtree> SFDITEM_REG__TIMER6_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011164) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER6_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER6_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER6_INIT  -------------------------------
// SVD Line: 5898

unsigned int TIMER6_INIT __AT (0x40011168);



// -----------------------------  Field Item: TIMER6_INIT_TIMEREN  --------------------------------
// SVD Line: 5907

//  <item> SFDITEM_FIELD__TIMER6_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011168) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER6_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER6_INIT_TIE  ----------------------------------
// SVD Line: 5926

//  <item> SFDITEM_FIELD__TIMER6_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011168) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER6_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER6_INIT_LINKEN  ---------------------------------
// SVD Line: 5945

//  <item> SFDITEM_FIELD__TIMER6_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011168) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER6_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER6_INIT  ----------------------------------
// SVD Line: 5898

//  <rtree> SFDITEM_REG__TIMER6_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011168) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER6_INIT >> 0) & 0xFFFFFFFF), ((TIMER6_INIT = (TIMER6_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER6_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER6_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER6_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER6_TF  --------------------------------
// SVD Line: 5967

unsigned int TIMER6_TF __AT (0x4001116C);



// --------------------------------  Field Item: TIMER6_TF_TIF  -----------------------------------
// SVD Line: 5976

//  <item> SFDITEM_FIELD__TIMER6_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001116C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER6_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER6_TF  -----------------------------------
// SVD Line: 5967

//  <rtree> SFDITEM_REG__TIMER6_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001116C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER6_TF >> 0) & 0xFFFFFFFF), ((TIMER6_TF = (TIMER6_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER6_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER6  ------------------------------------
// SVD Line: 5847

//  <view> TIMER6
//    <name> TIMER6 </name>
//    <item> SFDITEM_REG__TIMER6_INITVAL </item>
//    <item> SFDITEM_REG__TIMER6_CVAL </item>
//    <item> SFDITEM_REG__TIMER6_INIT </item>
//    <item> SFDITEM_REG__TIMER6_TF </item>
//  </view>
//  


// --------------------------  Register Item Address: TIMER7_INITVAL  -----------------------------
// SVD Line: 6015

unsigned int TIMER7_INITVAL __AT (0x40011170);



// ----------------------------  Field Item: TIMER7_INITVAL_LDVAL  --------------------------------
// SVD Line: 6024

//  <item> SFDITEM_FIELD__TIMER7_INITVAL_LDVAL
//    <name> LDVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011170) Timer Init Load Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER7_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER7_INITVAL = (TIMER7_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: TIMER7_INITVAL  ---------------------------------
// SVD Line: 6015

//  <rtree> SFDITEM_REG__TIMER7_INITVAL
//    <name> INITVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011170) Timer Init Load Value Register </i>
//    <loc> ( (unsigned int)((TIMER7_INITVAL >> 0) & 0xFFFFFFFF), ((TIMER7_INITVAL = (TIMER7_INITVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER7_INITVAL_LDVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER7_CVAL  -------------------------------
// SVD Line: 6033

unsigned int TIMER7_CVAL __AT (0x40011174);



// -------------------------------  Field Item: TIMER7_CVAL_CNT  ----------------------------------
// SVD Line: 6042

//  <item> SFDITEM_FIELD__TIMER7_CVAL_CNT
//    <name> CNT </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011174) Current Timer Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((TIMER7_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: TIMER7_CVAL  ----------------------------------
// SVD Line: 6033

//  <rtree> SFDITEM_REG__TIMER7_CVAL
//    <name> CVAL </name>
//    <r> 
//    <i> [Bits 31..0] RO (@ 0x40011174) Timer Current Count Value Register </i>
//    <loc> ( (unsigned int)((TIMER7_CVAL >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__TIMER7_CVAL_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: TIMER7_INIT  -------------------------------
// SVD Line: 6051

unsigned int TIMER7_INIT __AT (0x40011178);



// -----------------------------  Field Item: TIMER7_INIT_TIMEREN  --------------------------------
// SVD Line: 6060

//  <item> SFDITEM_FIELD__TIMER7_INIT_TIMEREN
//    <name> TIMEREN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40011178) \nTimer Enable\n0 : 0 = Timer is disabled.\n1 : 1 = Timer is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER7_INIT ) </loc>
//      <o.0..0> TIMEREN
//        <0=> 0: 0 = Timer is disabled.
//        <1=> 1: 1 = Timer is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: TIMER7_INIT_TIE  ----------------------------------
// SVD Line: 6079

//  <item> SFDITEM_FIELD__TIMER7_INIT_TIE
//    <name> TIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40011178) \nTimer Interrupt Enable\n0 : 0 = Interrupt requests from Timer n are disabled.\n1 : 1 = Interrupt will be requested whenever TIF is set. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER7_INIT ) </loc>
//      <o.1..1> TIE
//        <0=> 0: 0 = Interrupt requests from Timer n are disabled.
//        <1=> 1: 1 = Interrupt will be requested whenever TIF is set.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: TIMER7_INIT_LINKEN  ---------------------------------
// SVD Line: 6098

//  <item> SFDITEM_FIELD__TIMER7_INIT_LINKEN
//    <name> LINKEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40011178) \nTimer Link Mode\n0 : 0 = Timer is not linked,Timer is seperated.\n1 : 1 = Timer is Linked to previous timer. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER7_INIT ) </loc>
//      <o.2..2> LINKEN
//        <0=> 0: 0 = Timer is not linked,Timer is seperated.
//        <1=> 1: 1 = Timer is Linked to previous timer.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: TIMER7_INIT  ----------------------------------
// SVD Line: 6051

//  <rtree> SFDITEM_REG__TIMER7_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40011178) Timer Initialize Control Register </i>
//    <loc> ( (unsigned int)((TIMER7_INIT >> 0) & 0xFFFFFFFF), ((TIMER7_INIT = (TIMER7_INIT & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER7_INIT_TIMEREN </item>
//    <item> SFDITEM_FIELD__TIMER7_INIT_TIE </item>
//    <item> SFDITEM_FIELD__TIMER7_INIT_LINKEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: TIMER7_TF  --------------------------------
// SVD Line: 6120

unsigned int TIMER7_TF __AT (0x4001117C);



// --------------------------------  Field Item: TIMER7_TF_TIF  -----------------------------------
// SVD Line: 6129

//  <item> SFDITEM_FIELD__TIMER7_TF_TIF
//    <name> TIF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001117C) \nTimer Interrupt Flag\n0 : 0 = Timeout has not yet occurred.\n1 : 1 = Timeout has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) TIMER7_TF ) </loc>
//      <o.0..0> TIF
//        <0=> 0: 0 = Timeout has not yet occurred.
//        <1=> 1: 1 = Timeout has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: TIMER7_TF  -----------------------------------
// SVD Line: 6120

//  <rtree> SFDITEM_REG__TIMER7_TF
//    <name> TF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001117C) Timer Flag Register </i>
//    <loc> ( (unsigned int)((TIMER7_TF >> 0) & 0xFFFFFFFF), ((TIMER7_TF = (TIMER7_TF & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__TIMER7_TF_TIF </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: TIMER7  ------------------------------------
// SVD Line: 6000

//  <view> TIMER7
//    <name> TIMER7 </name>
//    <item> SFDITEM_REG__TIMER7_INITVAL </item>
//    <item> SFDITEM_REG__TIMER7_CVAL </item>
//    <item> SFDITEM_REG__TIMER7_INIT </item>
//    <item> SFDITEM_REG__TIMER7_TF </item>
//  </view>
//  


// ------------------------------  Register Item Address: RTC_SC  ---------------------------------
// SVD Line: 6169

unsigned int RTC_SC __AT (0x40008400);



// ---------------------------------  Field Item: RTC_SC_RTCO  ------------------------------------
// SVD Line: 6178

//  <item> SFDITEM_FIELD__RTC_SC_RTCO
//    <name> RTCO </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40008400) Real-Time Counter Output </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.4..4> RTCO
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SC_RTIE  ------------------------------------
// SVD Line: 6185

//  <item> SFDITEM_FIELD__RTC_SC_RTIE
//    <name> RTIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40008400) Real-Time Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.6..6> RTIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SC_RTIF  ------------------------------------
// SVD Line: 6192

//  <item> SFDITEM_FIELD__RTC_SC_RTIF
//    <name> RTIF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40008400) Real-Time Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.7..7> RTIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: RTC_SC_RTCLKS  -----------------------------------
// SVD Line: 6199

//  <item> SFDITEM_FIELD__RTC_SC_RTCLKS
//    <name> RTCLKS </name>
//    <rw> 
//    <i> [Bits 15..14] RW (@ 0x40008400) \nReal-Time Clock Source Select\n0 : 00 = External clock source\n1 : 01 = Real-Time clock source is 1KHz(LPOCLK)\n2 : 10 = Internal reference clock(ICSIRCLK)\n3 : 11 = Bus Clock </i>
//    <combo> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.15..14> RTCLKS
//        <0=> 0: 00 = External clock source
//        <1=> 1: 01 = Real-Time clock source is 1KHz(LPOCLK)
//        <2=> 2: 10 = Internal reference clock(ICSIRCLK)
//        <3=> 3: 11 = Bus Clock
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SC_RPIE  ------------------------------------
// SVD Line: 6228

//  <item> SFDITEM_FIELD__RTC_SC_RPIE
//    <name> RPIE </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40008400) Real-Time Prescaler Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.16..16> RPIE
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: RTC_SC_RPIF  ------------------------------------
// SVD Line: 6235

//  <item> SFDITEM_FIELD__RTC_SC_RPIF
//    <name> RPIF </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40008400) Real-Time Prescaler Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) RTC_SC ) </loc>
//      <o.17..17> RPIF
//    </check>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_SC  -------------------------------------
// SVD Line: 6169

//  <rtree> SFDITEM_REG__RTC_SC
//    <name> SC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008400) RTC Status and Control Register </i>
//    <loc> ( (unsigned int)((RTC_SC >> 0) & 0xFFFFFFFF), ((RTC_SC = (RTC_SC & ~(0x3C0D0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3C0D0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_SC_RTCO </item>
//    <item> SFDITEM_FIELD__RTC_SC_RTIE </item>
//    <item> SFDITEM_FIELD__RTC_SC_RTIF </item>
//    <item> SFDITEM_FIELD__RTC_SC_RTCLKS </item>
//    <item> SFDITEM_FIELD__RTC_SC_RPIE </item>
//    <item> SFDITEM_FIELD__RTC_SC_RPIF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_MOD  ---------------------------------
// SVD Line: 6244

unsigned int RTC_MOD __AT (0x40008404);



// ---------------------------------  Field Item: RTC_MOD_MOD  ------------------------------------
// SVD Line: 6253

//  <item> SFDITEM_FIELD__RTC_MOD_MOD
//    <name> MOD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008404) Modulo </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_MOD >> 0) & 0xFFFFFFFF), ((RTC_MOD = (RTC_MOD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_MOD  ------------------------------------
// SVD Line: 6244

//  <rtree> SFDITEM_REG__RTC_MOD
//    <name> MOD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008404) RTC Modulo Value </i>
//    <loc> ( (unsigned int)((RTC_MOD >> 0) & 0xFFFFFFFF), ((RTC_MOD = (RTC_MOD & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_MOD_MOD </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: RTC_CNT  ---------------------------------
// SVD Line: 6262

unsigned int RTC_CNT __AT (0x40008408);



// ---------------------------------  Field Item: RTC_CNT_CNT  ------------------------------------
// SVD Line: 6271

//  <item> SFDITEM_FIELD__RTC_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008408) Count Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_CNT >> 0) & 0xFFFFFFFF), ((RTC_CNT = (RTC_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: RTC_CNT  ------------------------------------
// SVD Line: 6262

//  <rtree> SFDITEM_REG__RTC_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008408) RTC Count Value </i>
//    <loc> ( (unsigned int)((RTC_CNT >> 0) & 0xFFFFFFFF), ((RTC_CNT = (RTC_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_RTCPS  --------------------------------
// SVD Line: 6280

unsigned int RTC_RTCPS __AT (0x4000840C);



// -------------------------------  Field Item: RTC_RTCPS_RTCPS  ----------------------------------
// SVD Line: 6289

//  <item> SFDITEM_FIELD__RTC_RTCPS_RTCPS
//    <name> RTCPS </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x4000840C) RTC Prescale Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_RTCPS >> 0) & 0xFFFFF), ((RTC_RTCPS = (RTC_RTCPS & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_RTCPS  -----------------------------------
// SVD Line: 6280

//  <rtree> SFDITEM_REG__RTC_RTCPS
//    <name> RTCPS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000840C) RTC Real Time Prescaler Register </i>
//    <loc> ( (unsigned int)((RTC_RTCPS >> 0) & 0xFFFFFFFF), ((RTC_RTCPS = (RTC_RTCPS & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_RTCPS_RTCPS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: RTC_PSCNT  --------------------------------
// SVD Line: 6298

unsigned int RTC_PSCNT __AT (0x40008410);



// -------------------------------  Field Item: RTC_PSCNT_PSCNT  ----------------------------------
// SVD Line: 6307

//  <item> SFDITEM_FIELD__RTC_PSCNT_PSCNT
//    <name> PSCNT </name>
//    <rw> 
//    <i> [Bits 19..0] RW (@ 0x40008410) RTC Prescaler Counter Register </i>
//    <edit> 
//      <loc> ( (unsigned int)((RTC_PSCNT >> 0) & 0xFFFFF), ((RTC_PSCNT = (RTC_PSCNT & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: RTC_PSCNT  -----------------------------------
// SVD Line: 6298

//  <rtree> SFDITEM_REG__RTC_PSCNT
//    <name> PSCNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40008410) RTC Prescaler Counter Register </i>
//    <loc> ( (unsigned int)((RTC_PSCNT >> 0) & 0xFFFFFFFF), ((RTC_PSCNT = (RTC_PSCNT & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__RTC_PSCNT_PSCNT </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: RTC  --------------------------------------
// SVD Line: 6154

//  <view> RTC
//    <name> RTC </name>
//    <item> SFDITEM_REG__RTC_SC </item>
//    <item> SFDITEM_REG__RTC_MOD </item>
//    <item> SFDITEM_REG__RTC_CNT </item>
//    <item> SFDITEM_REG__RTC_RTCPS </item>
//    <item> SFDITEM_REG__RTC_PSCNT </item>
//  </view>
//  


// -----------------------------  Register Item Address: WDOG_CS1  --------------------------------
// SVD Line: 6334

unsigned int WDOG_CS1 __AT (0x4000B000);



// --------------------------------  Field Item: WDOG_CS1_STOP  -----------------------------------
// SVD Line: 6343

//  <item> SFDITEM_FIELD__WDOG_CS1_STOP
//    <name> STOP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000B000) \nStop Enable\n0 : 0 = Watchdog disabled in chip stop mode.\n1 : 1 = Watchdog enabled in chip stop mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.0..0> STOP
//        <0=> 0: 0 = Watchdog disabled in chip stop mode.
//        <1=> 1: 1 = Watchdog enabled in chip stop mode.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS1_WAIT  -----------------------------------
// SVD Line: 6362

//  <item> SFDITEM_FIELD__WDOG_CS1_WAIT
//    <name> WAIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000B000) \nWait Enable\n0 : 0 = Watchdog disabled in chip wait mode.\n1 : 1 = Watchdog enabled in chip wait mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.1..1> WAIT
//        <0=> 0: 0 = Watchdog disabled in chip wait mode.
//        <1=> 1: 1 = Watchdog enabled in chip wait mode.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS1_DBG  ------------------------------------
// SVD Line: 6381

//  <item> SFDITEM_FIELD__WDOG_CS1_DBG
//    <name> DBG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000B000) \nDebug Enable\n0 : 0 = Watchdog disabled in chip debug mode.\n1 : 1 = Watchdog enabled in chip debug mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.2..2> DBG
//        <0=> 0: 0 = Watchdog disabled in chip debug mode.
//        <1=> 1: 1 = Watchdog enabled in chip debug mode.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS1_TST  ------------------------------------
// SVD Line: 6400

//  <item> SFDITEM_FIELD__WDOG_CS1_TST
//    <name> TST </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4000B000) \nWatchdog Test\n0 : 00 = Watchdog test mode disabled.\n1 : 01 = Watchdog user mode enabled. (Watchdog test mode disabled.) After testing the watchdog, software should use this setting to indicate that the watchdog is functioning normally in user mode.\n2 : 10 = Watchdog test mode enabled, only the low byte is used. WDOG_CNTL is compared with WDOG_TOVALL.\n3 : 11 = Watchdog test mode enabled, only the high byte is used. WDOG_CNTH is compared with WDOG_TOVALH. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.4..3> TST
//        <0=> 0: 00 = Watchdog test mode disabled.
//        <1=> 1: 01 = Watchdog user mode enabled. (Watchdog test mode disabled.) After testing the watchdog, software should use this setting to indicate that the watchdog is functioning normally in user mode.
//        <2=> 2: 10 = Watchdog test mode enabled, only the low byte is used. WDOG_CNTL is compared with WDOG_TOVALL.
//        <3=> 3: 11 = Watchdog test mode enabled, only the high byte is used. WDOG_CNTH is compared with WDOG_TOVALH.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: WDOG_CS1_UPDATE  ----------------------------------
// SVD Line: 6429

//  <item> SFDITEM_FIELD__WDOG_CS1_UPDATE
//    <name> UPDATE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000B000) \nAllow updates\n0 : 0 = Updates not allowed. After the initial configuration, the watchdog cannot be later modified without forcing a reset.\n1 : 1 = Updates allowed. Software can modify the watchdog configuration registers within 128 bus clocks after performing the unlock write sequence. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.5..5> UPDATE
//        <0=> 0: 0 = Updates not allowed. After the initial configuration, the watchdog cannot be later modified without forcing a reset.
//        <1=> 1: 1 = Updates allowed. Software can modify the watchdog configuration registers within 128 bus clocks after performing the unlock write sequence.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS1_INT  ------------------------------------
// SVD Line: 6448

//  <item> SFDITEM_FIELD__WDOG_CS1_INT
//    <name> INT </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000B000) \nWatchdog Interrupt\n0 : 0 = Watchdog interrupts are disabled. Watchdog resets are not delayed.\n1 : 1 = Watchdog interrupts are enabled. Watchdog resets are delayed by 128 bus clocks. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.6..6> INT
//        <0=> 0: 0 = Watchdog interrupts are disabled. Watchdog resets are not delayed.
//        <1=> 1: 1 = Watchdog interrupts are enabled. Watchdog resets are delayed by 128 bus clocks.
//    </combo>
//  </item>
//  


// ---------------------------------  Field Item: WDOG_CS1_EN  ------------------------------------
// SVD Line: 6467

//  <item> SFDITEM_FIELD__WDOG_CS1_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B000) \nWatchdog Enable\n0 : 0 = Watchdog disabled.\n1 : 1 = Watchdog enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS1 ) </loc>
//      <o.7..7> EN
//        <0=> 0: 0 = Watchdog disabled.
//        <1=> 1: 1 = Watchdog enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: WDOG_CS1  ------------------------------------
// SVD Line: 6334

//  <rtree> SFDITEM_REG__WDOG_CS1
//    <name> CS1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B000) Watchdog Control and Status Register 1 </i>
//    <loc> ( (unsigned int)((WDOG_CS1 >> 0) & 0xFFFFFFFF), ((WDOG_CS1 = (WDOG_CS1 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG_CS1_STOP </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_WAIT </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_DBG </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_TST </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_UPDATE </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_INT </item>
//    <item> SFDITEM_FIELD__WDOG_CS1_EN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDOG_CS2  --------------------------------
// SVD Line: 6488

unsigned int WDOG_CS2 __AT (0x4000B004);



// --------------------------------  Field Item: WDOG_CS2_CLK  ------------------------------------
// SVD Line: 6497

//  <item> SFDITEM_FIELD__WDOG_CS2_CLK
//    <name> CLK </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4000B004) \nWatchdog Clock\n0 : 00 = Bus clock.\n1 : 01 = 1 kHz internal low-power oscillator (LPOCLK).\n2 : 10 = 32 kHz internal oscillator (ICSIRCLK).\n3 : 11 = External clock source. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS2 ) </loc>
//      <o.1..0> CLK
//        <0=> 0: 00 = Bus clock.
//        <1=> 1: 01 = 1 kHz internal low-power oscillator (LPOCLK).
//        <2=> 2: 10 = 32 kHz internal oscillator (ICSIRCLK).
//        <3=> 3: 11 = External clock source.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS2_PRES  -----------------------------------
// SVD Line: 6526

//  <item> SFDITEM_FIELD__WDOG_CS2_PRES
//    <name> PRES </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4000B004) \nWatchdog Prescalar\n0 : 0 = 256 prescalar disabled.\n1 : 1 = 256 prescalar enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS2 ) </loc>
//      <o.4..4> PRES
//        <0=> 0: 0 = 256 prescalar disabled.
//        <1=> 1: 1 = 256 prescalar enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS2_FLG  ------------------------------------
// SVD Line: 6545

//  <item> SFDITEM_FIELD__WDOG_CS2_FLG
//    <name> FLG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4000B004) \nWatchdog Interrupt Flag\n0 : 0 = No interrupt occurred.\n1 : 1 = An interrupt occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS2 ) </loc>
//      <o.6..6> FLG
//        <0=> 0: 0 = No interrupt occurred.
//        <1=> 1: 1 = An interrupt occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Field Item: WDOG_CS2_WIN  ------------------------------------
// SVD Line: 6564

//  <item> SFDITEM_FIELD__WDOG_CS2_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4000B004) \nWatchdog Window\n0 : 0 = Window mode disabled.\n1 : 1 = Window mode enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) WDOG_CS2 ) </loc>
//      <o.7..7> WIN
//        <0=> 0: 0 = Window mode disabled.
//        <1=> 1: 1 = Window mode enabled.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: WDOG_CS2  ------------------------------------
// SVD Line: 6488

//  <rtree> SFDITEM_REG__WDOG_CS2
//    <name> CS2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B004) Watchdog Control and Status Register 2 </i>
//    <loc> ( (unsigned int)((WDOG_CS2 >> 0) & 0xFFFFFFFF), ((WDOG_CS2 = (WDOG_CS2 & ~(0xD3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xD3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG_CS2_CLK </item>
//    <item> SFDITEM_FIELD__WDOG_CS2_PRES </item>
//    <item> SFDITEM_FIELD__WDOG_CS2_FLG </item>
//    <item> SFDITEM_FIELD__WDOG_CS2_WIN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDOG_CNT  --------------------------------
// SVD Line: 6585

unsigned int WDOG_CNT __AT (0x4000B008);



// --------------------------------  Field Item: WDOG_CNT_CNT  ------------------------------------
// SVD Line: 6594

//  <item> SFDITEM_FIELD__WDOG_CNT_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B008) Watchdog Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDOG_CNT >> 0) & 0xFFFFFFFF), ((WDOG_CNT = (WDOG_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDOG_CNT  ------------------------------------
// SVD Line: 6585

//  <rtree> SFDITEM_REG__WDOG_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B008) Watchdog Counter Value </i>
//    <loc> ( (unsigned int)((WDOG_CNT >> 0) & 0xFFFFFFFF), ((WDOG_CNT = (WDOG_CNT & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG_CNT_CNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: WDOG_TOVAL  -------------------------------
// SVD Line: 6603

unsigned int WDOG_TOVAL __AT (0x4000B00C);



// ------------------------------  Field Item: WDOG_TOVAL_TOVAL  ----------------------------------
// SVD Line: 6612

//  <item> SFDITEM_FIELD__WDOG_TOVAL_TOVAL
//    <name> TOVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B00C) WatchDog Timeout Value </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDOG_TOVAL >> 0) & 0xFFFFFFFF), ((WDOG_TOVAL = (WDOG_TOVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: WDOG_TOVAL  -----------------------------------
// SVD Line: 6603

//  <rtree> SFDITEM_REG__WDOG_TOVAL
//    <name> TOVAL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B00C) Watchdog Timeout Value Register </i>
//    <loc> ( (unsigned int)((WDOG_TOVAL >> 0) & 0xFFFFFFFF), ((WDOG_TOVAL = (WDOG_TOVAL & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG_TOVAL_TOVAL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: WDOG_WIN  --------------------------------
// SVD Line: 6621

unsigned int WDOG_WIN __AT (0x4000B010);



// --------------------------------  Field Item: WDOG_WIN_WIN  ------------------------------------
// SVD Line: 6630

//  <item> SFDITEM_FIELD__WDOG_WIN_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B010) Watchdog Window </i>
//    <edit> 
//      <loc> ( (unsigned int)((WDOG_WIN >> 0) & 0xFFFFFFFF), ((WDOG_WIN = (WDOG_WIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: WDOG_WIN  ------------------------------------
// SVD Line: 6621

//  <rtree> SFDITEM_REG__WDOG_WIN
//    <name> WIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000B010) Watchdog Window Register </i>
//    <loc> ( (unsigned int)((WDOG_WIN >> 0) & 0xFFFFFFFF), ((WDOG_WIN = (WDOG_WIN & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__WDOG_WIN_WIN </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: WDOG  -------------------------------------
// SVD Line: 6319

//  <view> WDOG
//    <name> WDOG </name>
//    <item> SFDITEM_REG__WDOG_CS1 </item>
//    <item> SFDITEM_REG__WDOG_CS2 </item>
//    <item> SFDITEM_REG__WDOG_CNT </item>
//    <item> SFDITEM_REG__WDOG_TOVAL </item>
//    <item> SFDITEM_REG__WDOG_WIN </item>
//  </view>
//  


// ----------------------------  Register Item Address: PWM0_INIT  --------------------------------
// SVD Line: 6658

unsigned int PWM0_INIT __AT (0x40013000);



// ------------------------------  Field Item: PWM0_INIT_CLKSRC  ----------------------------------
// SVD Line: 6667

//  <item> SFDITEM_FIELD__PWM0_INIT_CLKSRC
//    <name> CLKSRC </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40013000) \nClock Source Selection\n0 : 00 = No clock selected. This in effect disables the PWM counter.\n1 : 01 = System clock\n2 : 10 = Fixed frequency clock\n3 : 11 = External clock </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INIT ) </loc>
//      <o.4..3> CLKSRC
//        <0=> 0: 00 = No clock selected. This in effect disables the PWM counter.
//        <1=> 1: 01 = System clock
//        <2=> 2: 10 = Fixed frequency clock
//        <3=> 3: 11 = External clock
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_INIT_CNTMODE  ---------------------------------
// SVD Line: 6696

//  <item> SFDITEM_FIELD__PWM0_INIT_CNTMODE
//    <name> CNTMODE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013000) \nPWM Counter Mode Select\n0 : 0 = PWM counter operates in Up Counting mode.\n1 : 1 = PWM counter operates in Up-Down Counting mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INIT ) </loc>
//      <o.5..5> CNTMODE
//        <0=> 0: 0 = PWM counter operates in Up Counting mode.
//        <1=> 1: 1 = PWM counter operates in Up-Down Counting mode.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_INIT_CNTOIE  ----------------------------------
// SVD Line: 6715

//  <item> SFDITEM_FIELD__PWM0_INIT_CNTOIE
//    <name> CNTOIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013000) \nPWM Counter Overflow Interrupt Enable\n0 : 0 = Disable CNTOF interrupts. Use software polling.\n1 : 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INIT ) </loc>
//      <o.6..6> CNTOIE
//        <0=> 0: 0 = Disable CNTOF interrupts. Use software polling.
//        <1=> 1: 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_INIT_CNTOF  ----------------------------------
// SVD Line: 6734

//  <item> SFDITEM_FIELD__PWM0_INIT_CNTOF
//    <name> CNTOF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013000) \nPWM Counter Overflow Flag\n0 : 0 = PWM counter has not overflowed.\n1 : 1 = PWM counter has overflowed. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INIT ) </loc>
//      <o.7..7> CNTOF
//        <0=> 0: 0 = PWM counter has not overflowed.
//        <1=> 1: 1 = PWM counter has overflowed.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_INIT_CLKPSC  ----------------------------------
// SVD Line: 6753

//  <item> SFDITEM_FIELD__PWM0_INIT_CLKPSC
//    <name> CLKPSC </name>
//    <rw> 
//    <i> [Bits 23..8] RW (@ 0x40013000) Prescale Factor Selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_INIT >> 8) & 0xFFFF), ((PWM0_INIT = (PWM0_INIT & ~(0xFFFFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_INIT  -----------------------------------
// SVD Line: 6658

//  <rtree> SFDITEM_REG__PWM0_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013000) PWM Initialize, Include Clock and Prescale Setting </i>
//    <loc> ( (unsigned int)((PWM0_INIT >> 0) & 0xFFFFFFFF), ((PWM0_INIT = (PWM0_INIT & ~(0xFFFF78UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF78) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_INIT_CLKSRC </item>
//    <item> SFDITEM_FIELD__PWM0_INIT_CNTMODE </item>
//    <item> SFDITEM_FIELD__PWM0_INIT_CNTOIE </item>
//    <item> SFDITEM_FIELD__PWM0_INIT_CNTOF </item>
//    <item> SFDITEM_FIELD__PWM0_INIT_CLKPSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM0_CNT  --------------------------------
// SVD Line: 6762

unsigned int PWM0_CNT __AT (0x40013004);



// -------------------------------  Field Item: PWM0_CNT_COUNT  -----------------------------------
// SVD Line: 6771

//  <item> SFDITEM_FIELD__PWM0_CNT_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013004) Current Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CNT >> 0) & 0xFFFF), ((PWM0_CNT = (PWM0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_CNT  ------------------------------------
// SVD Line: 6762

//  <rtree> SFDITEM_REG__PWM0_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013004) PWM Counter Current Count Value </i>
//    <loc> ( (unsigned int)((PWM0_CNT >> 0) & 0xFFFFFFFF), ((PWM0_CNT = (PWM0_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CNT_COUNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_MCVR  --------------------------------
// SVD Line: 6781

unsigned int PWM0_MCVR __AT (0x40013008);



// -------------------------------  Field Item: PWM0_MCVR_MCVR  -----------------------------------
// SVD Line: 6790

//  <item> SFDITEM_FIELD__PWM0_MCVR_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013008) MCVR </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_MCVR >> 0) & 0xFFFF), ((PWM0_MCVR = (PWM0_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_MCVR  -----------------------------------
// SVD Line: 6781

//  <rtree> SFDITEM_REG__PWM0_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013008) PWM Counter Max Count Value Register </i>
//    <loc> ( (unsigned int)((PWM0_MCVR >> 0) & 0xFFFFFFFF), ((PWM0_MCVR = (PWM0_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_MCVR_MCVR </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH0SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH0SCR __AT (0x4001300C);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001300C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001300C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001300C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001300C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001300C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH0SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001300C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH0SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH0SCR
//    <name> CH0SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001300C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH0SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH0SCR = (PWM0_CHSCR_CHSCR_CH0SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH0SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH1SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH1SCR __AT (0x40013014);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013014) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013014) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013014) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013014) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013014) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH1SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013014) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH1SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH1SCR
//    <name> CH1SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013014) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH1SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH1SCR = (PWM0_CHSCR_CHSCR_CH1SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH1SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH2SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH2SCR __AT (0x4001301C);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001301C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001301C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001301C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001301C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001301C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH2SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001301C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH2SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH2SCR
//    <name> CH2SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001301C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH2SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH2SCR = (PWM0_CHSCR_CHSCR_CH2SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH2SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH3SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH3SCR __AT (0x40013024);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013024) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013024) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013024) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013024) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013024) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH3SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013024) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH3SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH3SCR
//    <name> CH3SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013024) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH3SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH3SCR = (PWM0_CHSCR_CHSCR_CH3SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH3SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH4SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH4SCR __AT (0x4001302C);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001302C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001302C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001302C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001302C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001302C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH4SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001302C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH4SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH4SCR
//    <name> CH4SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001302C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH4SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH4SCR = (PWM0_CHSCR_CHSCR_CH4SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH4SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM0_CHSCR_CHSCR_CH5SCR  -------------------------
// SVD Line: 6800

unsigned int PWM0_CHSCR_CHSCR_CH5SCR __AT (0x40013034);



// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_ELSR0  ---------------------------
// SVD Line: 6812

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013034) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_ELSR1  ---------------------------
// SVD Line: 6819

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013034) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_MSR0  ----------------------------
// SVD Line: 6826

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013034) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_MSR1  ----------------------------
// SVD Line: 6833

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013034) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_CHIE  ----------------------------
// SVD Line: 6840

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013034) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM0_CHSCR_CHSCR_CH5SCR_CHIF  ----------------------------
// SVD Line: 6859

//  <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013034) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM0_CHSCR_CHSCR_CH5SCR  ----------------------------
// SVD Line: 6800

//  <rtree> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH5SCR
//    <name> CH5SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013034) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHSCR_CHSCR_CH5SCR >> 0) & 0xFFFFFFFF), ((PWM0_CHSCR_CHSCR_CH5SCR = (PWM0_CHSCR_CHSCR_CH5SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM0_CHSCR_CHSCR_CH5SCR_CHIF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH0V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH0V __AT (0x40013010);



// --------------------------  Field Item: PWM0_CHV_CHV_CH0V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH0V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013010) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH0V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH0V = (PWM0_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH0V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH0V
//    <name> CH0V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013010) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH0V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH0V = (PWM0_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH0V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH1V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH1V __AT (0x40013018);



// --------------------------  Field Item: PWM0_CHV_CHV_CH1V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH1V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013018) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH1V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH1V = (PWM0_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH1V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH1V
//    <name> CH1V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013018) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH1V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH1V = (PWM0_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH1V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH2V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH2V __AT (0x40013020);



// --------------------------  Field Item: PWM0_CHV_CHV_CH2V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH2V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013020) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH2V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH2V = (PWM0_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH2V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH2V
//    <name> CH2V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013020) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH2V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH2V = (PWM0_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH2V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH3V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH3V __AT (0x40013028);



// --------------------------  Field Item: PWM0_CHV_CHV_CH3V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH3V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013028) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH3V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH3V = (PWM0_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH3V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH3V
//    <name> CH3V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013028) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH3V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH3V = (PWM0_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH3V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH4V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH4V __AT (0x40013030);



// --------------------------  Field Item: PWM0_CHV_CHV_CH4V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH4V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013030) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH4V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH4V = (PWM0_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH4V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH4V
//    <name> CH4V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013030) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH4V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH4V = (PWM0_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH4V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM0_CHV_CHV_CH5V  ----------------------------
// SVD Line: 6881

unsigned int PWM0_CHV_CHV_CH5V __AT (0x40013038);



// --------------------------  Field Item: PWM0_CHV_CHV_CH5V_CHCVAL  ------------------------------
// SVD Line: 6893

//  <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH5V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40013038) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CHV_CHV_CH5V >> 0) & 0xFFFF), ((PWM0_CHV_CHV_CH5V = (PWM0_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM0_CHV_CHV_CH5V  -------------------------------
// SVD Line: 6881

//  <rtree> SFDITEM_REG__PWM0_CHV_CHV_CH5V
//    <name> CH5V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013038) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM0_CHV_CHV_CH5V >> 0) & 0xFFFFFFFF), ((PWM0_CHV_CHV_CH5V = (PWM0_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHV_CHV_CH5V_CHCVAL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_CNTIN  -------------------------------
// SVD Line: 6903

unsigned int PWM0_CNTIN __AT (0x4001304C);



// -----------------------------  Field Item: PWM0_CNTIN_CNTINIT  ---------------------------------
// SVD Line: 6912

//  <item> SFDITEM_FIELD__PWM0_CNTIN_CNTINIT
//    <name> CNTINIT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001304C) CNTINIT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CNTIN >> 0) & 0xFFFF), ((PWM0_CNTIN = (PWM0_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM0_CNTIN  -----------------------------------
// SVD Line: 6903

//  <rtree> SFDITEM_REG__PWM0_CNTIN
//    <name> CNTIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001304C) Counter Initial Value </i>
//    <loc> ( (unsigned int)((PWM0_CNTIN >> 0) & 0xFFFFFFFF), ((PWM0_CNTIN = (PWM0_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CNTIN_CNTINIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM0_STR  --------------------------------
// SVD Line: 6922

unsigned int PWM0_STR __AT (0x40013050);



// -------------------------------  Field Item: PWM0_STR_CH0SF  -----------------------------------
// SVD Line: 6931

//  <item> SFDITEM_FIELD__PWM0_STR_CH0SF
//    <name> CH0SF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013050) \nChannel 0 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.0..0> CH0SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_STR_CH1SF  -----------------------------------
// SVD Line: 6950

//  <item> SFDITEM_FIELD__PWM0_STR_CH1SF
//    <name> CH1SF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013050) \nChannel 1 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.1..1> CH1SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_STR_CH2SF  -----------------------------------
// SVD Line: 6969

//  <item> SFDITEM_FIELD__PWM0_STR_CH2SF
//    <name> CH2SF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013050) \nChannel 2 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.2..2> CH2SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_STR_CH3SF  -----------------------------------
// SVD Line: 6988

//  <item> SFDITEM_FIELD__PWM0_STR_CH3SF
//    <name> CH3SF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013050) \nChannel 3 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.3..3> CH3SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_STR_CH4SF  -----------------------------------
// SVD Line: 7007

//  <item> SFDITEM_FIELD__PWM0_STR_CH4SF
//    <name> CH4SF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013050) \nChannel 4 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.4..4> CH4SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_STR_CH5SF  -----------------------------------
// SVD Line: 7026

//  <item> SFDITEM_FIELD__PWM0_STR_CH5SF
//    <name> CH5SF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013050) \nChannel 5 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_STR ) </loc>
//      <o.5..5> CH5SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_STR  ------------------------------------
// SVD Line: 6922

//  <rtree> SFDITEM_REG__PWM0_STR
//    <name> STR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013050) Status Register </i>
//    <loc> ( (unsigned int)((PWM0_STR >> 0) & 0xFFFFFFFF), ((PWM0_STR = (PWM0_STR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_STR_CH0SF </item>
//    <item> SFDITEM_FIELD__PWM0_STR_CH1SF </item>
//    <item> SFDITEM_FIELD__PWM0_STR_CH2SF </item>
//    <item> SFDITEM_FIELD__PWM0_STR_CH3SF </item>
//    <item> SFDITEM_FIELD__PWM0_STR_CH4SF </item>
//    <item> SFDITEM_FIELD__PWM0_STR_CH5SF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_FUNCSEL  ------------------------------
// SVD Line: 7047

unsigned int PWM0_FUNCSEL __AT (0x40013054);



// -----------------------------  Field Item: PWM0_FUNCSEL_PWMEN2  --------------------------------
// SVD Line: 7056

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_PWMEN2
//    <name> PWMEN2 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013054) PWM Enhance function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.0..0> PWMEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FUNCSEL_INIT  ---------------------------------
// SVD Line: 7063

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013054) Initialize The Channels Output </i>
//    <check> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.1..1> INIT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FUNCSEL_WPDIS  ---------------------------------
// SVD Line: 7070

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_WPDIS
//    <name> WPDIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013054) \nWrite Protection Enable Register\n0 : 0 = Write protection is enabled.\n1 : 1 = Write protection is disabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.2..2> WPDIS
//        <0=> 0: 0 = Write protection is enabled.
//        <1=> 1: 1 = Write protection is disabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_FUNCSEL_PWMSYNC  --------------------------------
// SVD Line: 7089

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_PWMSYNC
//    <name> PWMSYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013054) \nPWM Synchronization Mode\n0 : 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.\n1 : 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.3..3> PWMSYNC
//        <0=> 0: 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.
//        <1=> 1: 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_FUNCSEL_CAPTEST  --------------------------------
// SVD Line: 7108

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_CAPTEST
//    <name> CAPTEST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013054) \nCapture Test Mode Enable\n0 : 0 = Capture test mode is disabled.\n1 : 1 = Capture test mode is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.4..4> CAPTEST
//        <0=> 0: 0 = Capture test mode is disabled.
//        <1=> 1: 1 = Capture test mode is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_FUNCSEL_FAULTMODE  -------------------------------
// SVD Line: 7127

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_FAULTMODE
//    <name> FAULTMODE </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40013054) \nFault Control Mode\n0 : 00 = Fault control is disabled for all channels.\n1 : 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.\n2 : 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.\n3 : 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.6..5> FAULTMODE
//        <0=> 0: 00 = Fault control is disabled for all channels.
//        <1=> 1: 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.
//        <2=> 2: 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.
//        <3=> 3: 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_FUNCSEL_FAULTIE  --------------------------------
// SVD Line: 7156

//  <item> SFDITEM_FIELD__PWM0_FUNCSEL_FAULTIE
//    <name> FAULTIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013054) \nFault Interrupt Enable\n0 : 0 = Fault control interrupt is disabled.\n1 : 1 = Fault control interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FUNCSEL ) </loc>
//      <o.7..7> FAULTIE
//        <0=> 0: 0 = Fault control interrupt is disabled.
//        <1=> 1: 1 = Fault control interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_FUNCSEL  ----------------------------------
// SVD Line: 7047

//  <rtree> SFDITEM_REG__PWM0_FUNCSEL
//    <name> FUNCSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013054) PWM Features(Functions) Mode Selection Register </i>
//    <loc> ( (unsigned int)((PWM0_FUNCSEL >> 0) & 0xFFFFFFFF), ((PWM0_FUNCSEL = (PWM0_FUNCSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_PWMEN2 </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_INIT </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_WPDIS </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_PWMSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_CAPTEST </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_FAULTMODE </item>
//    <item> SFDITEM_FIELD__PWM0_FUNCSEL_FAULTIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_SYNC  --------------------------------
// SVD Line: 7178

unsigned int PWM0_SYNC __AT (0x40013058);



// -----------------------------  Field Item: PWM0_SYNC_MINSYNCP  ---------------------------------
// SVD Line: 7187

//  <item> SFDITEM_FIELD__PWM0_SYNC_MINSYNCP
//    <name> MINSYNCP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013058) \nMinimum Loading Point Enable\n0 : 0 = The minimum loading point is disabled.\n1 : 1 = The minimum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.0..0> MINSYNCP
//        <0=> 0: 0 = The minimum loading point is disabled.
//        <1=> 1: 1 = The minimum loading point is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNC_MAXSYNCP  ---------------------------------
// SVD Line: 7206

//  <item> SFDITEM_FIELD__PWM0_SYNC_MAXSYNCP
//    <name> MAXSYNCP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013058) \nMaximum Loading Point Enable\n0 : 0 = The maximum loading point is disabled.\n1 : 1 = The maximum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.1..1> MAXSYNCP
//        <0=> 0: 0 = The maximum loading point is disabled.
//        <1=> 1: 1 = The maximum loading point is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNC_REINIT  ----------------------------------
// SVD Line: 7225

//  <item> SFDITEM_FIELD__PWM0_SYNC_REINIT
//    <name> REINIT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013058) \nPWM Counter Reinitialization By Synchronization (PWM counter synchronization)\n0 : 0 = PWM counter continues to count normally.\n1 : 1 = PWM counter is updated with its initial value when the selected trigger is detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.2..2> REINIT
//        <0=> 0: 0 = PWM counter continues to count normally.
//        <1=> 1: 1 = PWM counter is updated with its initial value when the selected trigger is detected.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNC_OMSYNCP  ---------------------------------
// SVD Line: 7244

//  <item> SFDITEM_FIELD__PWM0_SYNC_OMSYNCP
//    <name> OMSYNCP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013058) \nOutput Mask Synchronization Point\n0 : 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.\n1 : 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.3..3> OMSYNCP
//        <0=> 0: 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.
//        <1=> 1: 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNC_ACMPTRIG  ---------------------------------
// SVD Line: 7263

//  <item> SFDITEM_FIELD__PWM0_SYNC_ACMPTRIG
//    <name> ACMPTRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013058) \nPWM Synchronization Hardware Trigger 0\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.4..4> ACMPTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNC_PWM0TRIG  ---------------------------------
// SVD Line: 7282

//  <item> SFDITEM_FIELD__PWM0_SYNC_PWM0TRIG
//    <name> PWM0TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013058) \nPWM Synchronization Hardware Trigger 1\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.5..5> PWM0TRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNC_SWTRIG  ----------------------------------
// SVD Line: 7301

//  <item> SFDITEM_FIELD__PWM0_SYNC_SWTRIG
//    <name> SWTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013058) \nPWM Synchronization Hardware Trigger 2\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.6..6> SWTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNC_SWSYNC  ----------------------------------
// SVD Line: 7320

//  <item> SFDITEM_FIELD__PWM0_SYNC_SWSYNC
//    <name> SWSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013058) \nPWM Synchronization Software Trigger\n0 : 0 = Software trigger is not selected.\n1 : 1 = Software trigger is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNC ) </loc>
//      <o.7..7> SWSYNC
//        <0=> 0: 0 = Software trigger is not selected.
//        <1=> 1: 1 = Software trigger is selected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_SYNC  -----------------------------------
// SVD Line: 7178

//  <rtree> SFDITEM_REG__PWM0_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013058) Synchronization </i>
//    <loc> ( (unsigned int)((PWM0_SYNC >> 0) & 0xFFFFFFFF), ((PWM0_SYNC = (PWM0_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_SYNC_MINSYNCP </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_MAXSYNCP </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_REINIT </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_OMSYNCP </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_ACMPTRIG </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_PWM0TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_SWTRIG </item>
//    <item> SFDITEM_FIELD__PWM0_SYNC_SWSYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_OUTINIT  ------------------------------
// SVD Line: 7342

unsigned int PWM0_OUTINIT __AT (0x4001305C);



// -----------------------------  Field Item: PWM0_OUTINIT_CH0OIV  --------------------------------
// SVD Line: 7351

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH0OIV
//    <name> CH0OIV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001305C) \nChannel 0 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.0..0> CH0OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_OUTINIT_CH1OIV  --------------------------------
// SVD Line: 7370

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH1OIV
//    <name> CH1OIV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001305C) \nChannel 1 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.1..1> CH1OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_OUTINIT_CH2OIV  --------------------------------
// SVD Line: 7389

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH2OIV
//    <name> CH2OIV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001305C) \nChannel 2 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.2..2> CH2OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_OUTINIT_CH3OIV  --------------------------------
// SVD Line: 7408

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH3OIV
//    <name> CH3OIV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001305C) \nChannel 3 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.3..3> CH3OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_OUTINIT_CH4OIV  --------------------------------
// SVD Line: 7427

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH4OIV
//    <name> CH4OIV </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001305C) \nChannel 4 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.4..4> CH4OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_OUTINIT_CH5OIV  --------------------------------
// SVD Line: 7446

//  <item> SFDITEM_FIELD__PWM0_OUTINIT_CH5OIV
//    <name> CH5OIV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001305C) \nChannel 5 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OUTINIT ) </loc>
//      <o.5..5> CH5OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_OUTINIT  ----------------------------------
// SVD Line: 7342

//  <rtree> SFDITEM_REG__PWM0_OUTINIT
//    <name> OUTINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001305C) Initial Value For Channels Output </i>
//    <loc> ( (unsigned int)((PWM0_OUTINIT >> 0) & 0xFFFFFFFF), ((PWM0_OUTINIT = (PWM0_OUTINIT & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH0OIV </item>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH1OIV </item>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH2OIV </item>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH3OIV </item>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH4OIV </item>
//    <item> SFDITEM_FIELD__PWM0_OUTINIT_CH5OIV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_OMCR  --------------------------------
// SVD Line: 7468

unsigned int PWM0_OMCR __AT (0x40013060);



// ------------------------------  Field Item: PWM0_OMCR_CH0OMEN  ---------------------------------
// SVD Line: 7477

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH0OMEN
//    <name> CH0OMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013060) \nChannel 0 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.0..0> CH0OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_OMCR_CH1OMEN  ---------------------------------
// SVD Line: 7496

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH1OMEN
//    <name> CH1OMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013060) \nChannel 1 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.1..1> CH1OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_OMCR_CH2OMEN  ---------------------------------
// SVD Line: 7515

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH2OMEN
//    <name> CH2OMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013060) \nChannel 2 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.2..2> CH2OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_OMCR_CH3OMEN  ---------------------------------
// SVD Line: 7534

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH3OMEN
//    <name> CH3OMEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013060) \nChannel 3 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.3..3> CH3OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_OMCR_CH4OMEN  ---------------------------------
// SVD Line: 7553

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH4OMEN
//    <name> CH4OMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013060) \nChannel 4 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.4..4> CH4OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_OMCR_CH5OMEN  ---------------------------------
// SVD Line: 7572

//  <item> SFDITEM_FIELD__PWM0_OMCR_CH5OMEN
//    <name> CH5OMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013060) \nChannel 5 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_OMCR ) </loc>
//      <o.5..5> CH5OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_OMCR  -----------------------------------
// SVD Line: 7468

//  <rtree> SFDITEM_REG__PWM0_OMCR
//    <name> OMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013060) Output Mask Control Register </i>
//    <loc> ( (unsigned int)((PWM0_OMCR >> 0) & 0xFFFFFFFF), ((PWM0_OMCR = (PWM0_OMCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH0OMEN </item>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH1OMEN </item>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH2OMEN </item>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH3OMEN </item>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH4OMEN </item>
//    <item> SFDITEM_FIELD__PWM0_OMCR_CH5OMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_MODESEL  ------------------------------
// SVD Line: 7594

unsigned int PWM0_MODESEL __AT (0x40013064);



// -------------------------  Field Item: PWM0_MODESEL_PAIR0COMBINEN  -----------------------------
// SVD Line: 7603

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0COMBINEN
//    <name> PAIR0COMBINEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013064) \nCombine Channels For Pair0\n0 : 0 = Channels 0 and 1 are independent.\n1 : 1 = Channels 0 and 1 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.0..0> PAIR0COMBINEN
//        <0=> 0: 0 = Channels 0 and 1 are independent.
//        <1=> 1: 1 = Channels 0 and 1 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR0COMPEN  ------------------------------
// SVD Line: 7622

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0COMPEN
//    <name> PAIR0COMPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013064) \nComplement Channels for Pair0\n0 : 0 = The channel 1 output is the same as the channel 0 output.\n1 : 1 = The channel 1 output is the complement of the channel 0 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.1..1> PAIR0COMPEN
//        <0=> 0: 0 = The channel 1 output is the same as the channel 0 output.
//        <1=> 1: 1 = The channel 1 output is the complement of the channel 0 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR0DECAPEN  -----------------------------
// SVD Line: 7641

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DECAPEN
//    <name> PAIR0DECAPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013064) \nDual Edge Capture Mode Enable for Pair0\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.2..2> PAIR0DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR0DECAP  ------------------------------
// SVD Line: 7660

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DECAP
//    <name> PAIR0DECAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013064) \nDual Edge Capture Mode Captures for Pair0\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.3..3> PAIR0DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR0DTEN  -------------------------------
// SVD Line: 7679

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DTEN
//    <name> PAIR0DTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013064) \nDeadtime Enable for Pair0\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.4..4> PAIR0DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR0SYNCEN  ------------------------------
// SVD Line: 7698

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0SYNCEN
//    <name> PAIR0SYNCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013064) \nSynchronization Enable for Pair0\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.5..5> PAIR0SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR0FAULTEN  -----------------------------
// SVD Line: 7717

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0FAULTEN
//    <name> PAIR0FAULTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013064) \nFault Control Enable for Pair0\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.6..6> PAIR0FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM0_MODESEL_PAIR1COMBINEN  -----------------------------
// SVD Line: 7737

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1COMBINEN
//    <name> PAIR1COMBINEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013064) \nCombine Channels For Pair1\n0 : 0 = Channels 2 and 3 are independent.\n1 : 1 = Channels 2 and 3 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.8..8> PAIR1COMBINEN
//        <0=> 0: 0 = Channels 2 and 3 are independent.
//        <1=> 1: 1 = Channels 2 and 3 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR1COMPEN  ------------------------------
// SVD Line: 7756

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1COMPEN
//    <name> PAIR1COMPEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013064) \nComplement Of Channel (n) For Pair1\n0 : 0 = The channel 3 output is the same as the channel 2 output.\n1 : 1 = The channel 3 output is the complement of the channel 2 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.9..9> PAIR1COMPEN
//        <0=> 0: 0 = The channel 3 output is the same as the channel 2 output.
//        <1=> 1: 1 = The channel 3 output is the complement of the channel 2 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR1DECAPEN  -----------------------------
// SVD Line: 7775

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DECAPEN
//    <name> PAIR1DECAPEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013064) \nDual Edge Capture Mode Enable For Pair1\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.10..10> PAIR1DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR1DECAP  ------------------------------
// SVD Line: 7794

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DECAP
//    <name> PAIR1DECAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013064) \nDual Edge Capture Mode Captures For Pair1\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.11..11> PAIR1DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR1DTEN  -------------------------------
// SVD Line: 7813

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DTEN
//    <name> PAIR1DTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013064) \nDeadtime Enable For Pair1\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.12..12> PAIR1DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR1SYNCEN  ------------------------------
// SVD Line: 7832

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1SYNCEN
//    <name> PAIR1SYNCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013064) \nSynchronization Enable For Pair1\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.13..13> PAIR1SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR1FAULTEN  -----------------------------
// SVD Line: 7851

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1FAULTEN
//    <name> PAIR1FAULTEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40013064) \nFault Control Enable For Pair1\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.14..14> PAIR1FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM0_MODESEL_PAIR2COMBINEN  -----------------------------
// SVD Line: 7871

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2COMBINEN
//    <name> PAIR2COMBINEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40013064) \nCombine Channels For Pair2\n0 : 0 = Channels 4 and 5 are independent.\n1 : 1 = Channels 4 and 5 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.16..16> PAIR2COMBINEN
//        <0=> 0: 0 = Channels 4 and 5 are independent.
//        <1=> 1: 1 = Channels 4 and 5 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR2COMPEN  ------------------------------
// SVD Line: 7890

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2COMPEN
//    <name> PAIR2COMPEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40013064) \nComplement Of Channel (n) For Pair2\n0 : 0 = The channel 5 output is the same as the channel 4 output.\n1 : 1 = The channel 5 output is the complement of the channel 4 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.17..17> PAIR2COMPEN
//        <0=> 0: 0 = The channel 5 output is the same as the channel 4 output.
//        <1=> 1: 1 = The channel 5 output is the complement of the channel 4 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR2DECAPEN  -----------------------------
// SVD Line: 7909

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DECAPEN
//    <name> PAIR2DECAPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40013064) \nDual Edge Capture Mode Enable For Pair2\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.18..18> PAIR2DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR2DECAP  ------------------------------
// SVD Line: 7928

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DECAP
//    <name> PAIR2DECAP </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40013064) \nDual Edge Capture Mode Captures For Pair2\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.19..19> PAIR2DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_MODESEL_PAIR2DTEN  -------------------------------
// SVD Line: 7947

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DTEN
//    <name> PAIR2DTEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40013064) \nDeadtime Enable For Pair2\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.20..20> PAIR2DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR2SYNCEN  ------------------------------
// SVD Line: 7966

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2SYNCEN
//    <name> PAIR2SYNCEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40013064) \nSynchronization Enable For Pair2\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.21..21> PAIR2SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_MODESEL_PAIR2FAULTEN  -----------------------------
// SVD Line: 7985

//  <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2FAULTEN
//    <name> PAIR2FAULTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40013064) \nFault Control Enable For Pair2\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_MODESEL ) </loc>
//      <o.22..22> PAIR2FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_MODESEL  ----------------------------------
// SVD Line: 7594

//  <rtree> SFDITEM_REG__PWM0_MODESEL
//    <name> MODESEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013064) PWM Function Mode Selection </i>
//    <loc> ( (unsigned int)((PWM0_MODESEL >> 0) & 0xFFFFFFFF), ((PWM0_MODESEL = (PWM0_MODESEL & ~(0x7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0COMPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DECAP </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0DTEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR0FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1COMPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DECAP </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1DTEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR1FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2COMPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DECAP </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2DTEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM0_MODESEL_PAIR2FAULTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_DTSET  -------------------------------
// SVD Line: 8006

unsigned int PWM0_DTSET __AT (0x40013068);



// ------------------------------  Field Item: PWM0_DTSET_DTVAL  ----------------------------------
// SVD Line: 8015

//  <item> SFDITEM_FIELD__PWM0_DTSET_DTVAL
//    <name> DTVAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40013068) Deadtime Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_DTSET >> 0) & 0x3F), ((PWM0_DTSET = (PWM0_DTSET & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM0_DTSET_DTPSC  ----------------------------------
// SVD Line: 8022

//  <item> SFDITEM_FIELD__PWM0_DTSET_DTPSC
//    <name> DTPSC </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40013068) \nDeadtime Prescaler Control Value\n0 : 0x_0 = Divide the system clock by 1.\n1 : 0x_1 = Divide the system clock by 1.\n2 : 10 = Divide the system clock by 4.\n3 : 11 = Divide the system clock by 16. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_DTSET ) </loc>
//      <o.7..6> DTPSC
//        <0=> 0: 0x_0 = Divide the system clock by 1.
//        <1=> 1: 0x_1 = Divide the system clock by 1.
//        <2=> 2: 10 = Divide the system clock by 4.
//        <3=> 3: 11 = Divide the system clock by 16.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM0_DTSET  -----------------------------------
// SVD Line: 8006

//  <rtree> SFDITEM_REG__PWM0_DTSET
//    <name> DTSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013068) Deadtime Paramenters Setting Register </i>
//    <loc> ( (unsigned int)((PWM0_DTSET >> 0) & 0xFFFFFFFF), ((PWM0_DTSET = (PWM0_DTSET & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_DTSET_DTVAL </item>
//    <item> SFDITEM_FIELD__PWM0_DTSET_DTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_EXTTRIG  ------------------------------
// SVD Line: 8049

unsigned int PWM0_EXTTRIG __AT (0x4001306C);



// ----------------------------  Field Item: PWM0_EXTTRIG_CH2TRIG  --------------------------------
// SVD Line: 8058

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH2TRIG
//    <name> CH2TRIG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001306C) \nChannel 2 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.0..0> CH2TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_EXTTRIG_CH3TRIG  --------------------------------
// SVD Line: 8077

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH3TRIG
//    <name> CH3TRIG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001306C) \nChannel 3 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.1..1> CH3TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_EXTTRIG_CH4TRIG  --------------------------------
// SVD Line: 8096

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH4TRIG
//    <name> CH4TRIG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001306C) \nChannel 4 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.2..2> CH4TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_EXTTRIG_CH5TRIG  --------------------------------
// SVD Line: 8115

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH5TRIG
//    <name> CH5TRIG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001306C) \nChannel 5 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.3..3> CH5TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_EXTTRIG_CH0TRIG  --------------------------------
// SVD Line: 8134

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH0TRIG
//    <name> CH0TRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001306C) \nChannel 0 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.4..4> CH0TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_EXTTRIG_CH1TRIG  --------------------------------
// SVD Line: 8153

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH1TRIG
//    <name> CH1TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001306C) \nChannel 1 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.5..5> CH1TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_EXTTRIG_INITTRIGEN  ------------------------------
// SVD Line: 8172

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_INITTRIGEN
//    <name> INITTRIGEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001306C) \nInitialization Trigger Enable\n0 : 0 = The generation of initialization trigger is disabled.\n1 : 1 = The generation of initialization trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.6..6> INITTRIGEN
//        <0=> 0: 0 = The generation of initialization trigger is disabled.
//        <1=> 1: 1 = The generation of initialization trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_EXTTRIG_TRIGF  ---------------------------------
// SVD Line: 8191

//  <item> SFDITEM_FIELD__PWM0_EXTTRIG_TRIGF
//    <name> TRIGF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001306C) \nChannel Trigger Flag\n0 : 0 = No channel trigger was generated.\n1 : 1 = A channel trigger was generated. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_EXTTRIG ) </loc>
//      <o.7..7> TRIGF
//        <0=> 0: 0 = No channel trigger was generated.
//        <1=> 1: 1 = A channel trigger was generated.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_EXTTRIG  ----------------------------------
// SVD Line: 8049

//  <rtree> SFDITEM_REG__PWM0_EXTTRIG
//    <name> EXTTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001306C) PWM External Trigger </i>
//    <loc> ( (unsigned int)((PWM0_EXTTRIG >> 0) & 0xFFFFFFFF), ((PWM0_EXTTRIG = (PWM0_EXTTRIG & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH2TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH3TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH4TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH5TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH0TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_CH1TRIG </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_INITTRIGEN </item>
//    <item> SFDITEM_FIELD__PWM0_EXTTRIG_TRIGF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM0_CHOPOLCR  ------------------------------
// SVD Line: 8213

unsigned int PWM0_CHOPOLCR __AT (0x40013070);



// ----------------------------  Field Item: PWM0_CHOPOLCR_CH0POL  --------------------------------
// SVD Line: 8222

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH0POL
//    <name> CH0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013070) \nChannel 0 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.0..0> CH0POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOPOLCR_CH1POL  --------------------------------
// SVD Line: 8241

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH1POL
//    <name> CH1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013070) \nChannel 1 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.1..1> CH1POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOPOLCR_CH2POL  --------------------------------
// SVD Line: 8260

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH2POL
//    <name> CH2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013070) \nChannel 2 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.2..2> CH2POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOPOLCR_CH3POL  --------------------------------
// SVD Line: 8279

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH3POL
//    <name> CH3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013070) \nChannel 3 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.3..3> CH3POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOPOLCR_CH4POL  --------------------------------
// SVD Line: 8298

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH4POL
//    <name> CH4POL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013070) \nChannel 4 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.4..4> CH4POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOPOLCR_CH5POL  --------------------------------
// SVD Line: 8317

//  <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH5POL
//    <name> CH5POL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013070) \nChannel 5 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOPOLCR ) </loc>
//      <o.5..5> CH5POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_CHOPOLCR  ---------------------------------
// SVD Line: 8213

//  <rtree> SFDITEM_REG__PWM0_CHOPOLCR
//    <name> CHOPOLCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013070) Channels Output Polarity Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHOPOLCR >> 0) & 0xFFFFFFFF), ((PWM0_CHOPOLCR = (PWM0_CHOPOLCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH0POL </item>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH1POL </item>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH2POL </item>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH3POL </item>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH4POL </item>
//    <item> SFDITEM_FIELD__PWM0_CHOPOLCR_CH5POL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_FDSR  --------------------------------
// SVD Line: 8339

unsigned int PWM0_FDSR __AT (0x40013074);



// -----------------------------  Field Item: PWM0_FDSR_FAULTDF0  ---------------------------------
// SVD Line: 8348

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF0
//    <name> FAULTDF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40013074) \nFault Detection Flag 0\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.0..0> FAULTDF0
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FDSR_FAULTDF1  ---------------------------------
// SVD Line: 8367

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF1
//    <name> FAULTDF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40013074) \nFault Detection Flag 1\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.1..1> FAULTDF1
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FDSR_FAULTDF2  ---------------------------------
// SVD Line: 8386

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF2
//    <name> FAULTDF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40013074) \nFault Detection Flag 2\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.2..2> FAULTDF2
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FDSR_FAULTDF3  ---------------------------------
// SVD Line: 8405

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF3
//    <name> FAULTDF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40013074) \nFault Detection Flag 3\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.3..3> FAULTDF3
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FDSR_FAULTIN  ---------------------------------
// SVD Line: 8425

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTIN
//    <name> FAULTIN </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40013074) \nFault Inputs\n0 : 0 = The logic OR of the enabled fault inputs is 0.\n1 : 1 = The logic OR of the enabled fault inputs is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.5..5> FAULTIN
//        <0=> 0: 0 = The logic OR of the enabled fault inputs is 0.
//        <1=> 1: 1 = The logic OR of the enabled fault inputs is 1.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_FDSR_WPEN  -----------------------------------
// SVD Line: 8444

//  <item> SFDITEM_FIELD__PWM0_FDSR_WPEN
//    <name> WPEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013074) \nWrite Protection Enable\n0 : 0 = Write protection is disabled. Write protected bits can be written.\n1 : 1 = Write protection is enabled. Write protected bits cannot be written. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.6..6> WPEN
//        <0=> 0: 0 = Write protection is disabled. Write protected bits can be written.
//        <1=> 1: 1 = Write protection is enabled. Write protected bits cannot be written.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FDSR_FAULTDF  ---------------------------------
// SVD Line: 8463

//  <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF
//    <name> FAULTDF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40013074) \nFault Detection Flag\n0 : 0 = No fault condition was detected.\n1 : 1 = A fault condition was detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FDSR ) </loc>
//      <o.7..7> FAULTDF
//        <0=> 0: 0 = No fault condition was detected.
//        <1=> 1: 1 = A fault condition was detected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_FDSR  -----------------------------------
// SVD Line: 8339

//  <rtree> SFDITEM_REG__PWM0_FDSR
//    <name> FDSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013074) Fault Detect Status Register </i>
//    <loc> ( (unsigned int)((PWM0_FDSR >> 0) & 0xFFFFFFFF), ((PWM0_FDSR = (PWM0_FDSR & ~(0x40UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x40) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF0 </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF1 </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF2 </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF3 </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTIN </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_WPEN </item>
//    <item> SFDITEM_FIELD__PWM0_FDSR_FAULTDF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM0_CAPFILTER  -----------------------------
// SVD Line: 8485

unsigned int PWM0_CAPFILTER __AT (0x40013078);



// --------------------------  Field Item: PWM0_CAPFILTER_CH0CAPFVAL  -----------------------------
// SVD Line: 8494

//  <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH0CAPFVAL
//    <name> CH0CAPFVAL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40013078) Channel 0 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CAPFILTER >> 0) & 0x1F), ((PWM0_CAPFILTER = (PWM0_CAPFILTER & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM0_CAPFILTER_CH1CAPFVAL  -----------------------------
// SVD Line: 8501

//  <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH1CAPFVAL
//    <name> CH1CAPFVAL </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40013078) Channel 1 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CAPFILTER >> 5) & 0x1F), ((PWM0_CAPFILTER = (PWM0_CAPFILTER & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM0_CAPFILTER_CH2CAPFVAL  -----------------------------
// SVD Line: 8508

//  <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH2CAPFVAL
//    <name> CH2CAPFVAL </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40013078) Channel 2 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CAPFILTER >> 10) & 0x1F), ((PWM0_CAPFILTER = (PWM0_CAPFILTER & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM0_CAPFILTER_CH3CAPFVAL  -----------------------------
// SVD Line: 8515

//  <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH3CAPFVAL
//    <name> CH3CAPFVAL </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40013078) Channel 3 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CAPFILTER >> 15) & 0x1F), ((PWM0_CAPFILTER = (PWM0_CAPFILTER & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PWM0_CAPFILTER  ---------------------------------
// SVD Line: 8485

//  <rtree> SFDITEM_REG__PWM0_CAPFILTER
//    <name> CAPFILTER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013078) Input Capture Filter Control </i>
//    <loc> ( (unsigned int)((PWM0_CAPFILTER >> 0) & 0xFFFFFFFF), ((PWM0_CAPFILTER = (PWM0_CAPFILTER & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH0CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH1CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH2CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM0_CAPFILTER_CH3CAPFVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_FFAFER  -------------------------------
// SVD Line: 8525

unsigned int PWM0_FFAFER __AT (0x4001307C);



// -----------------------------  Field Item: PWM0_FFAFER_FER0EN  ---------------------------------
// SVD Line: 8534

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FER0EN
//    <name> FER0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001307C) \nFault Input 0 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.0..0> FER0EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FFAFER_FER1EN  ---------------------------------
// SVD Line: 8553

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FER1EN
//    <name> FER1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001307C) \nFault Input 1 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.1..1> FER1EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FFAFER_FER2EN  ---------------------------------
// SVD Line: 8572

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FER2EN
//    <name> FER2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001307C) \nFault Input 2 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.2..2> FER2EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FFAFER_FER3EN  ---------------------------------
// SVD Line: 8591

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FER3EN
//    <name> FER3EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001307C) \nFault Input 3 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.3..3> FER3EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FFAFER_FF0EN  ---------------------------------
// SVD Line: 8610

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FF0EN
//    <name> FF0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001307C) \nFault Input 0 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.4..4> FF0EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FFAFER_FF1EN  ---------------------------------
// SVD Line: 8629

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FF1EN
//    <name> FF1EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001307C) \nFault Input 1 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.5..5> FF1EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FFAFER_FF2EN  ---------------------------------
// SVD Line: 8648

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FF2EN
//    <name> FF2EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001307C) \nFault Input 2 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.6..6> FF2EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FFAFER_FF3EN  ---------------------------------
// SVD Line: 8667

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FF3EN
//    <name> FF3EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001307C) \nFault Input 3 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FFAFER ) </loc>
//      <o.7..7> FF3EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_FFAFER_FFVAL  ---------------------------------
// SVD Line: 8686

//  <item> SFDITEM_FIELD__PWM0_FFAFER_FFVAL
//    <name> FFVAL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001307C) Fault Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_FFAFER >> 8) & 0xF), ((PWM0_FFAFER = (PWM0_FFAFER & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM0_FFAFER  ----------------------------------
// SVD Line: 8525

//  <rtree> SFDITEM_REG__PWM0_FFAFER
//    <name> FFAFER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001307C) Fault Filter and Fault Enable Register </i>
//    <loc> ( (unsigned int)((PWM0_FFAFER >> 0) & 0xFFFFFFFF), ((PWM0_FFAFER = (PWM0_FFAFER & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FER0EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FER1EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FER2EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FER3EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FF0EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FF1EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FF2EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FF3EN </item>
//    <item> SFDITEM_FIELD__PWM0_FFAFER_FFVAL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM0_QEI  --------------------------------
// SVD Line: 8695

unsigned int PWM0_QEI __AT (0x40013080);



// -------------------------------  Field Item: PWM0_QEI_QEIEN  -----------------------------------
// SVD Line: 8704

//  <item> SFDITEM_FIELD__PWM0_QEI_QEIEN
//    <name> QEIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.0..0> QEIEN
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_QEI_TOFDIR  ----------------------------------
// SVD Line: 8723

//  <item> SFDITEM_FIELD__PWM0_QEI_TOFDIR
//    <name> TOFDIR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013080) \nTimer Overflow Direction in Quadrature Decoder Mode\n0 : 0 = TOF bit was set on the bottom of counting\n1 : 1 = TOF bit was set on the top of counting </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.1..1> TOFDIR
//        <0=> 0: 0 = TOF bit was set on the bottom of counting
//        <1=> 1: 1 = TOF bit was set on the top of counting
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_QEI_QUADIR  ----------------------------------
// SVD Line: 8742

//  <item> SFDITEM_FIELD__PWM0_QEI_QUADIR
//    <name> QUADIR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.2..2> QUADIR
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_QEI_QUADMODE  ---------------------------------
// SVD Line: 8761

//  <item> SFDITEM_FIELD__PWM0_QEI_QUADMODE
//    <name> QUADMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013080) \nQuadrature Decoder Mode\n0 : 0 = Phase A and phase B encoding mode.\n1 : 1 = Count and direction encoding mode </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.3..3> QUADMODE
//        <0=> 0: 0 = Phase A and phase B encoding mode.
//        <1=> 1: 1 = Count and direction encoding mode
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_QEI_PHBPOL  ----------------------------------
// SVD Line: 8780

//  <item> SFDITEM_FIELD__PWM0_QEI_PHBPOL
//    <name> PHBPOL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013080) \nPhase B Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.4..4> PHBPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM0_QEI_PHAPOL  ----------------------------------
// SVD Line: 8799

//  <item> SFDITEM_FIELD__PWM0_QEI_PHAPOL
//    <name> PHAPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013080) \nPhase A Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.5..5> PHAPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_QEI_PHBFLTREN  ---------------------------------
// SVD Line: 8818

//  <item> SFDITEM_FIELD__PWM0_QEI_PHBFLTREN
//    <name> PHBFLTREN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40013080) \nPhase B Input Filter Enable Register\n0 : 0 = Phase B input filter is disabled\n1 : 1 = Phase B input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.6..6> PHBFLTREN
//        <0=> 0: 0 = Phase B input filter is disabled
//        <1=> 1: 1 = Phase B input filter is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_QEI_PHAFLTREN  ---------------------------------
// SVD Line: 8837

//  <item> SFDITEM_FIELD__PWM0_QEI_PHAFLTREN
//    <name> PHAFLTREN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40013080) \nPhase A Input Filter Enable Register\n0 : 0 = Phase A input filter is disabled\n1 : 1 = Phase A input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_QEI ) </loc>
//      <o.7..7> PHAFLTREN
//        <0=> 0: 0 = Phase A input filter is disabled
//        <1=> 1: 1 = Phase A input filter is enabled
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_QEI  ------------------------------------
// SVD Line: 8695

//  <rtree> SFDITEM_REG__PWM0_QEI
//    <name> QEI </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013080) Quadrature Encoder/Decoder Interface Configuration Register </i>
//    <loc> ( (unsigned int)((PWM0_QEI >> 0) & 0xFFFFFFFF), ((PWM0_QEI = (PWM0_QEI & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_QEI_QEIEN </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_TOFDIR </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_QUADIR </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_QUADMODE </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_PHBPOL </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_PHAPOL </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_PHBFLTREN </item>
//    <item> SFDITEM_FIELD__PWM0_QEI_PHAFLTREN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_CONF  --------------------------------
// SVD Line: 8858

unsigned int PWM0_CONF __AT (0x40013084);



// -----------------------------  Field Item: PWM0_CONF_CNTOFNUM  ---------------------------------
// SVD Line: 8867

//  <item> SFDITEM_FIELD__PWM0_CONF_CNTOFNUM
//    <name> CNTOFNUM </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40013084) Count Overflow Flag Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CONF >> 0) & 0x7F), ((PWM0_CONF = (PWM0_CONF & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM0_CONF_BDMMODE  ---------------------------------
// SVD Line: 8875

//  <item> SFDITEM_FIELD__PWM0_CONF_BDMMODE
//    <name> BDMMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40013084) Debug Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM0_CONF >> 7) & 0x3), ((PWM0_CONF = (PWM0_CONF & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM0_CONF_GTBEEN  ----------------------------------
// SVD Line: 8883

//  <item> SFDITEM_FIELD__PWM0_CONF_GTBEEN
//    <name> GTBEEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013084) \nGlobal Time Base Enable\n0 : 0 = Use of an external global time base is disabled.\n1 : 1 = Use of an external global time base is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CONF ) </loc>
//      <o.9..9> GTBEEN
//        <0=> 0: 0 = Use of an external global time base is disabled.
//        <1=> 1: 1 = Use of an external global time base is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_CONF_GTBEOUT  ---------------------------------
// SVD Line: 8902

//  <item> SFDITEM_FIELD__PWM0_CONF_GTBEOUT
//    <name> GTBEOUT </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013084) \nGlobal Time Base Output\n0 : 0 = A global time base signal generation is disabled.\n1 : 1 = A global time base signal generation is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CONF ) </loc>
//      <o.10..10> GTBEOUT
//        <0=> 0: 0 = A global time base signal generation is disabled.
//        <1=> 1: 1 = A global time base signal generation is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_CONF_EVENTPSC  ---------------------------------
// SVD Line: 8921

//  <item> SFDITEM_FIELD__PWM0_CONF_EVENTPSC
//    <name> EVENTPSC </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40013084) PWM Channel Input Event Prescale Setting </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM0_CONF >> 16) & 0xFFF), ((PWM0_CONF = (PWM0_CONF & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM0_CONF  -----------------------------------
// SVD Line: 8858

//  <rtree> SFDITEM_REG__PWM0_CONF
//    <name> CONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013084) Configuration </i>
//    <loc> ( (unsigned int)((PWM0_CONF >> 0) & 0xFFFFFFFF), ((PWM0_CONF = (PWM0_CONF & ~(0xFFF07FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF07FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CONF_CNTOFNUM </item>
//    <item> SFDITEM_FIELD__PWM0_CONF_BDMMODE </item>
//    <item> SFDITEM_FIELD__PWM0_CONF_GTBEEN </item>
//    <item> SFDITEM_FIELD__PWM0_CONF_GTBEOUT </item>
//    <item> SFDITEM_FIELD__PWM0_CONF_EVENTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_FLTPOL  -------------------------------
// SVD Line: 8930

unsigned int PWM0_FLTPOL __AT (0x40013088);



// -----------------------------  Field Item: PWM0_FLTPOL_FLT0POL  --------------------------------
// SVD Line: 8939

//  <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT0POL
//    <name> FLT0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013088) \nFault Input 0 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FLTPOL ) </loc>
//      <o.0..0> FLT0POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FLTPOL_FLT1POL  --------------------------------
// SVD Line: 8958

//  <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT1POL
//    <name> FLT1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013088) \nFault Input 1 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FLTPOL ) </loc>
//      <o.1..1> FLT1POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FLTPOL_FLT2POL  --------------------------------
// SVD Line: 8977

//  <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT2POL
//    <name> FLT2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013088) \nFault Input 2 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FLTPOL ) </loc>
//      <o.2..2> FLT2POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_FLTPOL_FLT3POL  --------------------------------
// SVD Line: 8996

//  <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT3POL
//    <name> FLT3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013088) \nFault Input 3 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_FLTPOL ) </loc>
//      <o.3..3> FLT3POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM0_FLTPOL  ----------------------------------
// SVD Line: 8930

//  <rtree> SFDITEM_REG__PWM0_FLTPOL
//    <name> FLTPOL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013088) PWM Fault Input Polarity </i>
//    <loc> ( (unsigned int)((PWM0_FLTPOL >> 0) & 0xFFFFFFFF), ((PWM0_FLTPOL = (PWM0_FLTPOL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT0POL </item>
//    <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT1POL </item>
//    <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT2POL </item>
//    <item> SFDITEM_FIELD__PWM0_FLTPOL_FLT3POL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_SYNCONF  ------------------------------
// SVD Line: 9018

unsigned int PWM0_SYNCONF __AT (0x4001308C);



// -------------------------  Field Item: PWM0_SYNCONF_HWTRIGMODESEL  -----------------------------
// SVD Line: 9027

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_HWTRIGMODESEL
//    <name> HWTRIGMODESEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001308C) \nHardware Trigger Mode\n0 : 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.\n1 : 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.0..0> HWTRIGMODESEL
//        <0=> 0: 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//        <1=> 1: 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNCONF_CNTINC  --------------------------------
// SVD Line: 9047

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTINC
//    <name> CNTINC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001308C) \nCNTIN Register Synchronization\n0 : 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = CNTIN register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.2..2> CNTINC
//        <0=> 0: 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = CNTIN register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNCONF_INVC  ---------------------------------
// SVD Line: 9067

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_INVC
//    <name> INVC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001308C) \nINVCTRL Register Synchronization\n0 : 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = INVCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.4..4> INVC
//        <0=> 0: 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = INVCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM0_SYNCONF_SWOC  ---------------------------------
// SVD Line: 9086

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_SWOC
//    <name> SWOC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001308C) \nSWOCTRL Register Synchronization\n0 : 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.5..5> SWOC
//        <0=> 0: 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_SYNCONF_SYNCMODE  -------------------------------
// SVD Line: 9106

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_SYNCMODE
//    <name> SYNCMODE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001308C) \nSynchronization Mode\n0 : 0 = Legacy PWM synchronization is selected.\n1 : 1 = Enhanced PWM synchronization is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.7..7> SYNCMODE
//        <0=> 0: 0 = Legacy PWM synchronization is selected.
//        <1=> 1: 1 = Enhanced PWM synchronization is selected.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_CNTVSWSYNC  ------------------------------
// SVD Line: 9125

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTVSWSYNC
//    <name> CNTVSWSYNC </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001308C) \nCNTVSWSYNC\n0 : 0 = The software trigger does not activate the PWM counter synchronization.\n1 : 1 = The software trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.8..8> CNTVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = The software trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_SYNCONF_PWMSVSWSYNC  ------------------------------
// SVD Line: 9144

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_PWMSVSWSYNC
//    <name> PWMSVSWSYNC </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001308C) \nPWMSVSWSYNC\n0 : 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.9..9> PWMSVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_OMVSWSYNC  -------------------------------
// SVD Line: 9163

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_OMVSWSYNC
//    <name> OMVSWSYNC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001308C) \nOMVSWSYNC\n0 : 0 = The software trigger does not activate the OUTMASK register synchronization.\n1 : 1 = The software trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.10..10> OMVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = The software trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_INVSWSYNC  -------------------------------
// SVD Line: 9182

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_INVSWSYNC
//    <name> INVSWSYNC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001308C) \nINVSWSYNC\n0 : 0 = The software trigger does not activate the INVCTRL register synchronization.\n1 : 1 = The software trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.11..11> INVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_SWVSWSYNC  -------------------------------
// SVD Line: 9201

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_SWVSWSYNC
//    <name> SWVSWSYNC </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001308C) \nSWVSWSYNC\n0 : 0 = The software trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = The software trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.12..12> SWVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_CNTVHWSYNC  ------------------------------
// SVD Line: 9221

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTVHWSYNC
//    <name> CNTVHWSYNC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001308C) \nCNTVHWSYNC\n0 : 0 = A hardware trigger does not activate the PWM counter synchronization.\n1 : 1 = A hardware trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.16..16> CNTVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = A hardware trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM0_SYNCONF_PWMSVHWSYNC  ------------------------------
// SVD Line: 9240

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_PWMSVHWSYNC
//    <name> PWMSVHWSYNC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001308C) \nPWMSVHWSYNC\n0 : 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.17..17> PWMSVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_OMVHWSYNC  -------------------------------
// SVD Line: 9259

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_OMVHWSYNC
//    <name> OMVHWSYNC </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001308C) \nOMVHWSYNC\n0 : 0 = A hardware trigger does not activate the OUTMASK register synchronization.\n1 : 1 = A hardware trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.18..18> OMVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_INVHWSYNC  -------------------------------
// SVD Line: 9278

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_INVHWSYNC
//    <name> INVHWSYNC </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4001308C) \nINVHWSYNC\n0 : 0 = A hardware trigger does not activate the INVCTRL register synchronization.\n1 : 1 = A hardware trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.19..19> INVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM0_SYNCONF_SWVHWSYNC  -------------------------------
// SVD Line: 9297

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_SWVHWSYNC
//    <name> SWVHWSYNC </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4001308C) \nSWVHWSYNC\n0 : 0 = A hardware trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = A hardware trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.20..20> SWVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNCONF_SWPOL  ---------------------------------
// SVD Line: 9316

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_SWPOL
//    <name> SWPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001308C) \nChannel POL synchronization is activeated by a softwaretrigger\n0 : 0 = The software trigger does not activate the POL register synchronization.\n1 : 1 = The software trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.21..21> SWPOL
//        <0=> 0: 0 = The software trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = The software trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM0_SYNCONF_HWPOL  ---------------------------------
// SVD Line: 9335

//  <item> SFDITEM_FIELD__PWM0_SYNCONF_HWPOL
//    <name> HWPOL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001308C) \nChannel POL synchronization is activeated by a hardwaretrigger\n0 : 0 = The hardware trigger does not activate the POL register synchronization.\n1 : 1 = >The hardware trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_SYNCONF ) </loc>
//      <o.22..22> HWPOL
//        <0=> 0: 0 = The hardware trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = >The hardware trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_SYNCONF  ----------------------------------
// SVD Line: 9018

//  <rtree> SFDITEM_REG__PWM0_SYNCONF
//    <name> SYNCONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001308C) Synchronization Configuration </i>
//    <loc> ( (unsigned int)((PWM0_SYNCONF >> 0) & 0xFFFFFFFF), ((PWM0_SYNCONF = (PWM0_SYNCONF & ~(0x7F1FB5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F1FB5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_HWTRIGMODESEL </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTINC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_INVC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_SWOC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_SYNCMODE </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_PWMSVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_OMVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_INVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_SWVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_CNTVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_PWMSVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_OMVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_INVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_SWVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_SWPOL </item>
//    <item> SFDITEM_FIELD__PWM0_SYNCONF_HWPOL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM0_INVCR  -------------------------------
// SVD Line: 9356

unsigned int PWM0_INVCR __AT (0x40013090);



// ----------------------------  Field Item: PWM0_INVCR_PAIR0INVEN  -------------------------------
// SVD Line: 9365

//  <item> SFDITEM_FIELD__PWM0_INVCR_PAIR0INVEN
//    <name> PAIR0INVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013090) \nPair Channels 0 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INVCR ) </loc>
//      <o.0..0> PAIR0INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_INVCR_PAIR1INVEN  -------------------------------
// SVD Line: 9384

//  <item> SFDITEM_FIELD__PWM0_INVCR_PAIR1INVEN
//    <name> PAIR1INVEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013090) \nPair Channels 1 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INVCR ) </loc>
//      <o.1..1> PAIR1INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_INVCR_PAIR2INVEN  -------------------------------
// SVD Line: 9403

//  <item> SFDITEM_FIELD__PWM0_INVCR_PAIR2INVEN
//    <name> PAIR2INVEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013090) \nPair Channels 2 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_INVCR ) </loc>
//      <o.2..2> PAIR2INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM0_INVCR  -----------------------------------
// SVD Line: 9356

//  <rtree> SFDITEM_REG__PWM0_INVCR
//    <name> INVCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013090) PWM Inverse Control Register </i>
//    <loc> ( (unsigned int)((PWM0_INVCR >> 0) & 0xFFFFFFFF), ((PWM0_INVCR = (PWM0_INVCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_INVCR_PAIR0INVEN </item>
//    <item> SFDITEM_FIELD__PWM0_INVCR_PAIR1INVEN </item>
//    <item> SFDITEM_FIELD__PWM0_INVCR_PAIR2INVEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM0_CHOSWCR  ------------------------------
// SVD Line: 9424

unsigned int PWM0_CHOSWCR __AT (0x40013094);



// ----------------------------  Field Item: PWM0_CHOSWCR_CH0SWEN  --------------------------------
// SVD Line: 9433

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH0SWEN
//    <name> CH0SWEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40013094) \nChannel 0 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.0..0> CH0SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH1SWEN  --------------------------------
// SVD Line: 9452

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH1SWEN
//    <name> CH1SWEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40013094) \nChannel 1 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.1..1> CH1SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH2SWEN  --------------------------------
// SVD Line: 9471

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH2SWEN
//    <name> CH2SWEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40013094) \nChannel 2 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.2..2> CH2SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH3SWEN  --------------------------------
// SVD Line: 9490

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH3SWEN
//    <name> CH3SWEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40013094) \nChannel 3 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.3..3> CH3SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH4SWEN  --------------------------------
// SVD Line: 9509

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH4SWEN
//    <name> CH4SWEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40013094) \nChannel 4 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.4..4> CH4SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH5SWEN  --------------------------------
// SVD Line: 9528

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH5SWEN
//    <name> CH5SWEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40013094) \nChannel 5 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.5..5> CH5SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH0SWCV  --------------------------------
// SVD Line: 9547

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH0SWCV
//    <name> CH0SWCV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40013094) \nChannel 0 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.8..8> CH0SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH1SWCV  --------------------------------
// SVD Line: 9566

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH1SWCV
//    <name> CH1SWCV </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40013094) \nChannel 1 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.9..9> CH1SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH2SWCV  --------------------------------
// SVD Line: 9585

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH2SWCV
//    <name> CH2SWCV </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40013094) \nChannel 2 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.10..10> CH2SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH3SWCV  --------------------------------
// SVD Line: 9604

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH3SWCV
//    <name> CH3SWCV </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40013094) \nChannel 3 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.11..11> CH3SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH4SWCV  --------------------------------
// SVD Line: 9623

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH4SWCV
//    <name> CH4SWCV </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40013094) \nChannel 4 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.12..12> CH4SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM0_CHOSWCR_CH5SWCV  --------------------------------
// SVD Line: 9642

//  <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH5SWCV
//    <name> CH5SWCV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40013094) \nChannel 5 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM0_CHOSWCR ) </loc>
//      <o.13..13> CH5SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM0_CHOSWCR  ----------------------------------
// SVD Line: 9424

//  <rtree> SFDITEM_REG__PWM0_CHOSWCR
//    <name> CHOSWCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40013094) PWM CHannel Software Output Control Register </i>
//    <loc> ( (unsigned int)((PWM0_CHOSWCR >> 0) & 0xFFFFFFFF), ((PWM0_CHOSWCR = (PWM0_CHOSWCR & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH0SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH1SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH2SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH3SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH4SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH5SWEN </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH0SWCV </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH1SWCV </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH2SWCV </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH3SWCV </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH4SWCV </item>
//    <item> SFDITEM_FIELD__PWM0_CHOSWCR_CH5SWCV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWM0  -------------------------------------
// SVD Line: 6642

//  <view> PWM0
//    <name> PWM0 </name>
//    <item> SFDITEM_REG__PWM0_INIT </item>
//    <item> SFDITEM_REG__PWM0_CNT </item>
//    <item> SFDITEM_REG__PWM0_MCVR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH0SCR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH1SCR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH2SCR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH3SCR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH4SCR </item>
//    <item> SFDITEM_REG__PWM0_CHSCR_CHSCR_CH5SCR </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH0V </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH1V </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH2V </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH3V </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH4V </item>
//    <item> SFDITEM_REG__PWM0_CHV_CHV_CH5V </item>
//    <item> SFDITEM_REG__PWM0_CNTIN </item>
//    <item> SFDITEM_REG__PWM0_STR </item>
//    <item> SFDITEM_REG__PWM0_FUNCSEL </item>
//    <item> SFDITEM_REG__PWM0_SYNC </item>
//    <item> SFDITEM_REG__PWM0_OUTINIT </item>
//    <item> SFDITEM_REG__PWM0_OMCR </item>
//    <item> SFDITEM_REG__PWM0_MODESEL </item>
//    <item> SFDITEM_REG__PWM0_DTSET </item>
//    <item> SFDITEM_REG__PWM0_EXTTRIG </item>
//    <item> SFDITEM_REG__PWM0_CHOPOLCR </item>
//    <item> SFDITEM_REG__PWM0_FDSR </item>
//    <item> SFDITEM_REG__PWM0_CAPFILTER </item>
//    <item> SFDITEM_REG__PWM0_FFAFER </item>
//    <item> SFDITEM_REG__PWM0_QEI </item>
//    <item> SFDITEM_REG__PWM0_CONF </item>
//    <item> SFDITEM_REG__PWM0_FLTPOL </item>
//    <item> SFDITEM_REG__PWM0_SYNCONF </item>
//    <item> SFDITEM_REG__PWM0_INVCR </item>
//    <item> SFDITEM_REG__PWM0_CHOSWCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: PWM1_INIT  --------------------------------
// SVD Line: 9681

unsigned int PWM1_INIT __AT (0x40014000);



// ------------------------------  Field Item: PWM1_INIT_CLKSRC  ----------------------------------
// SVD Line: 9690

//  <item> SFDITEM_FIELD__PWM1_INIT_CLKSRC
//    <name> CLKSRC </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40014000) \nClock Source Selection\n0 : 00 = No clock selected. This in effect disables the PWM counter.\n1 : 01 = System clock\n2 : 10 = Fixed frequency clock\n3 : 11 = External clock </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INIT ) </loc>
//      <o.4..3> CLKSRC
//        <0=> 0: 00 = No clock selected. This in effect disables the PWM counter.
//        <1=> 1: 01 = System clock
//        <2=> 2: 10 = Fixed frequency clock
//        <3=> 3: 11 = External clock
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_INIT_CNTMODE  ---------------------------------
// SVD Line: 9719

//  <item> SFDITEM_FIELD__PWM1_INIT_CNTMODE
//    <name> CNTMODE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014000) \nPWM Counter Mode Select\n0 : 0 = PWM counter operates in Up Counting mode.\n1 : 1 = PWM counter operates in Up-Down Counting mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INIT ) </loc>
//      <o.5..5> CNTMODE
//        <0=> 0: 0 = PWM counter operates in Up Counting mode.
//        <1=> 1: 1 = PWM counter operates in Up-Down Counting mode.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_INIT_CNTOIE  ----------------------------------
// SVD Line: 9738

//  <item> SFDITEM_FIELD__PWM1_INIT_CNTOIE
//    <name> CNTOIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014000) \nPWM Counter Overflow Interrupt Enable\n0 : 0 = Disable CNTOF interrupts. Use software polling.\n1 : 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INIT ) </loc>
//      <o.6..6> CNTOIE
//        <0=> 0: 0 = Disable CNTOF interrupts. Use software polling.
//        <1=> 1: 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_INIT_CNTOF  ----------------------------------
// SVD Line: 9757

//  <item> SFDITEM_FIELD__PWM1_INIT_CNTOF
//    <name> CNTOF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40014000) \nPWM Counter Overflow Flag\n0 : 0 = PWM counter has not overflowed.\n1 : 1 = PWM counter has overflowed. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INIT ) </loc>
//      <o.7..7> CNTOF
//        <0=> 0: 0 = PWM counter has not overflowed.
//        <1=> 1: 1 = PWM counter has overflowed.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_INIT_CLKPSC  ----------------------------------
// SVD Line: 9776

//  <item> SFDITEM_FIELD__PWM1_INIT_CLKPSC
//    <name> CLKPSC </name>
//    <rw> 
//    <i> [Bits 23..8] RW (@ 0x40014000) Prescale Factor Selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_INIT >> 8) & 0xFFFF), ((PWM1_INIT = (PWM1_INIT & ~(0xFFFFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_INIT  -----------------------------------
// SVD Line: 9681

//  <rtree> SFDITEM_REG__PWM1_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014000) PWM Initialize, Include Clock and Prescale Setting </i>
//    <loc> ( (unsigned int)((PWM1_INIT >> 0) & 0xFFFFFFFF), ((PWM1_INIT = (PWM1_INIT & ~(0xFFFF78UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF78) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_INIT_CLKSRC </item>
//    <item> SFDITEM_FIELD__PWM1_INIT_CNTMODE </item>
//    <item> SFDITEM_FIELD__PWM1_INIT_CNTOIE </item>
//    <item> SFDITEM_FIELD__PWM1_INIT_CNTOF </item>
//    <item> SFDITEM_FIELD__PWM1_INIT_CLKPSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM1_CNT  --------------------------------
// SVD Line: 9785

unsigned int PWM1_CNT __AT (0x40014004);



// -------------------------------  Field Item: PWM1_CNT_COUNT  -----------------------------------
// SVD Line: 9794

//  <item> SFDITEM_FIELD__PWM1_CNT_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014004) Current Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CNT >> 0) & 0xFFFF), ((PWM1_CNT = (PWM1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_CNT  ------------------------------------
// SVD Line: 9785

//  <rtree> SFDITEM_REG__PWM1_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014004) PWM Counter Current Count Value </i>
//    <loc> ( (unsigned int)((PWM1_CNT >> 0) & 0xFFFFFFFF), ((PWM1_CNT = (PWM1_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CNT_COUNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_MCVR  --------------------------------
// SVD Line: 9804

unsigned int PWM1_MCVR __AT (0x40014008);



// -------------------------------  Field Item: PWM1_MCVR_MCVR  -----------------------------------
// SVD Line: 9813

//  <item> SFDITEM_FIELD__PWM1_MCVR_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014008) MCVR </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_MCVR >> 0) & 0xFFFF), ((PWM1_MCVR = (PWM1_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_MCVR  -----------------------------------
// SVD Line: 9804

//  <rtree> SFDITEM_REG__PWM1_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014008) PWM Counter Max Count Value Register </i>
//    <loc> ( (unsigned int)((PWM1_MCVR >> 0) & 0xFFFFFFFF), ((PWM1_MCVR = (PWM1_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_MCVR_MCVR </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH0SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH0SCR __AT (0x4001400C);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001400C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001400C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001400C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001400C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001400C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH0SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001400C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH0SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH0SCR
//    <name> CH0SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001400C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH0SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH0SCR = (PWM1_CHSCR_CHSCR_CH0SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH0SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH1SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH1SCR __AT (0x40014014);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014014) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014014) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014014) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014014) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014014) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH1SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40014014) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH1SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH1SCR
//    <name> CH1SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014014) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH1SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH1SCR = (PWM1_CHSCR_CHSCR_CH1SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH1SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH2SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH2SCR __AT (0x4001401C);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001401C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001401C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001401C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001401C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001401C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH2SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001401C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH2SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH2SCR
//    <name> CH2SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001401C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH2SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH2SCR = (PWM1_CHSCR_CHSCR_CH2SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH2SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH3SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH3SCR __AT (0x40014024);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014024) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014024) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014024) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014024) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014024) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH3SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40014024) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH3SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH3SCR
//    <name> CH3SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014024) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH3SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH3SCR = (PWM1_CHSCR_CHSCR_CH3SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH3SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH4SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH4SCR __AT (0x4001402C);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001402C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001402C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001402C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001402C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001402C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH4SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001402C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH4SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH4SCR
//    <name> CH4SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001402C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH4SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH4SCR = (PWM1_CHSCR_CHSCR_CH4SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH4SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM1_CHSCR_CHSCR_CH5SCR  -------------------------
// SVD Line: 9823

unsigned int PWM1_CHSCR_CHSCR_CH5SCR __AT (0x40014034);



// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_ELSR0  ---------------------------
// SVD Line: 9835

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014034) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_ELSR1  ---------------------------
// SVD Line: 9842

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014034) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_MSR0  ----------------------------
// SVD Line: 9849

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014034) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_MSR1  ----------------------------
// SVD Line: 9856

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014034) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_CHIE  ----------------------------
// SVD Line: 9863

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014034) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM1_CHSCR_CHSCR_CH5SCR_CHIF  ----------------------------
// SVD Line: 9882

//  <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40014034) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM1_CHSCR_CHSCR_CH5SCR  ----------------------------
// SVD Line: 9823

//  <rtree> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH5SCR
//    <name> CH5SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014034) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHSCR_CHSCR_CH5SCR >> 0) & 0xFFFFFFFF), ((PWM1_CHSCR_CHSCR_CH5SCR = (PWM1_CHSCR_CHSCR_CH5SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM1_CHSCR_CHSCR_CH5SCR_CHIF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH0V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH0V __AT (0x40014010);



// --------------------------  Field Item: PWM1_CHV_CHV_CH0V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH0V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014010) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH0V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH0V = (PWM1_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH0V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH0V
//    <name> CH0V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014010) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH0V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH0V = (PWM1_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH0V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH1V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH1V __AT (0x40014018);



// --------------------------  Field Item: PWM1_CHV_CHV_CH1V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH1V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014018) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH1V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH1V = (PWM1_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH1V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH1V
//    <name> CH1V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014018) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH1V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH1V = (PWM1_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH1V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH2V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH2V __AT (0x40014020);



// --------------------------  Field Item: PWM1_CHV_CHV_CH2V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH2V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014020) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH2V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH2V = (PWM1_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH2V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH2V
//    <name> CH2V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014020) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH2V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH2V = (PWM1_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH2V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH3V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH3V __AT (0x40014028);



// --------------------------  Field Item: PWM1_CHV_CHV_CH3V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH3V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014028) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH3V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH3V = (PWM1_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH3V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH3V
//    <name> CH3V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014028) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH3V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH3V = (PWM1_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH3V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH4V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH4V __AT (0x40014030);



// --------------------------  Field Item: PWM1_CHV_CHV_CH4V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH4V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014030) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH4V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH4V = (PWM1_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH4V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH4V
//    <name> CH4V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014030) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH4V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH4V = (PWM1_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH4V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM1_CHV_CHV_CH5V  ----------------------------
// SVD Line: 9904

unsigned int PWM1_CHV_CHV_CH5V __AT (0x40014038);



// --------------------------  Field Item: PWM1_CHV_CHV_CH5V_CHCVAL  ------------------------------
// SVD Line: 9916

//  <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH5V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40014038) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CHV_CHV_CH5V >> 0) & 0xFFFF), ((PWM1_CHV_CHV_CH5V = (PWM1_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM1_CHV_CHV_CH5V  -------------------------------
// SVD Line: 9904

//  <rtree> SFDITEM_REG__PWM1_CHV_CHV_CH5V
//    <name> CH5V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014038) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM1_CHV_CHV_CH5V >> 0) & 0xFFFFFFFF), ((PWM1_CHV_CHV_CH5V = (PWM1_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHV_CHV_CH5V_CHCVAL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_CNTIN  -------------------------------
// SVD Line: 9926

unsigned int PWM1_CNTIN __AT (0x4001404C);



// -----------------------------  Field Item: PWM1_CNTIN_CNTINIT  ---------------------------------
// SVD Line: 9935

//  <item> SFDITEM_FIELD__PWM1_CNTIN_CNTINIT
//    <name> CNTINIT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001404C) CNTINIT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CNTIN >> 0) & 0xFFFF), ((PWM1_CNTIN = (PWM1_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM1_CNTIN  -----------------------------------
// SVD Line: 9926

//  <rtree> SFDITEM_REG__PWM1_CNTIN
//    <name> CNTIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001404C) Counter Initial Value </i>
//    <loc> ( (unsigned int)((PWM1_CNTIN >> 0) & 0xFFFFFFFF), ((PWM1_CNTIN = (PWM1_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CNTIN_CNTINIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM1_STR  --------------------------------
// SVD Line: 9945

unsigned int PWM1_STR __AT (0x40014050);



// -------------------------------  Field Item: PWM1_STR_CH0SF  -----------------------------------
// SVD Line: 9954

//  <item> SFDITEM_FIELD__PWM1_STR_CH0SF
//    <name> CH0SF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014050) \nChannel 0 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.0..0> CH0SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_STR_CH1SF  -----------------------------------
// SVD Line: 9973

//  <item> SFDITEM_FIELD__PWM1_STR_CH1SF
//    <name> CH1SF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014050) \nChannel 1 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.1..1> CH1SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_STR_CH2SF  -----------------------------------
// SVD Line: 9992

//  <item> SFDITEM_FIELD__PWM1_STR_CH2SF
//    <name> CH2SF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014050) \nChannel 2 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.2..2> CH2SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_STR_CH3SF  -----------------------------------
// SVD Line: 10011

//  <item> SFDITEM_FIELD__PWM1_STR_CH3SF
//    <name> CH3SF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014050) \nChannel 3 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.3..3> CH3SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_STR_CH4SF  -----------------------------------
// SVD Line: 10030

//  <item> SFDITEM_FIELD__PWM1_STR_CH4SF
//    <name> CH4SF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014050) \nChannel 4 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.4..4> CH4SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_STR_CH5SF  -----------------------------------
// SVD Line: 10049

//  <item> SFDITEM_FIELD__PWM1_STR_CH5SF
//    <name> CH5SF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014050) \nChannel 5 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_STR ) </loc>
//      <o.5..5> CH5SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_STR  ------------------------------------
// SVD Line: 9945

//  <rtree> SFDITEM_REG__PWM1_STR
//    <name> STR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014050) Status Register </i>
//    <loc> ( (unsigned int)((PWM1_STR >> 0) & 0xFFFFFFFF), ((PWM1_STR = (PWM1_STR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_STR_CH0SF </item>
//    <item> SFDITEM_FIELD__PWM1_STR_CH1SF </item>
//    <item> SFDITEM_FIELD__PWM1_STR_CH2SF </item>
//    <item> SFDITEM_FIELD__PWM1_STR_CH3SF </item>
//    <item> SFDITEM_FIELD__PWM1_STR_CH4SF </item>
//    <item> SFDITEM_FIELD__PWM1_STR_CH5SF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_FUNCSEL  ------------------------------
// SVD Line: 10070

unsigned int PWM1_FUNCSEL __AT (0x40014054);



// -----------------------------  Field Item: PWM1_FUNCSEL_PWMEN2  --------------------------------
// SVD Line: 10079

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_PWMEN2
//    <name> PWMEN2 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014054) PWM Enhance function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.0..0> PWMEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FUNCSEL_INIT  ---------------------------------
// SVD Line: 10086

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014054) Initialize The Channels Output </i>
//    <check> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.1..1> INIT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FUNCSEL_WPDIS  ---------------------------------
// SVD Line: 10093

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_WPDIS
//    <name> WPDIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014054) \nWrite Protection Enable Register\n0 : 0 = Write protection is enabled.\n1 : 1 = Write protection is disabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.2..2> WPDIS
//        <0=> 0: 0 = Write protection is enabled.
//        <1=> 1: 1 = Write protection is disabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_FUNCSEL_PWMSYNC  --------------------------------
// SVD Line: 10112

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_PWMSYNC
//    <name> PWMSYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014054) \nPWM Synchronization Mode\n0 : 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.\n1 : 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.3..3> PWMSYNC
//        <0=> 0: 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.
//        <1=> 1: 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_FUNCSEL_CAPTEST  --------------------------------
// SVD Line: 10131

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_CAPTEST
//    <name> CAPTEST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014054) \nCapture Test Mode Enable\n0 : 0 = Capture test mode is disabled.\n1 : 1 = Capture test mode is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.4..4> CAPTEST
//        <0=> 0: 0 = Capture test mode is disabled.
//        <1=> 1: 1 = Capture test mode is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_FUNCSEL_FAULTMODE  -------------------------------
// SVD Line: 10150

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_FAULTMODE
//    <name> FAULTMODE </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40014054) \nFault Control Mode\n0 : 00 = Fault control is disabled for all channels.\n1 : 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.\n2 : 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.\n3 : 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.6..5> FAULTMODE
//        <0=> 0: 00 = Fault control is disabled for all channels.
//        <1=> 1: 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.
//        <2=> 2: 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.
//        <3=> 3: 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_FUNCSEL_FAULTIE  --------------------------------
// SVD Line: 10179

//  <item> SFDITEM_FIELD__PWM1_FUNCSEL_FAULTIE
//    <name> FAULTIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014054) \nFault Interrupt Enable\n0 : 0 = Fault control interrupt is disabled.\n1 : 1 = Fault control interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FUNCSEL ) </loc>
//      <o.7..7> FAULTIE
//        <0=> 0: 0 = Fault control interrupt is disabled.
//        <1=> 1: 1 = Fault control interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_FUNCSEL  ----------------------------------
// SVD Line: 10070

//  <rtree> SFDITEM_REG__PWM1_FUNCSEL
//    <name> FUNCSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014054) PWM Features(Functions) Mode Selection Register </i>
//    <loc> ( (unsigned int)((PWM1_FUNCSEL >> 0) & 0xFFFFFFFF), ((PWM1_FUNCSEL = (PWM1_FUNCSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_PWMEN2 </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_INIT </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_WPDIS </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_PWMSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_CAPTEST </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_FAULTMODE </item>
//    <item> SFDITEM_FIELD__PWM1_FUNCSEL_FAULTIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_SYNC  --------------------------------
// SVD Line: 10201

unsigned int PWM1_SYNC __AT (0x40014058);



// -----------------------------  Field Item: PWM1_SYNC_MINSYNCP  ---------------------------------
// SVD Line: 10210

//  <item> SFDITEM_FIELD__PWM1_SYNC_MINSYNCP
//    <name> MINSYNCP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014058) \nMinimum Loading Point Enable\n0 : 0 = The minimum loading point is disabled.\n1 : 1 = The minimum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.0..0> MINSYNCP
//        <0=> 0: 0 = The minimum loading point is disabled.
//        <1=> 1: 1 = The minimum loading point is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNC_MAXSYNCP  ---------------------------------
// SVD Line: 10229

//  <item> SFDITEM_FIELD__PWM1_SYNC_MAXSYNCP
//    <name> MAXSYNCP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014058) \nMaximum Loading Point Enable\n0 : 0 = The maximum loading point is disabled.\n1 : 1 = The maximum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.1..1> MAXSYNCP
//        <0=> 0: 0 = The maximum loading point is disabled.
//        <1=> 1: 1 = The maximum loading point is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNC_REINIT  ----------------------------------
// SVD Line: 10248

//  <item> SFDITEM_FIELD__PWM1_SYNC_REINIT
//    <name> REINIT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014058) \nPWM Counter Reinitialization By Synchronization (PWM counter synchronization)\n0 : 0 = PWM counter continues to count normally.\n1 : 1 = PWM counter is updated with its initial value when the selected trigger is detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.2..2> REINIT
//        <0=> 0: 0 = PWM counter continues to count normally.
//        <1=> 1: 1 = PWM counter is updated with its initial value when the selected trigger is detected.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNC_OMSYNCP  ---------------------------------
// SVD Line: 10267

//  <item> SFDITEM_FIELD__PWM1_SYNC_OMSYNCP
//    <name> OMSYNCP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014058) \nOutput Mask Synchronization Point\n0 : 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.\n1 : 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.3..3> OMSYNCP
//        <0=> 0: 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.
//        <1=> 1: 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNC_ACMPTRIG  ---------------------------------
// SVD Line: 10286

//  <item> SFDITEM_FIELD__PWM1_SYNC_ACMPTRIG
//    <name> ACMPTRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014058) \nPWM Synchronization Hardware Trigger 0\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.4..4> ACMPTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNC_PWM0TRIG  ---------------------------------
// SVD Line: 10305

//  <item> SFDITEM_FIELD__PWM1_SYNC_PWM0TRIG
//    <name> PWM0TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014058) \nPWM Synchronization Hardware Trigger 1\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.5..5> PWM0TRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNC_SWTRIG  ----------------------------------
// SVD Line: 10324

//  <item> SFDITEM_FIELD__PWM1_SYNC_SWTRIG
//    <name> SWTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014058) \nPWM Synchronization Hardware Trigger 2\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.6..6> SWTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNC_SWSYNC  ----------------------------------
// SVD Line: 10343

//  <item> SFDITEM_FIELD__PWM1_SYNC_SWSYNC
//    <name> SWSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014058) \nPWM Synchronization Software Trigger\n0 : 0 = Software trigger is not selected.\n1 : 1 = Software trigger is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNC ) </loc>
//      <o.7..7> SWSYNC
//        <0=> 0: 0 = Software trigger is not selected.
//        <1=> 1: 1 = Software trigger is selected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_SYNC  -----------------------------------
// SVD Line: 10201

//  <rtree> SFDITEM_REG__PWM1_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014058) Synchronization </i>
//    <loc> ( (unsigned int)((PWM1_SYNC >> 0) & 0xFFFFFFFF), ((PWM1_SYNC = (PWM1_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_SYNC_MINSYNCP </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_MAXSYNCP </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_REINIT </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_OMSYNCP </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_ACMPTRIG </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_PWM0TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_SWTRIG </item>
//    <item> SFDITEM_FIELD__PWM1_SYNC_SWSYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_OUTINIT  ------------------------------
// SVD Line: 10365

unsigned int PWM1_OUTINIT __AT (0x4001405C);



// -----------------------------  Field Item: PWM1_OUTINIT_CH0OIV  --------------------------------
// SVD Line: 10374

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH0OIV
//    <name> CH0OIV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001405C) \nChannel 0 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.0..0> CH0OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_OUTINIT_CH1OIV  --------------------------------
// SVD Line: 10393

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH1OIV
//    <name> CH1OIV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001405C) \nChannel 1 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.1..1> CH1OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_OUTINIT_CH2OIV  --------------------------------
// SVD Line: 10412

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH2OIV
//    <name> CH2OIV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001405C) \nChannel 2 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.2..2> CH2OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_OUTINIT_CH3OIV  --------------------------------
// SVD Line: 10431

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH3OIV
//    <name> CH3OIV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001405C) \nChannel 3 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.3..3> CH3OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_OUTINIT_CH4OIV  --------------------------------
// SVD Line: 10450

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH4OIV
//    <name> CH4OIV </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001405C) \nChannel 4 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.4..4> CH4OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_OUTINIT_CH5OIV  --------------------------------
// SVD Line: 10469

//  <item> SFDITEM_FIELD__PWM1_OUTINIT_CH5OIV
//    <name> CH5OIV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001405C) \nChannel 5 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OUTINIT ) </loc>
//      <o.5..5> CH5OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_OUTINIT  ----------------------------------
// SVD Line: 10365

//  <rtree> SFDITEM_REG__PWM1_OUTINIT
//    <name> OUTINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001405C) Initial Value For Channels Output </i>
//    <loc> ( (unsigned int)((PWM1_OUTINIT >> 0) & 0xFFFFFFFF), ((PWM1_OUTINIT = (PWM1_OUTINIT & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH0OIV </item>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH1OIV </item>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH2OIV </item>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH3OIV </item>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH4OIV </item>
//    <item> SFDITEM_FIELD__PWM1_OUTINIT_CH5OIV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_OMCR  --------------------------------
// SVD Line: 10491

unsigned int PWM1_OMCR __AT (0x40014060);



// ------------------------------  Field Item: PWM1_OMCR_CH0OMEN  ---------------------------------
// SVD Line: 10500

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH0OMEN
//    <name> CH0OMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014060) \nChannel 0 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.0..0> CH0OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_OMCR_CH1OMEN  ---------------------------------
// SVD Line: 10519

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH1OMEN
//    <name> CH1OMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014060) \nChannel 1 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.1..1> CH1OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_OMCR_CH2OMEN  ---------------------------------
// SVD Line: 10538

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH2OMEN
//    <name> CH2OMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014060) \nChannel 2 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.2..2> CH2OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_OMCR_CH3OMEN  ---------------------------------
// SVD Line: 10557

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH3OMEN
//    <name> CH3OMEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014060) \nChannel 3 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.3..3> CH3OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_OMCR_CH4OMEN  ---------------------------------
// SVD Line: 10576

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH4OMEN
//    <name> CH4OMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014060) \nChannel 4 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.4..4> CH4OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_OMCR_CH5OMEN  ---------------------------------
// SVD Line: 10595

//  <item> SFDITEM_FIELD__PWM1_OMCR_CH5OMEN
//    <name> CH5OMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014060) \nChannel 5 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_OMCR ) </loc>
//      <o.5..5> CH5OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_OMCR  -----------------------------------
// SVD Line: 10491

//  <rtree> SFDITEM_REG__PWM1_OMCR
//    <name> OMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014060) Output Mask Control Register </i>
//    <loc> ( (unsigned int)((PWM1_OMCR >> 0) & 0xFFFFFFFF), ((PWM1_OMCR = (PWM1_OMCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH0OMEN </item>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH1OMEN </item>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH2OMEN </item>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH3OMEN </item>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH4OMEN </item>
//    <item> SFDITEM_FIELD__PWM1_OMCR_CH5OMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_MODESEL  ------------------------------
// SVD Line: 10617

unsigned int PWM1_MODESEL __AT (0x40014064);



// -------------------------  Field Item: PWM1_MODESEL_PAIR0COMBINEN  -----------------------------
// SVD Line: 10626

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0COMBINEN
//    <name> PAIR0COMBINEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014064) \nCombine Channels For Pair0\n0 : 0 = Channels 0 and 1 are independent.\n1 : 1 = Channels 0 and 1 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.0..0> PAIR0COMBINEN
//        <0=> 0: 0 = Channels 0 and 1 are independent.
//        <1=> 1: 1 = Channels 0 and 1 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR0COMPEN  ------------------------------
// SVD Line: 10645

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0COMPEN
//    <name> PAIR0COMPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014064) \nComplement Channels for Pair0\n0 : 0 = The channel 1 output is the same as the channel 0 output.\n1 : 1 = The channel 1 output is the complement of the channel 0 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.1..1> PAIR0COMPEN
//        <0=> 0: 0 = The channel 1 output is the same as the channel 0 output.
//        <1=> 1: 1 = The channel 1 output is the complement of the channel 0 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR0DECAPEN  -----------------------------
// SVD Line: 10664

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DECAPEN
//    <name> PAIR0DECAPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014064) \nDual Edge Capture Mode Enable for Pair0\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.2..2> PAIR0DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR0DECAP  ------------------------------
// SVD Line: 10683

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DECAP
//    <name> PAIR0DECAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014064) \nDual Edge Capture Mode Captures for Pair0\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.3..3> PAIR0DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR0DTEN  -------------------------------
// SVD Line: 10702

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DTEN
//    <name> PAIR0DTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014064) \nDeadtime Enable for Pair0\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.4..4> PAIR0DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR0SYNCEN  ------------------------------
// SVD Line: 10721

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0SYNCEN
//    <name> PAIR0SYNCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014064) \nSynchronization Enable for Pair0\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.5..5> PAIR0SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR0FAULTEN  -----------------------------
// SVD Line: 10740

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0FAULTEN
//    <name> PAIR0FAULTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014064) \nFault Control Enable for Pair0\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.6..6> PAIR0FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM1_MODESEL_PAIR1COMBINEN  -----------------------------
// SVD Line: 10760

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1COMBINEN
//    <name> PAIR1COMBINEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014064) \nCombine Channels For Pair1\n0 : 0 = Channels 2 and 3 are independent.\n1 : 1 = Channels 2 and 3 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.8..8> PAIR1COMBINEN
//        <0=> 0: 0 = Channels 2 and 3 are independent.
//        <1=> 1: 1 = Channels 2 and 3 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR1COMPEN  ------------------------------
// SVD Line: 10779

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1COMPEN
//    <name> PAIR1COMPEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014064) \nComplement Of Channel (n) For Pair1\n0 : 0 = The channel 3 output is the same as the channel 2 output.\n1 : 1 = The channel 3 output is the complement of the channel 2 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.9..9> PAIR1COMPEN
//        <0=> 0: 0 = The channel 3 output is the same as the channel 2 output.
//        <1=> 1: 1 = The channel 3 output is the complement of the channel 2 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR1DECAPEN  -----------------------------
// SVD Line: 10798

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DECAPEN
//    <name> PAIR1DECAPEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014064) \nDual Edge Capture Mode Enable For Pair1\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.10..10> PAIR1DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR1DECAP  ------------------------------
// SVD Line: 10817

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DECAP
//    <name> PAIR1DECAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014064) \nDual Edge Capture Mode Captures For Pair1\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.11..11> PAIR1DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR1DTEN  -------------------------------
// SVD Line: 10836

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DTEN
//    <name> PAIR1DTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014064) \nDeadtime Enable For Pair1\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.12..12> PAIR1DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR1SYNCEN  ------------------------------
// SVD Line: 10855

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1SYNCEN
//    <name> PAIR1SYNCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014064) \nSynchronization Enable For Pair1\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.13..13> PAIR1SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR1FAULTEN  -----------------------------
// SVD Line: 10874

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1FAULTEN
//    <name> PAIR1FAULTEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40014064) \nFault Control Enable For Pair1\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.14..14> PAIR1FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM1_MODESEL_PAIR2COMBINEN  -----------------------------
// SVD Line: 10894

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2COMBINEN
//    <name> PAIR2COMBINEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40014064) \nCombine Channels For Pair2\n0 : 0 = Channels 4 and 5 are independent.\n1 : 1 = Channels 4 and 5 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.16..16> PAIR2COMBINEN
//        <0=> 0: 0 = Channels 4 and 5 are independent.
//        <1=> 1: 1 = Channels 4 and 5 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR2COMPEN  ------------------------------
// SVD Line: 10913

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2COMPEN
//    <name> PAIR2COMPEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40014064) \nComplement Of Channel (n) For Pair2\n0 : 0 = The channel 5 output is the same as the channel 4 output.\n1 : 1 = The channel 5 output is the complement of the channel 4 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.17..17> PAIR2COMPEN
//        <0=> 0: 0 = The channel 5 output is the same as the channel 4 output.
//        <1=> 1: 1 = The channel 5 output is the complement of the channel 4 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR2DECAPEN  -----------------------------
// SVD Line: 10932

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DECAPEN
//    <name> PAIR2DECAPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40014064) \nDual Edge Capture Mode Enable For Pair2\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.18..18> PAIR2DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR2DECAP  ------------------------------
// SVD Line: 10951

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DECAP
//    <name> PAIR2DECAP </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40014064) \nDual Edge Capture Mode Captures For Pair2\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.19..19> PAIR2DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_MODESEL_PAIR2DTEN  -------------------------------
// SVD Line: 10970

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DTEN
//    <name> PAIR2DTEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40014064) \nDeadtime Enable For Pair2\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.20..20> PAIR2DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR2SYNCEN  ------------------------------
// SVD Line: 10989

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2SYNCEN
//    <name> PAIR2SYNCEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40014064) \nSynchronization Enable For Pair2\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.21..21> PAIR2SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_MODESEL_PAIR2FAULTEN  -----------------------------
// SVD Line: 11008

//  <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2FAULTEN
//    <name> PAIR2FAULTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40014064) \nFault Control Enable For Pair2\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_MODESEL ) </loc>
//      <o.22..22> PAIR2FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_MODESEL  ----------------------------------
// SVD Line: 10617

//  <rtree> SFDITEM_REG__PWM1_MODESEL
//    <name> MODESEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014064) PWM Function Mode Selection </i>
//    <loc> ( (unsigned int)((PWM1_MODESEL >> 0) & 0xFFFFFFFF), ((PWM1_MODESEL = (PWM1_MODESEL & ~(0x7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0COMPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DECAP </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0DTEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR0FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1COMPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DECAP </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1DTEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR1FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2COMPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DECAP </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2DTEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM1_MODESEL_PAIR2FAULTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_DTSET  -------------------------------
// SVD Line: 11029

unsigned int PWM1_DTSET __AT (0x40014068);



// ------------------------------  Field Item: PWM1_DTSET_DTVAL  ----------------------------------
// SVD Line: 11038

//  <item> SFDITEM_FIELD__PWM1_DTSET_DTVAL
//    <name> DTVAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40014068) Deadtime Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_DTSET >> 0) & 0x3F), ((PWM1_DTSET = (PWM1_DTSET & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM1_DTSET_DTPSC  ----------------------------------
// SVD Line: 11045

//  <item> SFDITEM_FIELD__PWM1_DTSET_DTPSC
//    <name> DTPSC </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40014068) \nDeadtime Prescaler Control Value\n0 : 0x_0 = Divide the system clock by 1.\n1 : 0x_1 = Divide the system clock by 1.\n2 : 10 = Divide the system clock by 4.\n3 : 11 = Divide the system clock by 16. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_DTSET ) </loc>
//      <o.7..6> DTPSC
//        <0=> 0: 0x_0 = Divide the system clock by 1.
//        <1=> 1: 0x_1 = Divide the system clock by 1.
//        <2=> 2: 10 = Divide the system clock by 4.
//        <3=> 3: 11 = Divide the system clock by 16.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM1_DTSET  -----------------------------------
// SVD Line: 11029

//  <rtree> SFDITEM_REG__PWM1_DTSET
//    <name> DTSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014068) Deadtime Paramenters Setting Register </i>
//    <loc> ( (unsigned int)((PWM1_DTSET >> 0) & 0xFFFFFFFF), ((PWM1_DTSET = (PWM1_DTSET & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_DTSET_DTVAL </item>
//    <item> SFDITEM_FIELD__PWM1_DTSET_DTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_EXTTRIG  ------------------------------
// SVD Line: 11072

unsigned int PWM1_EXTTRIG __AT (0x4001406C);



// ----------------------------  Field Item: PWM1_EXTTRIG_CH2TRIG  --------------------------------
// SVD Line: 11081

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH2TRIG
//    <name> CH2TRIG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001406C) \nChannel 2 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.0..0> CH2TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_EXTTRIG_CH3TRIG  --------------------------------
// SVD Line: 11100

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH3TRIG
//    <name> CH3TRIG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001406C) \nChannel 3 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.1..1> CH3TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_EXTTRIG_CH4TRIG  --------------------------------
// SVD Line: 11119

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH4TRIG
//    <name> CH4TRIG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001406C) \nChannel 4 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.2..2> CH4TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_EXTTRIG_CH5TRIG  --------------------------------
// SVD Line: 11138

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH5TRIG
//    <name> CH5TRIG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001406C) \nChannel 5 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.3..3> CH5TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_EXTTRIG_CH0TRIG  --------------------------------
// SVD Line: 11157

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH0TRIG
//    <name> CH0TRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001406C) \nChannel 0 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.4..4> CH0TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_EXTTRIG_CH1TRIG  --------------------------------
// SVD Line: 11176

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH1TRIG
//    <name> CH1TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001406C) \nChannel 1 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.5..5> CH1TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_EXTTRIG_INITTRIGEN  ------------------------------
// SVD Line: 11195

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_INITTRIGEN
//    <name> INITTRIGEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001406C) \nInitialization Trigger Enable\n0 : 0 = The generation of initialization trigger is disabled.\n1 : 1 = The generation of initialization trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.6..6> INITTRIGEN
//        <0=> 0: 0 = The generation of initialization trigger is disabled.
//        <1=> 1: 1 = The generation of initialization trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_EXTTRIG_TRIGF  ---------------------------------
// SVD Line: 11214

//  <item> SFDITEM_FIELD__PWM1_EXTTRIG_TRIGF
//    <name> TRIGF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001406C) \nChannel Trigger Flag\n0 : 0 = No channel trigger was generated.\n1 : 1 = A channel trigger was generated. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_EXTTRIG ) </loc>
//      <o.7..7> TRIGF
//        <0=> 0: 0 = No channel trigger was generated.
//        <1=> 1: 1 = A channel trigger was generated.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_EXTTRIG  ----------------------------------
// SVD Line: 11072

//  <rtree> SFDITEM_REG__PWM1_EXTTRIG
//    <name> EXTTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001406C) PWM External Trigger </i>
//    <loc> ( (unsigned int)((PWM1_EXTTRIG >> 0) & 0xFFFFFFFF), ((PWM1_EXTTRIG = (PWM1_EXTTRIG & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH2TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH3TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH4TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH5TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH0TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_CH1TRIG </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_INITTRIGEN </item>
//    <item> SFDITEM_FIELD__PWM1_EXTTRIG_TRIGF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM1_CHOPOLCR  ------------------------------
// SVD Line: 11236

unsigned int PWM1_CHOPOLCR __AT (0x40014070);



// ----------------------------  Field Item: PWM1_CHOPOLCR_CH0POL  --------------------------------
// SVD Line: 11245

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH0POL
//    <name> CH0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014070) \nChannel 0 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.0..0> CH0POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOPOLCR_CH1POL  --------------------------------
// SVD Line: 11264

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH1POL
//    <name> CH1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014070) \nChannel 1 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.1..1> CH1POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOPOLCR_CH2POL  --------------------------------
// SVD Line: 11283

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH2POL
//    <name> CH2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014070) \nChannel 2 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.2..2> CH2POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOPOLCR_CH3POL  --------------------------------
// SVD Line: 11302

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH3POL
//    <name> CH3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014070) \nChannel 3 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.3..3> CH3POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOPOLCR_CH4POL  --------------------------------
// SVD Line: 11321

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH4POL
//    <name> CH4POL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014070) \nChannel 4 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.4..4> CH4POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOPOLCR_CH5POL  --------------------------------
// SVD Line: 11340

//  <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH5POL
//    <name> CH5POL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014070) \nChannel 5 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOPOLCR ) </loc>
//      <o.5..5> CH5POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_CHOPOLCR  ---------------------------------
// SVD Line: 11236

//  <rtree> SFDITEM_REG__PWM1_CHOPOLCR
//    <name> CHOPOLCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014070) Channels Output Polarity Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHOPOLCR >> 0) & 0xFFFFFFFF), ((PWM1_CHOPOLCR = (PWM1_CHOPOLCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH0POL </item>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH1POL </item>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH2POL </item>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH3POL </item>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH4POL </item>
//    <item> SFDITEM_FIELD__PWM1_CHOPOLCR_CH5POL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_FDSR  --------------------------------
// SVD Line: 11362

unsigned int PWM1_FDSR __AT (0x40014074);



// -----------------------------  Field Item: PWM1_FDSR_FAULTDF0  ---------------------------------
// SVD Line: 11371

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF0
//    <name> FAULTDF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40014074) \nFault Detection Flag 0\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.0..0> FAULTDF0
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FDSR_FAULTDF1  ---------------------------------
// SVD Line: 11390

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF1
//    <name> FAULTDF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40014074) \nFault Detection Flag 1\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.1..1> FAULTDF1
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FDSR_FAULTDF2  ---------------------------------
// SVD Line: 11409

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF2
//    <name> FAULTDF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40014074) \nFault Detection Flag 2\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.2..2> FAULTDF2
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FDSR_FAULTDF3  ---------------------------------
// SVD Line: 11428

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF3
//    <name> FAULTDF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40014074) \nFault Detection Flag 3\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.3..3> FAULTDF3
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FDSR_FAULTIN  ---------------------------------
// SVD Line: 11448

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTIN
//    <name> FAULTIN </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40014074) \nFault Inputs\n0 : 0 = The logic OR of the enabled fault inputs is 0.\n1 : 1 = The logic OR of the enabled fault inputs is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.5..5> FAULTIN
//        <0=> 0: 0 = The logic OR of the enabled fault inputs is 0.
//        <1=> 1: 1 = The logic OR of the enabled fault inputs is 1.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_FDSR_WPEN  -----------------------------------
// SVD Line: 11467

//  <item> SFDITEM_FIELD__PWM1_FDSR_WPEN
//    <name> WPEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014074) \nWrite Protection Enable\n0 : 0 = Write protection is disabled. Write protected bits can be written.\n1 : 1 = Write protection is enabled. Write protected bits cannot be written. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.6..6> WPEN
//        <0=> 0: 0 = Write protection is disabled. Write protected bits can be written.
//        <1=> 1: 1 = Write protection is enabled. Write protected bits cannot be written.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FDSR_FAULTDF  ---------------------------------
// SVD Line: 11486

//  <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF
//    <name> FAULTDF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40014074) \nFault Detection Flag\n0 : 0 = No fault condition was detected.\n1 : 1 = A fault condition was detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FDSR ) </loc>
//      <o.7..7> FAULTDF
//        <0=> 0: 0 = No fault condition was detected.
//        <1=> 1: 1 = A fault condition was detected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_FDSR  -----------------------------------
// SVD Line: 11362

//  <rtree> SFDITEM_REG__PWM1_FDSR
//    <name> FDSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014074) Fault Detect Status Register </i>
//    <loc> ( (unsigned int)((PWM1_FDSR >> 0) & 0xFFFFFFFF), ((PWM1_FDSR = (PWM1_FDSR & ~(0x40UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x40) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF0 </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF1 </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF2 </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF3 </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTIN </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_WPEN </item>
//    <item> SFDITEM_FIELD__PWM1_FDSR_FAULTDF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM1_CAPFILTER  -----------------------------
// SVD Line: 11508

unsigned int PWM1_CAPFILTER __AT (0x40014078);



// --------------------------  Field Item: PWM1_CAPFILTER_CH0CAPFVAL  -----------------------------
// SVD Line: 11517

//  <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH0CAPFVAL
//    <name> CH0CAPFVAL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40014078) Channel 0 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CAPFILTER >> 0) & 0x1F), ((PWM1_CAPFILTER = (PWM1_CAPFILTER & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM1_CAPFILTER_CH1CAPFVAL  -----------------------------
// SVD Line: 11524

//  <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH1CAPFVAL
//    <name> CH1CAPFVAL </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40014078) Channel 1 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CAPFILTER >> 5) & 0x1F), ((PWM1_CAPFILTER = (PWM1_CAPFILTER & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM1_CAPFILTER_CH2CAPFVAL  -----------------------------
// SVD Line: 11531

//  <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH2CAPFVAL
//    <name> CH2CAPFVAL </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40014078) Channel 2 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CAPFILTER >> 10) & 0x1F), ((PWM1_CAPFILTER = (PWM1_CAPFILTER & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM1_CAPFILTER_CH3CAPFVAL  -----------------------------
// SVD Line: 11538

//  <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH3CAPFVAL
//    <name> CH3CAPFVAL </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40014078) Channel 3 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CAPFILTER >> 15) & 0x1F), ((PWM1_CAPFILTER = (PWM1_CAPFILTER & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PWM1_CAPFILTER  ---------------------------------
// SVD Line: 11508

//  <rtree> SFDITEM_REG__PWM1_CAPFILTER
//    <name> CAPFILTER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014078) Input Capture Filter Control </i>
//    <loc> ( (unsigned int)((PWM1_CAPFILTER >> 0) & 0xFFFFFFFF), ((PWM1_CAPFILTER = (PWM1_CAPFILTER & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH0CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH1CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH2CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM1_CAPFILTER_CH3CAPFVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_FFAFER  -------------------------------
// SVD Line: 11548

unsigned int PWM1_FFAFER __AT (0x4001407C);



// -----------------------------  Field Item: PWM1_FFAFER_FER0EN  ---------------------------------
// SVD Line: 11557

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FER0EN
//    <name> FER0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001407C) \nFault Input 0 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.0..0> FER0EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FFAFER_FER1EN  ---------------------------------
// SVD Line: 11576

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FER1EN
//    <name> FER1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001407C) \nFault Input 1 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.1..1> FER1EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FFAFER_FER2EN  ---------------------------------
// SVD Line: 11595

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FER2EN
//    <name> FER2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001407C) \nFault Input 2 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.2..2> FER2EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FFAFER_FER3EN  ---------------------------------
// SVD Line: 11614

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FER3EN
//    <name> FER3EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001407C) \nFault Input 3 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.3..3> FER3EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FFAFER_FF0EN  ---------------------------------
// SVD Line: 11633

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FF0EN
//    <name> FF0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001407C) \nFault Input 0 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.4..4> FF0EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FFAFER_FF1EN  ---------------------------------
// SVD Line: 11652

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FF1EN
//    <name> FF1EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001407C) \nFault Input 1 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.5..5> FF1EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FFAFER_FF2EN  ---------------------------------
// SVD Line: 11671

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FF2EN
//    <name> FF2EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001407C) \nFault Input 2 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.6..6> FF2EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FFAFER_FF3EN  ---------------------------------
// SVD Line: 11690

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FF3EN
//    <name> FF3EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001407C) \nFault Input 3 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FFAFER ) </loc>
//      <o.7..7> FF3EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_FFAFER_FFVAL  ---------------------------------
// SVD Line: 11709

//  <item> SFDITEM_FIELD__PWM1_FFAFER_FFVAL
//    <name> FFVAL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001407C) Fault Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_FFAFER >> 8) & 0xF), ((PWM1_FFAFER = (PWM1_FFAFER & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM1_FFAFER  ----------------------------------
// SVD Line: 11548

//  <rtree> SFDITEM_REG__PWM1_FFAFER
//    <name> FFAFER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001407C) Fault Filter and Fault Enable Register </i>
//    <loc> ( (unsigned int)((PWM1_FFAFER >> 0) & 0xFFFFFFFF), ((PWM1_FFAFER = (PWM1_FFAFER & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FER0EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FER1EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FER2EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FER3EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FF0EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FF1EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FF2EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FF3EN </item>
//    <item> SFDITEM_FIELD__PWM1_FFAFER_FFVAL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM1_QEI  --------------------------------
// SVD Line: 11718

unsigned int PWM1_QEI __AT (0x40014080);



// -------------------------------  Field Item: PWM1_QEI_QEIEN  -----------------------------------
// SVD Line: 11727

//  <item> SFDITEM_FIELD__PWM1_QEI_QEIEN
//    <name> QEIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.0..0> QEIEN
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_QEI_TOFDIR  ----------------------------------
// SVD Line: 11746

//  <item> SFDITEM_FIELD__PWM1_QEI_TOFDIR
//    <name> TOFDIR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014080) \nTimer Overflow Direction in Quadrature Decoder Mode\n0 : 0 = TOF bit was set on the bottom of counting\n1 : 1 = TOF bit was set on the top of counting </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.1..1> TOFDIR
//        <0=> 0: 0 = TOF bit was set on the bottom of counting
//        <1=> 1: 1 = TOF bit was set on the top of counting
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_QEI_QUADIR  ----------------------------------
// SVD Line: 11765

//  <item> SFDITEM_FIELD__PWM1_QEI_QUADIR
//    <name> QUADIR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.2..2> QUADIR
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_QEI_QUADMODE  ---------------------------------
// SVD Line: 11784

//  <item> SFDITEM_FIELD__PWM1_QEI_QUADMODE
//    <name> QUADMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014080) \nQuadrature Decoder Mode\n0 : 0 = Phase A and phase B encoding mode.\n1 : 1 = Count and direction encoding mode </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.3..3> QUADMODE
//        <0=> 0: 0 = Phase A and phase B encoding mode.
//        <1=> 1: 1 = Count and direction encoding mode
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_QEI_PHBPOL  ----------------------------------
// SVD Line: 11803

//  <item> SFDITEM_FIELD__PWM1_QEI_PHBPOL
//    <name> PHBPOL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014080) \nPhase B Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.4..4> PHBPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM1_QEI_PHAPOL  ----------------------------------
// SVD Line: 11822

//  <item> SFDITEM_FIELD__PWM1_QEI_PHAPOL
//    <name> PHAPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014080) \nPhase A Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.5..5> PHAPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_QEI_PHBFLTREN  ---------------------------------
// SVD Line: 11841

//  <item> SFDITEM_FIELD__PWM1_QEI_PHBFLTREN
//    <name> PHBFLTREN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40014080) \nPhase B Input Filter Enable Register\n0 : 0 = Phase B input filter is disabled\n1 : 1 = Phase B input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.6..6> PHBFLTREN
//        <0=> 0: 0 = Phase B input filter is disabled
//        <1=> 1: 1 = Phase B input filter is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_QEI_PHAFLTREN  ---------------------------------
// SVD Line: 11860

//  <item> SFDITEM_FIELD__PWM1_QEI_PHAFLTREN
//    <name> PHAFLTREN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40014080) \nPhase A Input Filter Enable Register\n0 : 0 = Phase A input filter is disabled\n1 : 1 = Phase A input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_QEI ) </loc>
//      <o.7..7> PHAFLTREN
//        <0=> 0: 0 = Phase A input filter is disabled
//        <1=> 1: 1 = Phase A input filter is enabled
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_QEI  ------------------------------------
// SVD Line: 11718

//  <rtree> SFDITEM_REG__PWM1_QEI
//    <name> QEI </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014080) Quadrature Encoder/Decoder Interface Configuration Register </i>
//    <loc> ( (unsigned int)((PWM1_QEI >> 0) & 0xFFFFFFFF), ((PWM1_QEI = (PWM1_QEI & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_QEI_QEIEN </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_TOFDIR </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_QUADIR </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_QUADMODE </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_PHBPOL </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_PHAPOL </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_PHBFLTREN </item>
//    <item> SFDITEM_FIELD__PWM1_QEI_PHAFLTREN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_CONF  --------------------------------
// SVD Line: 11881

unsigned int PWM1_CONF __AT (0x40014084);



// -----------------------------  Field Item: PWM1_CONF_CNTOFNUM  ---------------------------------
// SVD Line: 11890

//  <item> SFDITEM_FIELD__PWM1_CONF_CNTOFNUM
//    <name> CNTOFNUM </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40014084) Count Overflow Flag Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CONF >> 0) & 0x7F), ((PWM1_CONF = (PWM1_CONF & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM1_CONF_BDMMODE  ---------------------------------
// SVD Line: 11898

//  <item> SFDITEM_FIELD__PWM1_CONF_BDMMODE
//    <name> BDMMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40014084) Debug Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM1_CONF >> 7) & 0x3), ((PWM1_CONF = (PWM1_CONF & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM1_CONF_GTBEEN  ----------------------------------
// SVD Line: 11906

//  <item> SFDITEM_FIELD__PWM1_CONF_GTBEEN
//    <name> GTBEEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014084) \nGlobal Time Base Enable\n0 : 0 = Use of an external global time base is disabled.\n1 : 1 = Use of an external global time base is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CONF ) </loc>
//      <o.9..9> GTBEEN
//        <0=> 0: 0 = Use of an external global time base is disabled.
//        <1=> 1: 1 = Use of an external global time base is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_CONF_GTBEOUT  ---------------------------------
// SVD Line: 11925

//  <item> SFDITEM_FIELD__PWM1_CONF_GTBEOUT
//    <name> GTBEOUT </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014084) \nGlobal Time Base Output\n0 : 0 = A global time base signal generation is disabled.\n1 : 1 = A global time base signal generation is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CONF ) </loc>
//      <o.10..10> GTBEOUT
//        <0=> 0: 0 = A global time base signal generation is disabled.
//        <1=> 1: 1 = A global time base signal generation is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_CONF_EVENTPSC  ---------------------------------
// SVD Line: 11944

//  <item> SFDITEM_FIELD__PWM1_CONF_EVENTPSC
//    <name> EVENTPSC </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40014084) PWM Channel Input Event Prescale Setting </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM1_CONF >> 16) & 0xFFF), ((PWM1_CONF = (PWM1_CONF & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM1_CONF  -----------------------------------
// SVD Line: 11881

//  <rtree> SFDITEM_REG__PWM1_CONF
//    <name> CONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014084) Configuration </i>
//    <loc> ( (unsigned int)((PWM1_CONF >> 0) & 0xFFFFFFFF), ((PWM1_CONF = (PWM1_CONF & ~(0xFFF07FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF07FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CONF_CNTOFNUM </item>
//    <item> SFDITEM_FIELD__PWM1_CONF_BDMMODE </item>
//    <item> SFDITEM_FIELD__PWM1_CONF_GTBEEN </item>
//    <item> SFDITEM_FIELD__PWM1_CONF_GTBEOUT </item>
//    <item> SFDITEM_FIELD__PWM1_CONF_EVENTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_FLTPOL  -------------------------------
// SVD Line: 11953

unsigned int PWM1_FLTPOL __AT (0x40014088);



// -----------------------------  Field Item: PWM1_FLTPOL_FLT0POL  --------------------------------
// SVD Line: 11962

//  <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT0POL
//    <name> FLT0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014088) \nFault Input 0 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FLTPOL ) </loc>
//      <o.0..0> FLT0POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FLTPOL_FLT1POL  --------------------------------
// SVD Line: 11981

//  <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT1POL
//    <name> FLT1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014088) \nFault Input 1 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FLTPOL ) </loc>
//      <o.1..1> FLT1POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FLTPOL_FLT2POL  --------------------------------
// SVD Line: 12000

//  <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT2POL
//    <name> FLT2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014088) \nFault Input 2 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FLTPOL ) </loc>
//      <o.2..2> FLT2POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_FLTPOL_FLT3POL  --------------------------------
// SVD Line: 12019

//  <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT3POL
//    <name> FLT3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014088) \nFault Input 3 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_FLTPOL ) </loc>
//      <o.3..3> FLT3POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM1_FLTPOL  ----------------------------------
// SVD Line: 11953

//  <rtree> SFDITEM_REG__PWM1_FLTPOL
//    <name> FLTPOL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014088) PWM Fault Input Polarity </i>
//    <loc> ( (unsigned int)((PWM1_FLTPOL >> 0) & 0xFFFFFFFF), ((PWM1_FLTPOL = (PWM1_FLTPOL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT0POL </item>
//    <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT1POL </item>
//    <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT2POL </item>
//    <item> SFDITEM_FIELD__PWM1_FLTPOL_FLT3POL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_SYNCONF  ------------------------------
// SVD Line: 12041

unsigned int PWM1_SYNCONF __AT (0x4001408C);



// -------------------------  Field Item: PWM1_SYNCONF_HWTRIGMODESEL  -----------------------------
// SVD Line: 12050

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_HWTRIGMODESEL
//    <name> HWTRIGMODESEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001408C) \nHardware Trigger Mode\n0 : 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.\n1 : 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.0..0> HWTRIGMODESEL
//        <0=> 0: 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//        <1=> 1: 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNCONF_CNTINC  --------------------------------
// SVD Line: 12070

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTINC
//    <name> CNTINC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001408C) \nCNTIN Register Synchronization\n0 : 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = CNTIN register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.2..2> CNTINC
//        <0=> 0: 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = CNTIN register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNCONF_INVC  ---------------------------------
// SVD Line: 12090

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_INVC
//    <name> INVC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001408C) \nINVCTRL Register Synchronization\n0 : 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = INVCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.4..4> INVC
//        <0=> 0: 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = INVCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM1_SYNCONF_SWOC  ---------------------------------
// SVD Line: 12109

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_SWOC
//    <name> SWOC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001408C) \nSWOCTRL Register Synchronization\n0 : 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.5..5> SWOC
//        <0=> 0: 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_SYNCONF_SYNCMODE  -------------------------------
// SVD Line: 12129

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_SYNCMODE
//    <name> SYNCMODE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001408C) \nSynchronization Mode\n0 : 0 = Legacy PWM synchronization is selected.\n1 : 1 = Enhanced PWM synchronization is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.7..7> SYNCMODE
//        <0=> 0: 0 = Legacy PWM synchronization is selected.
//        <1=> 1: 1 = Enhanced PWM synchronization is selected.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_CNTVSWSYNC  ------------------------------
// SVD Line: 12148

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTVSWSYNC
//    <name> CNTVSWSYNC </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001408C) \nCNTVSWSYNC\n0 : 0 = The software trigger does not activate the PWM counter synchronization.\n1 : 1 = The software trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.8..8> CNTVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = The software trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_SYNCONF_PWMSVSWSYNC  ------------------------------
// SVD Line: 12167

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_PWMSVSWSYNC
//    <name> PWMSVSWSYNC </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001408C) \nPWMSVSWSYNC\n0 : 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.9..9> PWMSVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_OMVSWSYNC  -------------------------------
// SVD Line: 12186

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_OMVSWSYNC
//    <name> OMVSWSYNC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001408C) \nOMVSWSYNC\n0 : 0 = The software trigger does not activate the OUTMASK register synchronization.\n1 : 1 = The software trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.10..10> OMVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = The software trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_INVSWSYNC  -------------------------------
// SVD Line: 12205

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_INVSWSYNC
//    <name> INVSWSYNC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001408C) \nINVSWSYNC\n0 : 0 = The software trigger does not activate the INVCTRL register synchronization.\n1 : 1 = The software trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.11..11> INVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_SWVSWSYNC  -------------------------------
// SVD Line: 12224

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_SWVSWSYNC
//    <name> SWVSWSYNC </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001408C) \nSWVSWSYNC\n0 : 0 = The software trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = The software trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.12..12> SWVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_CNTVHWSYNC  ------------------------------
// SVD Line: 12244

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTVHWSYNC
//    <name> CNTVHWSYNC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001408C) \nCNTVHWSYNC\n0 : 0 = A hardware trigger does not activate the PWM counter synchronization.\n1 : 1 = A hardware trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.16..16> CNTVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = A hardware trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM1_SYNCONF_PWMSVHWSYNC  ------------------------------
// SVD Line: 12263

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_PWMSVHWSYNC
//    <name> PWMSVHWSYNC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001408C) \nPWMSVHWSYNC\n0 : 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.17..17> PWMSVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_OMVHWSYNC  -------------------------------
// SVD Line: 12282

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_OMVHWSYNC
//    <name> OMVHWSYNC </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001408C) \nOMVHWSYNC\n0 : 0 = A hardware trigger does not activate the OUTMASK register synchronization.\n1 : 1 = A hardware trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.18..18> OMVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_INVHWSYNC  -------------------------------
// SVD Line: 12301

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_INVHWSYNC
//    <name> INVHWSYNC </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4001408C) \nINVHWSYNC\n0 : 0 = A hardware trigger does not activate the INVCTRL register synchronization.\n1 : 1 = A hardware trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.19..19> INVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM1_SYNCONF_SWVHWSYNC  -------------------------------
// SVD Line: 12320

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_SWVHWSYNC
//    <name> SWVHWSYNC </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4001408C) \nSWVHWSYNC\n0 : 0 = A hardware trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = A hardware trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.20..20> SWVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNCONF_SWPOL  ---------------------------------
// SVD Line: 12339

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_SWPOL
//    <name> SWPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001408C) \nChannel POL synchronization is activeated by a softwaretrigger\n0 : 0 = The software trigger does not activate the POL register synchronization.\n1 : 1 = The software trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.21..21> SWPOL
//        <0=> 0: 0 = The software trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = The software trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM1_SYNCONF_HWPOL  ---------------------------------
// SVD Line: 12358

//  <item> SFDITEM_FIELD__PWM1_SYNCONF_HWPOL
//    <name> HWPOL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001408C) \nChannel POL synchronization is activeated by a hardwaretrigger\n0 : 0 = The hardware trigger does not activate the POL register synchronization.\n1 : 1 = >The hardware trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_SYNCONF ) </loc>
//      <o.22..22> HWPOL
//        <0=> 0: 0 = The hardware trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = >The hardware trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_SYNCONF  ----------------------------------
// SVD Line: 12041

//  <rtree> SFDITEM_REG__PWM1_SYNCONF
//    <name> SYNCONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001408C) Synchronization Configuration </i>
//    <loc> ( (unsigned int)((PWM1_SYNCONF >> 0) & 0xFFFFFFFF), ((PWM1_SYNCONF = (PWM1_SYNCONF & ~(0x7F1FB5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F1FB5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_HWTRIGMODESEL </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTINC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_INVC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_SWOC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_SYNCMODE </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_PWMSVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_OMVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_INVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_SWVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_CNTVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_PWMSVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_OMVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_INVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_SWVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_SWPOL </item>
//    <item> SFDITEM_FIELD__PWM1_SYNCONF_HWPOL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM1_INVCR  -------------------------------
// SVD Line: 12379

unsigned int PWM1_INVCR __AT (0x40014090);



// ----------------------------  Field Item: PWM1_INVCR_PAIR0INVEN  -------------------------------
// SVD Line: 12388

//  <item> SFDITEM_FIELD__PWM1_INVCR_PAIR0INVEN
//    <name> PAIR0INVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014090) \nPair Channels 0 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INVCR ) </loc>
//      <o.0..0> PAIR0INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_INVCR_PAIR1INVEN  -------------------------------
// SVD Line: 12407

//  <item> SFDITEM_FIELD__PWM1_INVCR_PAIR1INVEN
//    <name> PAIR1INVEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014090) \nPair Channels 1 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INVCR ) </loc>
//      <o.1..1> PAIR1INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_INVCR_PAIR2INVEN  -------------------------------
// SVD Line: 12426

//  <item> SFDITEM_FIELD__PWM1_INVCR_PAIR2INVEN
//    <name> PAIR2INVEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014090) \nPair Channels 2 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_INVCR ) </loc>
//      <o.2..2> PAIR2INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM1_INVCR  -----------------------------------
// SVD Line: 12379

//  <rtree> SFDITEM_REG__PWM1_INVCR
//    <name> INVCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014090) PWM Inverse Control Register </i>
//    <loc> ( (unsigned int)((PWM1_INVCR >> 0) & 0xFFFFFFFF), ((PWM1_INVCR = (PWM1_INVCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_INVCR_PAIR0INVEN </item>
//    <item> SFDITEM_FIELD__PWM1_INVCR_PAIR1INVEN </item>
//    <item> SFDITEM_FIELD__PWM1_INVCR_PAIR2INVEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM1_CHOSWCR  ------------------------------
// SVD Line: 12447

unsigned int PWM1_CHOSWCR __AT (0x40014094);



// ----------------------------  Field Item: PWM1_CHOSWCR_CH0SWEN  --------------------------------
// SVD Line: 12456

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH0SWEN
//    <name> CH0SWEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40014094) \nChannel 0 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.0..0> CH0SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH1SWEN  --------------------------------
// SVD Line: 12475

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH1SWEN
//    <name> CH1SWEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40014094) \nChannel 1 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.1..1> CH1SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH2SWEN  --------------------------------
// SVD Line: 12494

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH2SWEN
//    <name> CH2SWEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40014094) \nChannel 2 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.2..2> CH2SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH3SWEN  --------------------------------
// SVD Line: 12513

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH3SWEN
//    <name> CH3SWEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40014094) \nChannel 3 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.3..3> CH3SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH4SWEN  --------------------------------
// SVD Line: 12532

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH4SWEN
//    <name> CH4SWEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40014094) \nChannel 4 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.4..4> CH4SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH5SWEN  --------------------------------
// SVD Line: 12551

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH5SWEN
//    <name> CH5SWEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40014094) \nChannel 5 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.5..5> CH5SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH0SWCV  --------------------------------
// SVD Line: 12570

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH0SWCV
//    <name> CH0SWCV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40014094) \nChannel 0 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.8..8> CH0SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH1SWCV  --------------------------------
// SVD Line: 12589

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH1SWCV
//    <name> CH1SWCV </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40014094) \nChannel 1 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.9..9> CH1SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH2SWCV  --------------------------------
// SVD Line: 12608

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH2SWCV
//    <name> CH2SWCV </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40014094) \nChannel 2 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.10..10> CH2SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH3SWCV  --------------------------------
// SVD Line: 12627

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH3SWCV
//    <name> CH3SWCV </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40014094) \nChannel 3 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.11..11> CH3SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH4SWCV  --------------------------------
// SVD Line: 12646

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH4SWCV
//    <name> CH4SWCV </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40014094) \nChannel 4 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.12..12> CH4SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM1_CHOSWCR_CH5SWCV  --------------------------------
// SVD Line: 12665

//  <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH5SWCV
//    <name> CH5SWCV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40014094) \nChannel 5 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM1_CHOSWCR ) </loc>
//      <o.13..13> CH5SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM1_CHOSWCR  ----------------------------------
// SVD Line: 12447

//  <rtree> SFDITEM_REG__PWM1_CHOSWCR
//    <name> CHOSWCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40014094) PWM CHannel Software Output Control Register </i>
//    <loc> ( (unsigned int)((PWM1_CHOSWCR >> 0) & 0xFFFFFFFF), ((PWM1_CHOSWCR = (PWM1_CHOSWCR & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH0SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH1SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH2SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH3SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH4SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH5SWEN </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH0SWCV </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH1SWCV </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH2SWCV </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH3SWCV </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH4SWCV </item>
//    <item> SFDITEM_FIELD__PWM1_CHOSWCR_CH5SWCV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWM1  -------------------------------------
// SVD Line: 9665

//  <view> PWM1
//    <name> PWM1 </name>
//    <item> SFDITEM_REG__PWM1_INIT </item>
//    <item> SFDITEM_REG__PWM1_CNT </item>
//    <item> SFDITEM_REG__PWM1_MCVR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH0SCR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH1SCR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH2SCR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH3SCR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH4SCR </item>
//    <item> SFDITEM_REG__PWM1_CHSCR_CHSCR_CH5SCR </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH0V </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH1V </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH2V </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH3V </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH4V </item>
//    <item> SFDITEM_REG__PWM1_CHV_CHV_CH5V </item>
//    <item> SFDITEM_REG__PWM1_CNTIN </item>
//    <item> SFDITEM_REG__PWM1_STR </item>
//    <item> SFDITEM_REG__PWM1_FUNCSEL </item>
//    <item> SFDITEM_REG__PWM1_SYNC </item>
//    <item> SFDITEM_REG__PWM1_OUTINIT </item>
//    <item> SFDITEM_REG__PWM1_OMCR </item>
//    <item> SFDITEM_REG__PWM1_MODESEL </item>
//    <item> SFDITEM_REG__PWM1_DTSET </item>
//    <item> SFDITEM_REG__PWM1_EXTTRIG </item>
//    <item> SFDITEM_REG__PWM1_CHOPOLCR </item>
//    <item> SFDITEM_REG__PWM1_FDSR </item>
//    <item> SFDITEM_REG__PWM1_CAPFILTER </item>
//    <item> SFDITEM_REG__PWM1_FFAFER </item>
//    <item> SFDITEM_REG__PWM1_QEI </item>
//    <item> SFDITEM_REG__PWM1_CONF </item>
//    <item> SFDITEM_REG__PWM1_FLTPOL </item>
//    <item> SFDITEM_REG__PWM1_SYNCONF </item>
//    <item> SFDITEM_REG__PWM1_INVCR </item>
//    <item> SFDITEM_REG__PWM1_CHOSWCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: PWM2_INIT  --------------------------------
// SVD Line: 12704

unsigned int PWM2_INIT __AT (0x40015000);



// ------------------------------  Field Item: PWM2_INIT_CLKSRC  ----------------------------------
// SVD Line: 12713

//  <item> SFDITEM_FIELD__PWM2_INIT_CLKSRC
//    <name> CLKSRC </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x40015000) \nClock Source Selection\n0 : 00 = No clock selected. This in effect disables the PWM counter.\n1 : 01 = System clock\n2 : 10 = Fixed frequency clock\n3 : 11 = External clock </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INIT ) </loc>
//      <o.4..3> CLKSRC
//        <0=> 0: 00 = No clock selected. This in effect disables the PWM counter.
//        <1=> 1: 01 = System clock
//        <2=> 2: 10 = Fixed frequency clock
//        <3=> 3: 11 = External clock
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_INIT_CNTMODE  ---------------------------------
// SVD Line: 12742

//  <item> SFDITEM_FIELD__PWM2_INIT_CNTMODE
//    <name> CNTMODE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015000) \nPWM Counter Mode Select\n0 : 0 = PWM counter operates in Up Counting mode.\n1 : 1 = PWM counter operates in Up-Down Counting mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INIT ) </loc>
//      <o.5..5> CNTMODE
//        <0=> 0: 0 = PWM counter operates in Up Counting mode.
//        <1=> 1: 1 = PWM counter operates in Up-Down Counting mode.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_INIT_CNTOIE  ----------------------------------
// SVD Line: 12761

//  <item> SFDITEM_FIELD__PWM2_INIT_CNTOIE
//    <name> CNTOIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015000) \nPWM Counter Overflow Interrupt Enable\n0 : 0 = Disable CNTOF interrupts. Use software polling.\n1 : 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INIT ) </loc>
//      <o.6..6> CNTOIE
//        <0=> 0: 0 = Disable CNTOF interrupts. Use software polling.
//        <1=> 1: 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_INIT_CNTOF  ----------------------------------
// SVD Line: 12780

//  <item> SFDITEM_FIELD__PWM2_INIT_CNTOF
//    <name> CNTOF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40015000) \nPWM Counter Overflow Flag\n0 : 0 = PWM counter has not overflowed.\n1 : 1 = PWM counter has overflowed. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INIT ) </loc>
//      <o.7..7> CNTOF
//        <0=> 0: 0 = PWM counter has not overflowed.
//        <1=> 1: 1 = PWM counter has overflowed.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_INIT_CLKPSC  ----------------------------------
// SVD Line: 12799

//  <item> SFDITEM_FIELD__PWM2_INIT_CLKPSC
//    <name> CLKPSC </name>
//    <rw> 
//    <i> [Bits 23..8] RW (@ 0x40015000) Prescale Factor Selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_INIT >> 8) & 0xFFFF), ((PWM2_INIT = (PWM2_INIT & ~(0xFFFFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_INIT  -----------------------------------
// SVD Line: 12704

//  <rtree> SFDITEM_REG__PWM2_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015000) PWM Initialize, Include Clock and Prescale Setting </i>
//    <loc> ( (unsigned int)((PWM2_INIT >> 0) & 0xFFFFFFFF), ((PWM2_INIT = (PWM2_INIT & ~(0xFFFF78UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF78) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_INIT_CLKSRC </item>
//    <item> SFDITEM_FIELD__PWM2_INIT_CNTMODE </item>
//    <item> SFDITEM_FIELD__PWM2_INIT_CNTOIE </item>
//    <item> SFDITEM_FIELD__PWM2_INIT_CNTOF </item>
//    <item> SFDITEM_FIELD__PWM2_INIT_CLKPSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM2_CNT  --------------------------------
// SVD Line: 12808

unsigned int PWM2_CNT __AT (0x40015004);



// -------------------------------  Field Item: PWM2_CNT_COUNT  -----------------------------------
// SVD Line: 12817

//  <item> SFDITEM_FIELD__PWM2_CNT_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015004) Current Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CNT >> 0) & 0xFFFF), ((PWM2_CNT = (PWM2_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_CNT  ------------------------------------
// SVD Line: 12808

//  <rtree> SFDITEM_REG__PWM2_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015004) PWM Counter Current Count Value </i>
//    <loc> ( (unsigned int)((PWM2_CNT >> 0) & 0xFFFFFFFF), ((PWM2_CNT = (PWM2_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CNT_COUNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_MCVR  --------------------------------
// SVD Line: 12827

unsigned int PWM2_MCVR __AT (0x40015008);



// -------------------------------  Field Item: PWM2_MCVR_MCVR  -----------------------------------
// SVD Line: 12836

//  <item> SFDITEM_FIELD__PWM2_MCVR_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015008) MCVR </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_MCVR >> 0) & 0xFFFF), ((PWM2_MCVR = (PWM2_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_MCVR  -----------------------------------
// SVD Line: 12827

//  <rtree> SFDITEM_REG__PWM2_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015008) PWM Counter Max Count Value Register </i>
//    <loc> ( (unsigned int)((PWM2_MCVR >> 0) & 0xFFFFFFFF), ((PWM2_MCVR = (PWM2_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_MCVR_MCVR </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH0SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH0SCR __AT (0x4001500C);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001500C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001500C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001500C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001500C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001500C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH0SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001500C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH0SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH0SCR
//    <name> CH0SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001500C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH0SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH0SCR = (PWM2_CHSCR_CHSCR_CH0SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH0SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH1SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH1SCR __AT (0x40015014);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015014) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015014) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015014) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015014) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015014) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH1SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40015014) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH1SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH1SCR
//    <name> CH1SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015014) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH1SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH1SCR = (PWM2_CHSCR_CHSCR_CH1SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH1SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH2SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH2SCR __AT (0x4001501C);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001501C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001501C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001501C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001501C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001501C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH2SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001501C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH2SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH2SCR
//    <name> CH2SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001501C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH2SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH2SCR = (PWM2_CHSCR_CHSCR_CH2SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH2SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH3SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH3SCR __AT (0x40015024);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015024) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015024) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015024) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015024) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015024) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH3SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40015024) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH3SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH3SCR
//    <name> CH3SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015024) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH3SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH3SCR = (PWM2_CHSCR_CHSCR_CH3SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH3SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH4SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH4SCR __AT (0x4001502C);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001502C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001502C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001502C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001502C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001502C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH4SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001502C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH4SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH4SCR
//    <name> CH4SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001502C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH4SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH4SCR = (PWM2_CHSCR_CHSCR_CH4SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH4SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM2_CHSCR_CHSCR_CH5SCR  -------------------------
// SVD Line: 12846

unsigned int PWM2_CHSCR_CHSCR_CH5SCR __AT (0x40015034);



// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_ELSR0  ---------------------------
// SVD Line: 12858

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015034) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_ELSR1  ---------------------------
// SVD Line: 12865

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015034) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_MSR0  ----------------------------
// SVD Line: 12872

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015034) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_MSR1  ----------------------------
// SVD Line: 12879

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015034) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_CHIE  ----------------------------
// SVD Line: 12886

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015034) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM2_CHSCR_CHSCR_CH5SCR_CHIF  ----------------------------
// SVD Line: 12905

//  <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40015034) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM2_CHSCR_CHSCR_CH5SCR  ----------------------------
// SVD Line: 12846

//  <rtree> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH5SCR
//    <name> CH5SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015034) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHSCR_CHSCR_CH5SCR >> 0) & 0xFFFFFFFF), ((PWM2_CHSCR_CHSCR_CH5SCR = (PWM2_CHSCR_CHSCR_CH5SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM2_CHSCR_CHSCR_CH5SCR_CHIF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH0V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH0V __AT (0x40015010);



// --------------------------  Field Item: PWM2_CHV_CHV_CH0V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH0V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015010) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH0V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH0V = (PWM2_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH0V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH0V
//    <name> CH0V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015010) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH0V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH0V = (PWM2_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH0V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH1V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH1V __AT (0x40015018);



// --------------------------  Field Item: PWM2_CHV_CHV_CH1V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH1V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015018) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH1V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH1V = (PWM2_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH1V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH1V
//    <name> CH1V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015018) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH1V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH1V = (PWM2_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH1V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH2V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH2V __AT (0x40015020);



// --------------------------  Field Item: PWM2_CHV_CHV_CH2V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH2V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015020) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH2V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH2V = (PWM2_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH2V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH2V
//    <name> CH2V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015020) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH2V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH2V = (PWM2_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH2V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH3V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH3V __AT (0x40015028);



// --------------------------  Field Item: PWM2_CHV_CHV_CH3V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH3V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015028) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH3V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH3V = (PWM2_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH3V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH3V
//    <name> CH3V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015028) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH3V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH3V = (PWM2_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH3V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH4V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH4V __AT (0x40015030);



// --------------------------  Field Item: PWM2_CHV_CHV_CH4V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH4V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015030) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH4V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH4V = (PWM2_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH4V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH4V
//    <name> CH4V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015030) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH4V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH4V = (PWM2_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH4V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM2_CHV_CHV_CH5V  ----------------------------
// SVD Line: 12927

unsigned int PWM2_CHV_CHV_CH5V __AT (0x40015038);



// --------------------------  Field Item: PWM2_CHV_CHV_CH5V_CHCVAL  ------------------------------
// SVD Line: 12939

//  <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH5V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40015038) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CHV_CHV_CH5V >> 0) & 0xFFFF), ((PWM2_CHV_CHV_CH5V = (PWM2_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM2_CHV_CHV_CH5V  -------------------------------
// SVD Line: 12927

//  <rtree> SFDITEM_REG__PWM2_CHV_CHV_CH5V
//    <name> CH5V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015038) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM2_CHV_CHV_CH5V >> 0) & 0xFFFFFFFF), ((PWM2_CHV_CHV_CH5V = (PWM2_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHV_CHV_CH5V_CHCVAL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_CNTIN  -------------------------------
// SVD Line: 12949

unsigned int PWM2_CNTIN __AT (0x4001504C);



// -----------------------------  Field Item: PWM2_CNTIN_CNTINIT  ---------------------------------
// SVD Line: 12958

//  <item> SFDITEM_FIELD__PWM2_CNTIN_CNTINIT
//    <name> CNTINIT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001504C) CNTINIT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CNTIN >> 0) & 0xFFFF), ((PWM2_CNTIN = (PWM2_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM2_CNTIN  -----------------------------------
// SVD Line: 12949

//  <rtree> SFDITEM_REG__PWM2_CNTIN
//    <name> CNTIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001504C) Counter Initial Value </i>
//    <loc> ( (unsigned int)((PWM2_CNTIN >> 0) & 0xFFFFFFFF), ((PWM2_CNTIN = (PWM2_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CNTIN_CNTINIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM2_STR  --------------------------------
// SVD Line: 12968

unsigned int PWM2_STR __AT (0x40015050);



// -------------------------------  Field Item: PWM2_STR_CH0SF  -----------------------------------
// SVD Line: 12977

//  <item> SFDITEM_FIELD__PWM2_STR_CH0SF
//    <name> CH0SF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015050) \nChannel 0 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.0..0> CH0SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_STR_CH1SF  -----------------------------------
// SVD Line: 12996

//  <item> SFDITEM_FIELD__PWM2_STR_CH1SF
//    <name> CH1SF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015050) \nChannel 1 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.1..1> CH1SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_STR_CH2SF  -----------------------------------
// SVD Line: 13015

//  <item> SFDITEM_FIELD__PWM2_STR_CH2SF
//    <name> CH2SF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015050) \nChannel 2 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.2..2> CH2SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_STR_CH3SF  -----------------------------------
// SVD Line: 13034

//  <item> SFDITEM_FIELD__PWM2_STR_CH3SF
//    <name> CH3SF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015050) \nChannel 3 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.3..3> CH3SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_STR_CH4SF  -----------------------------------
// SVD Line: 13053

//  <item> SFDITEM_FIELD__PWM2_STR_CH4SF
//    <name> CH4SF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015050) \nChannel 4 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.4..4> CH4SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_STR_CH5SF  -----------------------------------
// SVD Line: 13072

//  <item> SFDITEM_FIELD__PWM2_STR_CH5SF
//    <name> CH5SF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015050) \nChannel 5 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_STR ) </loc>
//      <o.5..5> CH5SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_STR  ------------------------------------
// SVD Line: 12968

//  <rtree> SFDITEM_REG__PWM2_STR
//    <name> STR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015050) Status Register </i>
//    <loc> ( (unsigned int)((PWM2_STR >> 0) & 0xFFFFFFFF), ((PWM2_STR = (PWM2_STR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_STR_CH0SF </item>
//    <item> SFDITEM_FIELD__PWM2_STR_CH1SF </item>
//    <item> SFDITEM_FIELD__PWM2_STR_CH2SF </item>
//    <item> SFDITEM_FIELD__PWM2_STR_CH3SF </item>
//    <item> SFDITEM_FIELD__PWM2_STR_CH4SF </item>
//    <item> SFDITEM_FIELD__PWM2_STR_CH5SF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_FUNCSEL  ------------------------------
// SVD Line: 13093

unsigned int PWM2_FUNCSEL __AT (0x40015054);



// -----------------------------  Field Item: PWM2_FUNCSEL_PWMEN2  --------------------------------
// SVD Line: 13102

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_PWMEN2
//    <name> PWMEN2 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015054) PWM Enhance function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.0..0> PWMEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FUNCSEL_INIT  ---------------------------------
// SVD Line: 13109

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015054) Initialize The Channels Output </i>
//    <check> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.1..1> INIT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FUNCSEL_WPDIS  ---------------------------------
// SVD Line: 13116

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_WPDIS
//    <name> WPDIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015054) \nWrite Protection Enable Register\n0 : 0 = Write protection is enabled.\n1 : 1 = Write protection is disabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.2..2> WPDIS
//        <0=> 0: 0 = Write protection is enabled.
//        <1=> 1: 1 = Write protection is disabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_FUNCSEL_PWMSYNC  --------------------------------
// SVD Line: 13135

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_PWMSYNC
//    <name> PWMSYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015054) \nPWM Synchronization Mode\n0 : 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.\n1 : 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.3..3> PWMSYNC
//        <0=> 0: 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.
//        <1=> 1: 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_FUNCSEL_CAPTEST  --------------------------------
// SVD Line: 13154

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_CAPTEST
//    <name> CAPTEST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015054) \nCapture Test Mode Enable\n0 : 0 = Capture test mode is disabled.\n1 : 1 = Capture test mode is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.4..4> CAPTEST
//        <0=> 0: 0 = Capture test mode is disabled.
//        <1=> 1: 1 = Capture test mode is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_FUNCSEL_FAULTMODE  -------------------------------
// SVD Line: 13173

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_FAULTMODE
//    <name> FAULTMODE </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x40015054) \nFault Control Mode\n0 : 00 = Fault control is disabled for all channels.\n1 : 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.\n2 : 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.\n3 : 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.6..5> FAULTMODE
//        <0=> 0: 00 = Fault control is disabled for all channels.
//        <1=> 1: 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.
//        <2=> 2: 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.
//        <3=> 3: 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_FUNCSEL_FAULTIE  --------------------------------
// SVD Line: 13202

//  <item> SFDITEM_FIELD__PWM2_FUNCSEL_FAULTIE
//    <name> FAULTIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40015054) \nFault Interrupt Enable\n0 : 0 = Fault control interrupt is disabled.\n1 : 1 = Fault control interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FUNCSEL ) </loc>
//      <o.7..7> FAULTIE
//        <0=> 0: 0 = Fault control interrupt is disabled.
//        <1=> 1: 1 = Fault control interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_FUNCSEL  ----------------------------------
// SVD Line: 13093

//  <rtree> SFDITEM_REG__PWM2_FUNCSEL
//    <name> FUNCSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015054) PWM Features(Functions) Mode Selection Register </i>
//    <loc> ( (unsigned int)((PWM2_FUNCSEL >> 0) & 0xFFFFFFFF), ((PWM2_FUNCSEL = (PWM2_FUNCSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_PWMEN2 </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_INIT </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_WPDIS </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_PWMSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_CAPTEST </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_FAULTMODE </item>
//    <item> SFDITEM_FIELD__PWM2_FUNCSEL_FAULTIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_SYNC  --------------------------------
// SVD Line: 13224

unsigned int PWM2_SYNC __AT (0x40015058);



// -----------------------------  Field Item: PWM2_SYNC_MINSYNCP  ---------------------------------
// SVD Line: 13233

//  <item> SFDITEM_FIELD__PWM2_SYNC_MINSYNCP
//    <name> MINSYNCP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015058) \nMinimum Loading Point Enable\n0 : 0 = The minimum loading point is disabled.\n1 : 1 = The minimum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.0..0> MINSYNCP
//        <0=> 0: 0 = The minimum loading point is disabled.
//        <1=> 1: 1 = The minimum loading point is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNC_MAXSYNCP  ---------------------------------
// SVD Line: 13252

//  <item> SFDITEM_FIELD__PWM2_SYNC_MAXSYNCP
//    <name> MAXSYNCP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015058) \nMaximum Loading Point Enable\n0 : 0 = The maximum loading point is disabled.\n1 : 1 = The maximum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.1..1> MAXSYNCP
//        <0=> 0: 0 = The maximum loading point is disabled.
//        <1=> 1: 1 = The maximum loading point is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNC_REINIT  ----------------------------------
// SVD Line: 13271

//  <item> SFDITEM_FIELD__PWM2_SYNC_REINIT
//    <name> REINIT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015058) \nPWM Counter Reinitialization By Synchronization (PWM counter synchronization)\n0 : 0 = PWM counter continues to count normally.\n1 : 1 = PWM counter is updated with its initial value when the selected trigger is detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.2..2> REINIT
//        <0=> 0: 0 = PWM counter continues to count normally.
//        <1=> 1: 1 = PWM counter is updated with its initial value when the selected trigger is detected.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNC_OMSYNCP  ---------------------------------
// SVD Line: 13290

//  <item> SFDITEM_FIELD__PWM2_SYNC_OMSYNCP
//    <name> OMSYNCP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015058) \nOutput Mask Synchronization Point\n0 : 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.\n1 : 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.3..3> OMSYNCP
//        <0=> 0: 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.
//        <1=> 1: 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNC_ACMPTRIG  ---------------------------------
// SVD Line: 13309

//  <item> SFDITEM_FIELD__PWM2_SYNC_ACMPTRIG
//    <name> ACMPTRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015058) \nPWM Synchronization Hardware Trigger 0\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.4..4> ACMPTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNC_PWM0TRIG  ---------------------------------
// SVD Line: 13328

//  <item> SFDITEM_FIELD__PWM2_SYNC_PWM0TRIG
//    <name> PWM0TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015058) \nPWM Synchronization Hardware Trigger 1\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.5..5> PWM0TRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNC_SWTRIG  ----------------------------------
// SVD Line: 13347

//  <item> SFDITEM_FIELD__PWM2_SYNC_SWTRIG
//    <name> SWTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015058) \nPWM Synchronization Hardware Trigger 2\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.6..6> SWTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNC_SWSYNC  ----------------------------------
// SVD Line: 13366

//  <item> SFDITEM_FIELD__PWM2_SYNC_SWSYNC
//    <name> SWSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40015058) \nPWM Synchronization Software Trigger\n0 : 0 = Software trigger is not selected.\n1 : 1 = Software trigger is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNC ) </loc>
//      <o.7..7> SWSYNC
//        <0=> 0: 0 = Software trigger is not selected.
//        <1=> 1: 1 = Software trigger is selected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_SYNC  -----------------------------------
// SVD Line: 13224

//  <rtree> SFDITEM_REG__PWM2_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015058) Synchronization </i>
//    <loc> ( (unsigned int)((PWM2_SYNC >> 0) & 0xFFFFFFFF), ((PWM2_SYNC = (PWM2_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_SYNC_MINSYNCP </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_MAXSYNCP </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_REINIT </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_OMSYNCP </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_ACMPTRIG </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_PWM0TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_SWTRIG </item>
//    <item> SFDITEM_FIELD__PWM2_SYNC_SWSYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_OUTINIT  ------------------------------
// SVD Line: 13388

unsigned int PWM2_OUTINIT __AT (0x4001505C);



// -----------------------------  Field Item: PWM2_OUTINIT_CH0OIV  --------------------------------
// SVD Line: 13397

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH0OIV
//    <name> CH0OIV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001505C) \nChannel 0 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.0..0> CH0OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_OUTINIT_CH1OIV  --------------------------------
// SVD Line: 13416

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH1OIV
//    <name> CH1OIV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001505C) \nChannel 1 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.1..1> CH1OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_OUTINIT_CH2OIV  --------------------------------
// SVD Line: 13435

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH2OIV
//    <name> CH2OIV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001505C) \nChannel 2 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.2..2> CH2OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_OUTINIT_CH3OIV  --------------------------------
// SVD Line: 13454

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH3OIV
//    <name> CH3OIV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001505C) \nChannel 3 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.3..3> CH3OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_OUTINIT_CH4OIV  --------------------------------
// SVD Line: 13473

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH4OIV
//    <name> CH4OIV </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001505C) \nChannel 4 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.4..4> CH4OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_OUTINIT_CH5OIV  --------------------------------
// SVD Line: 13492

//  <item> SFDITEM_FIELD__PWM2_OUTINIT_CH5OIV
//    <name> CH5OIV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001505C) \nChannel 5 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OUTINIT ) </loc>
//      <o.5..5> CH5OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_OUTINIT  ----------------------------------
// SVD Line: 13388

//  <rtree> SFDITEM_REG__PWM2_OUTINIT
//    <name> OUTINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001505C) Initial Value For Channels Output </i>
//    <loc> ( (unsigned int)((PWM2_OUTINIT >> 0) & 0xFFFFFFFF), ((PWM2_OUTINIT = (PWM2_OUTINIT & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH0OIV </item>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH1OIV </item>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH2OIV </item>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH3OIV </item>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH4OIV </item>
//    <item> SFDITEM_FIELD__PWM2_OUTINIT_CH5OIV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_OMCR  --------------------------------
// SVD Line: 13514

unsigned int PWM2_OMCR __AT (0x40015060);



// ------------------------------  Field Item: PWM2_OMCR_CH0OMEN  ---------------------------------
// SVD Line: 13523

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH0OMEN
//    <name> CH0OMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015060) \nChannel 0 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.0..0> CH0OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_OMCR_CH1OMEN  ---------------------------------
// SVD Line: 13542

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH1OMEN
//    <name> CH1OMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015060) \nChannel 1 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.1..1> CH1OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_OMCR_CH2OMEN  ---------------------------------
// SVD Line: 13561

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH2OMEN
//    <name> CH2OMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015060) \nChannel 2 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.2..2> CH2OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_OMCR_CH3OMEN  ---------------------------------
// SVD Line: 13580

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH3OMEN
//    <name> CH3OMEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015060) \nChannel 3 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.3..3> CH3OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_OMCR_CH4OMEN  ---------------------------------
// SVD Line: 13599

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH4OMEN
//    <name> CH4OMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015060) \nChannel 4 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.4..4> CH4OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_OMCR_CH5OMEN  ---------------------------------
// SVD Line: 13618

//  <item> SFDITEM_FIELD__PWM2_OMCR_CH5OMEN
//    <name> CH5OMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015060) \nChannel 5 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_OMCR ) </loc>
//      <o.5..5> CH5OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_OMCR  -----------------------------------
// SVD Line: 13514

//  <rtree> SFDITEM_REG__PWM2_OMCR
//    <name> OMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015060) Output Mask Control Register </i>
//    <loc> ( (unsigned int)((PWM2_OMCR >> 0) & 0xFFFFFFFF), ((PWM2_OMCR = (PWM2_OMCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH0OMEN </item>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH1OMEN </item>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH2OMEN </item>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH3OMEN </item>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH4OMEN </item>
//    <item> SFDITEM_FIELD__PWM2_OMCR_CH5OMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_MODESEL  ------------------------------
// SVD Line: 13640

unsigned int PWM2_MODESEL __AT (0x40015064);



// -------------------------  Field Item: PWM2_MODESEL_PAIR0COMBINEN  -----------------------------
// SVD Line: 13649

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0COMBINEN
//    <name> PAIR0COMBINEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015064) \nCombine Channels For Pair0\n0 : 0 = Channels 0 and 1 are independent.\n1 : 1 = Channels 0 and 1 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.0..0> PAIR0COMBINEN
//        <0=> 0: 0 = Channels 0 and 1 are independent.
//        <1=> 1: 1 = Channels 0 and 1 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR0COMPEN  ------------------------------
// SVD Line: 13668

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0COMPEN
//    <name> PAIR0COMPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015064) \nComplement Channels for Pair0\n0 : 0 = The channel 1 output is the same as the channel 0 output.\n1 : 1 = The channel 1 output is the complement of the channel 0 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.1..1> PAIR0COMPEN
//        <0=> 0: 0 = The channel 1 output is the same as the channel 0 output.
//        <1=> 1: 1 = The channel 1 output is the complement of the channel 0 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR0DECAPEN  -----------------------------
// SVD Line: 13687

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DECAPEN
//    <name> PAIR0DECAPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015064) \nDual Edge Capture Mode Enable for Pair0\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.2..2> PAIR0DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR0DECAP  ------------------------------
// SVD Line: 13706

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DECAP
//    <name> PAIR0DECAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015064) \nDual Edge Capture Mode Captures for Pair0\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.3..3> PAIR0DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR0DTEN  -------------------------------
// SVD Line: 13725

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DTEN
//    <name> PAIR0DTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015064) \nDeadtime Enable for Pair0\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.4..4> PAIR0DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR0SYNCEN  ------------------------------
// SVD Line: 13744

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0SYNCEN
//    <name> PAIR0SYNCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015064) \nSynchronization Enable for Pair0\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.5..5> PAIR0SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR0FAULTEN  -----------------------------
// SVD Line: 13763

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0FAULTEN
//    <name> PAIR0FAULTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015064) \nFault Control Enable for Pair0\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.6..6> PAIR0FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM2_MODESEL_PAIR1COMBINEN  -----------------------------
// SVD Line: 13783

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1COMBINEN
//    <name> PAIR1COMBINEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40015064) \nCombine Channels For Pair1\n0 : 0 = Channels 2 and 3 are independent.\n1 : 1 = Channels 2 and 3 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.8..8> PAIR1COMBINEN
//        <0=> 0: 0 = Channels 2 and 3 are independent.
//        <1=> 1: 1 = Channels 2 and 3 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR1COMPEN  ------------------------------
// SVD Line: 13802

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1COMPEN
//    <name> PAIR1COMPEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40015064) \nComplement Of Channel (n) For Pair1\n0 : 0 = The channel 3 output is the same as the channel 2 output.\n1 : 1 = The channel 3 output is the complement of the channel 2 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.9..9> PAIR1COMPEN
//        <0=> 0: 0 = The channel 3 output is the same as the channel 2 output.
//        <1=> 1: 1 = The channel 3 output is the complement of the channel 2 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR1DECAPEN  -----------------------------
// SVD Line: 13821

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DECAPEN
//    <name> PAIR1DECAPEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40015064) \nDual Edge Capture Mode Enable For Pair1\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.10..10> PAIR1DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR1DECAP  ------------------------------
// SVD Line: 13840

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DECAP
//    <name> PAIR1DECAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40015064) \nDual Edge Capture Mode Captures For Pair1\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.11..11> PAIR1DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR1DTEN  -------------------------------
// SVD Line: 13859

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DTEN
//    <name> PAIR1DTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40015064) \nDeadtime Enable For Pair1\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.12..12> PAIR1DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR1SYNCEN  ------------------------------
// SVD Line: 13878

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1SYNCEN
//    <name> PAIR1SYNCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40015064) \nSynchronization Enable For Pair1\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.13..13> PAIR1SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR1FAULTEN  -----------------------------
// SVD Line: 13897

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1FAULTEN
//    <name> PAIR1FAULTEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40015064) \nFault Control Enable For Pair1\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.14..14> PAIR1FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM2_MODESEL_PAIR2COMBINEN  -----------------------------
// SVD Line: 13917

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2COMBINEN
//    <name> PAIR2COMBINEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40015064) \nCombine Channels For Pair2\n0 : 0 = Channels 4 and 5 are independent.\n1 : 1 = Channels 4 and 5 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.16..16> PAIR2COMBINEN
//        <0=> 0: 0 = Channels 4 and 5 are independent.
//        <1=> 1: 1 = Channels 4 and 5 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR2COMPEN  ------------------------------
// SVD Line: 13936

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2COMPEN
//    <name> PAIR2COMPEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40015064) \nComplement Of Channel (n) For Pair2\n0 : 0 = The channel 5 output is the same as the channel 4 output.\n1 : 1 = The channel 5 output is the complement of the channel 4 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.17..17> PAIR2COMPEN
//        <0=> 0: 0 = The channel 5 output is the same as the channel 4 output.
//        <1=> 1: 1 = The channel 5 output is the complement of the channel 4 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR2DECAPEN  -----------------------------
// SVD Line: 13955

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DECAPEN
//    <name> PAIR2DECAPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40015064) \nDual Edge Capture Mode Enable For Pair2\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.18..18> PAIR2DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR2DECAP  ------------------------------
// SVD Line: 13974

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DECAP
//    <name> PAIR2DECAP </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40015064) \nDual Edge Capture Mode Captures For Pair2\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.19..19> PAIR2DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_MODESEL_PAIR2DTEN  -------------------------------
// SVD Line: 13993

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DTEN
//    <name> PAIR2DTEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40015064) \nDeadtime Enable For Pair2\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.20..20> PAIR2DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR2SYNCEN  ------------------------------
// SVD Line: 14012

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2SYNCEN
//    <name> PAIR2SYNCEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40015064) \nSynchronization Enable For Pair2\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.21..21> PAIR2SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_MODESEL_PAIR2FAULTEN  -----------------------------
// SVD Line: 14031

//  <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2FAULTEN
//    <name> PAIR2FAULTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40015064) \nFault Control Enable For Pair2\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_MODESEL ) </loc>
//      <o.22..22> PAIR2FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_MODESEL  ----------------------------------
// SVD Line: 13640

//  <rtree> SFDITEM_REG__PWM2_MODESEL
//    <name> MODESEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015064) PWM Function Mode Selection </i>
//    <loc> ( (unsigned int)((PWM2_MODESEL >> 0) & 0xFFFFFFFF), ((PWM2_MODESEL = (PWM2_MODESEL & ~(0x7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0COMPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DECAP </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0DTEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR0FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1COMPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DECAP </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1DTEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR1FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2COMPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DECAP </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2DTEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM2_MODESEL_PAIR2FAULTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_DTSET  -------------------------------
// SVD Line: 14052

unsigned int PWM2_DTSET __AT (0x40015068);



// ------------------------------  Field Item: PWM2_DTSET_DTVAL  ----------------------------------
// SVD Line: 14061

//  <item> SFDITEM_FIELD__PWM2_DTSET_DTVAL
//    <name> DTVAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40015068) Deadtime Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_DTSET >> 0) & 0x3F), ((PWM2_DTSET = (PWM2_DTSET & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM2_DTSET_DTPSC  ----------------------------------
// SVD Line: 14068

//  <item> SFDITEM_FIELD__PWM2_DTSET_DTPSC
//    <name> DTPSC </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x40015068) \nDeadtime Prescaler Control Value\n0 : 0x_0 = Divide the system clock by 1.\n1 : 0x_1 = Divide the system clock by 1.\n2 : 10 = Divide the system clock by 4.\n3 : 11 = Divide the system clock by 16. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_DTSET ) </loc>
//      <o.7..6> DTPSC
//        <0=> 0: 0x_0 = Divide the system clock by 1.
//        <1=> 1: 0x_1 = Divide the system clock by 1.
//        <2=> 2: 10 = Divide the system clock by 4.
//        <3=> 3: 11 = Divide the system clock by 16.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM2_DTSET  -----------------------------------
// SVD Line: 14052

//  <rtree> SFDITEM_REG__PWM2_DTSET
//    <name> DTSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015068) Deadtime Paramenters Setting Register </i>
//    <loc> ( (unsigned int)((PWM2_DTSET >> 0) & 0xFFFFFFFF), ((PWM2_DTSET = (PWM2_DTSET & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_DTSET_DTVAL </item>
//    <item> SFDITEM_FIELD__PWM2_DTSET_DTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_EXTTRIG  ------------------------------
// SVD Line: 14095

unsigned int PWM2_EXTTRIG __AT (0x4001506C);



// ----------------------------  Field Item: PWM2_EXTTRIG_CH2TRIG  --------------------------------
// SVD Line: 14104

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH2TRIG
//    <name> CH2TRIG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001506C) \nChannel 2 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.0..0> CH2TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_EXTTRIG_CH3TRIG  --------------------------------
// SVD Line: 14123

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH3TRIG
//    <name> CH3TRIG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001506C) \nChannel 3 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.1..1> CH3TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_EXTTRIG_CH4TRIG  --------------------------------
// SVD Line: 14142

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH4TRIG
//    <name> CH4TRIG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001506C) \nChannel 4 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.2..2> CH4TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_EXTTRIG_CH5TRIG  --------------------------------
// SVD Line: 14161

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH5TRIG
//    <name> CH5TRIG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001506C) \nChannel 5 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.3..3> CH5TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_EXTTRIG_CH0TRIG  --------------------------------
// SVD Line: 14180

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH0TRIG
//    <name> CH0TRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001506C) \nChannel 0 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.4..4> CH0TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_EXTTRIG_CH1TRIG  --------------------------------
// SVD Line: 14199

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH1TRIG
//    <name> CH1TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001506C) \nChannel 1 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.5..5> CH1TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_EXTTRIG_INITTRIGEN  ------------------------------
// SVD Line: 14218

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_INITTRIGEN
//    <name> INITTRIGEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001506C) \nInitialization Trigger Enable\n0 : 0 = The generation of initialization trigger is disabled.\n1 : 1 = The generation of initialization trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.6..6> INITTRIGEN
//        <0=> 0: 0 = The generation of initialization trigger is disabled.
//        <1=> 1: 1 = The generation of initialization trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_EXTTRIG_TRIGF  ---------------------------------
// SVD Line: 14237

//  <item> SFDITEM_FIELD__PWM2_EXTTRIG_TRIGF
//    <name> TRIGF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001506C) \nChannel Trigger Flag\n0 : 0 = No channel trigger was generated.\n1 : 1 = A channel trigger was generated. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_EXTTRIG ) </loc>
//      <o.7..7> TRIGF
//        <0=> 0: 0 = No channel trigger was generated.
//        <1=> 1: 1 = A channel trigger was generated.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_EXTTRIG  ----------------------------------
// SVD Line: 14095

//  <rtree> SFDITEM_REG__PWM2_EXTTRIG
//    <name> EXTTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001506C) PWM External Trigger </i>
//    <loc> ( (unsigned int)((PWM2_EXTTRIG >> 0) & 0xFFFFFFFF), ((PWM2_EXTTRIG = (PWM2_EXTTRIG & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH2TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH3TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH4TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH5TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH0TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_CH1TRIG </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_INITTRIGEN </item>
//    <item> SFDITEM_FIELD__PWM2_EXTTRIG_TRIGF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM2_CHOPOLCR  ------------------------------
// SVD Line: 14259

unsigned int PWM2_CHOPOLCR __AT (0x40015070);



// ----------------------------  Field Item: PWM2_CHOPOLCR_CH0POL  --------------------------------
// SVD Line: 14268

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH0POL
//    <name> CH0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015070) \nChannel 0 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.0..0> CH0POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOPOLCR_CH1POL  --------------------------------
// SVD Line: 14287

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH1POL
//    <name> CH1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015070) \nChannel 1 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.1..1> CH1POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOPOLCR_CH2POL  --------------------------------
// SVD Line: 14306

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH2POL
//    <name> CH2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015070) \nChannel 2 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.2..2> CH2POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOPOLCR_CH3POL  --------------------------------
// SVD Line: 14325

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH3POL
//    <name> CH3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015070) \nChannel 3 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.3..3> CH3POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOPOLCR_CH4POL  --------------------------------
// SVD Line: 14344

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH4POL
//    <name> CH4POL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015070) \nChannel 4 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.4..4> CH4POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOPOLCR_CH5POL  --------------------------------
// SVD Line: 14363

//  <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH5POL
//    <name> CH5POL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015070) \nChannel 5 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOPOLCR ) </loc>
//      <o.5..5> CH5POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_CHOPOLCR  ---------------------------------
// SVD Line: 14259

//  <rtree> SFDITEM_REG__PWM2_CHOPOLCR
//    <name> CHOPOLCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015070) Channels Output Polarity Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHOPOLCR >> 0) & 0xFFFFFFFF), ((PWM2_CHOPOLCR = (PWM2_CHOPOLCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH0POL </item>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH1POL </item>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH2POL </item>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH3POL </item>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH4POL </item>
//    <item> SFDITEM_FIELD__PWM2_CHOPOLCR_CH5POL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_FDSR  --------------------------------
// SVD Line: 14385

unsigned int PWM2_FDSR __AT (0x40015074);



// -----------------------------  Field Item: PWM2_FDSR_FAULTDF0  ---------------------------------
// SVD Line: 14394

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF0
//    <name> FAULTDF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x40015074) \nFault Detection Flag 0\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.0..0> FAULTDF0
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FDSR_FAULTDF1  ---------------------------------
// SVD Line: 14413

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF1
//    <name> FAULTDF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x40015074) \nFault Detection Flag 1\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.1..1> FAULTDF1
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FDSR_FAULTDF2  ---------------------------------
// SVD Line: 14432

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF2
//    <name> FAULTDF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x40015074) \nFault Detection Flag 2\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.2..2> FAULTDF2
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FDSR_FAULTDF3  ---------------------------------
// SVD Line: 14451

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF3
//    <name> FAULTDF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x40015074) \nFault Detection Flag 3\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.3..3> FAULTDF3
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FDSR_FAULTIN  ---------------------------------
// SVD Line: 14471

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTIN
//    <name> FAULTIN </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40015074) \nFault Inputs\n0 : 0 = The logic OR of the enabled fault inputs is 0.\n1 : 1 = The logic OR of the enabled fault inputs is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.5..5> FAULTIN
//        <0=> 0: 0 = The logic OR of the enabled fault inputs is 0.
//        <1=> 1: 1 = The logic OR of the enabled fault inputs is 1.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_FDSR_WPEN  -----------------------------------
// SVD Line: 14490

//  <item> SFDITEM_FIELD__PWM2_FDSR_WPEN
//    <name> WPEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015074) \nWrite Protection Enable\n0 : 0 = Write protection is disabled. Write protected bits can be written.\n1 : 1 = Write protection is enabled. Write protected bits cannot be written. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.6..6> WPEN
//        <0=> 0: 0 = Write protection is disabled. Write protected bits can be written.
//        <1=> 1: 1 = Write protection is enabled. Write protected bits cannot be written.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FDSR_FAULTDF  ---------------------------------
// SVD Line: 14509

//  <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF
//    <name> FAULTDF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x40015074) \nFault Detection Flag\n0 : 0 = No fault condition was detected.\n1 : 1 = A fault condition was detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FDSR ) </loc>
//      <o.7..7> FAULTDF
//        <0=> 0: 0 = No fault condition was detected.
//        <1=> 1: 1 = A fault condition was detected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_FDSR  -----------------------------------
// SVD Line: 14385

//  <rtree> SFDITEM_REG__PWM2_FDSR
//    <name> FDSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015074) Fault Detect Status Register </i>
//    <loc> ( (unsigned int)((PWM2_FDSR >> 0) & 0xFFFFFFFF), ((PWM2_FDSR = (PWM2_FDSR & ~(0x40UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x40) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF0 </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF1 </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF2 </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF3 </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTIN </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_WPEN </item>
//    <item> SFDITEM_FIELD__PWM2_FDSR_FAULTDF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM2_CAPFILTER  -----------------------------
// SVD Line: 14531

unsigned int PWM2_CAPFILTER __AT (0x40015078);



// --------------------------  Field Item: PWM2_CAPFILTER_CH0CAPFVAL  -----------------------------
// SVD Line: 14540

//  <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH0CAPFVAL
//    <name> CH0CAPFVAL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40015078) Channel 0 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CAPFILTER >> 0) & 0x1F), ((PWM2_CAPFILTER = (PWM2_CAPFILTER & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM2_CAPFILTER_CH1CAPFVAL  -----------------------------
// SVD Line: 14547

//  <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH1CAPFVAL
//    <name> CH1CAPFVAL </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x40015078) Channel 1 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CAPFILTER >> 5) & 0x1F), ((PWM2_CAPFILTER = (PWM2_CAPFILTER & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM2_CAPFILTER_CH2CAPFVAL  -----------------------------
// SVD Line: 14554

//  <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH2CAPFVAL
//    <name> CH2CAPFVAL </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x40015078) Channel 2 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CAPFILTER >> 10) & 0x1F), ((PWM2_CAPFILTER = (PWM2_CAPFILTER & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM2_CAPFILTER_CH3CAPFVAL  -----------------------------
// SVD Line: 14561

//  <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH3CAPFVAL
//    <name> CH3CAPFVAL </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x40015078) Channel 3 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CAPFILTER >> 15) & 0x1F), ((PWM2_CAPFILTER = (PWM2_CAPFILTER & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PWM2_CAPFILTER  ---------------------------------
// SVD Line: 14531

//  <rtree> SFDITEM_REG__PWM2_CAPFILTER
//    <name> CAPFILTER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015078) Input Capture Filter Control </i>
//    <loc> ( (unsigned int)((PWM2_CAPFILTER >> 0) & 0xFFFFFFFF), ((PWM2_CAPFILTER = (PWM2_CAPFILTER & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH0CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH1CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH2CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM2_CAPFILTER_CH3CAPFVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_FFAFER  -------------------------------
// SVD Line: 14571

unsigned int PWM2_FFAFER __AT (0x4001507C);



// -----------------------------  Field Item: PWM2_FFAFER_FER0EN  ---------------------------------
// SVD Line: 14580

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FER0EN
//    <name> FER0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001507C) \nFault Input 0 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.0..0> FER0EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FFAFER_FER1EN  ---------------------------------
// SVD Line: 14599

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FER1EN
//    <name> FER1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001507C) \nFault Input 1 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.1..1> FER1EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FFAFER_FER2EN  ---------------------------------
// SVD Line: 14618

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FER2EN
//    <name> FER2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001507C) \nFault Input 2 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.2..2> FER2EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FFAFER_FER3EN  ---------------------------------
// SVD Line: 14637

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FER3EN
//    <name> FER3EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001507C) \nFault Input 3 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.3..3> FER3EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FFAFER_FF0EN  ---------------------------------
// SVD Line: 14656

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FF0EN
//    <name> FF0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001507C) \nFault Input 0 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.4..4> FF0EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FFAFER_FF1EN  ---------------------------------
// SVD Line: 14675

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FF1EN
//    <name> FF1EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001507C) \nFault Input 1 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.5..5> FF1EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FFAFER_FF2EN  ---------------------------------
// SVD Line: 14694

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FF2EN
//    <name> FF2EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001507C) \nFault Input 2 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.6..6> FF2EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FFAFER_FF3EN  ---------------------------------
// SVD Line: 14713

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FF3EN
//    <name> FF3EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001507C) \nFault Input 3 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FFAFER ) </loc>
//      <o.7..7> FF3EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_FFAFER_FFVAL  ---------------------------------
// SVD Line: 14732

//  <item> SFDITEM_FIELD__PWM2_FFAFER_FFVAL
//    <name> FFVAL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001507C) Fault Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_FFAFER >> 8) & 0xF), ((PWM2_FFAFER = (PWM2_FFAFER & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM2_FFAFER  ----------------------------------
// SVD Line: 14571

//  <rtree> SFDITEM_REG__PWM2_FFAFER
//    <name> FFAFER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001507C) Fault Filter and Fault Enable Register </i>
//    <loc> ( (unsigned int)((PWM2_FFAFER >> 0) & 0xFFFFFFFF), ((PWM2_FFAFER = (PWM2_FFAFER & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FER0EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FER1EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FER2EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FER3EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FF0EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FF1EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FF2EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FF3EN </item>
//    <item> SFDITEM_FIELD__PWM2_FFAFER_FFVAL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM2_QEI  --------------------------------
// SVD Line: 14741

unsigned int PWM2_QEI __AT (0x40015080);



// -------------------------------  Field Item: PWM2_QEI_QEIEN  -----------------------------------
// SVD Line: 14750

//  <item> SFDITEM_FIELD__PWM2_QEI_QEIEN
//    <name> QEIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.0..0> QEIEN
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_QEI_TOFDIR  ----------------------------------
// SVD Line: 14769

//  <item> SFDITEM_FIELD__PWM2_QEI_TOFDIR
//    <name> TOFDIR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015080) \nTimer Overflow Direction in Quadrature Decoder Mode\n0 : 0 = TOF bit was set on the bottom of counting\n1 : 1 = TOF bit was set on the top of counting </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.1..1> TOFDIR
//        <0=> 0: 0 = TOF bit was set on the bottom of counting
//        <1=> 1: 1 = TOF bit was set on the top of counting
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_QEI_QUADIR  ----------------------------------
// SVD Line: 14788

//  <item> SFDITEM_FIELD__PWM2_QEI_QUADIR
//    <name> QUADIR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.2..2> QUADIR
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_QEI_QUADMODE  ---------------------------------
// SVD Line: 14807

//  <item> SFDITEM_FIELD__PWM2_QEI_QUADMODE
//    <name> QUADMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015080) \nQuadrature Decoder Mode\n0 : 0 = Phase A and phase B encoding mode.\n1 : 1 = Count and direction encoding mode </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.3..3> QUADMODE
//        <0=> 0: 0 = Phase A and phase B encoding mode.
//        <1=> 1: 1 = Count and direction encoding mode
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_QEI_PHBPOL  ----------------------------------
// SVD Line: 14826

//  <item> SFDITEM_FIELD__PWM2_QEI_PHBPOL
//    <name> PHBPOL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015080) \nPhase B Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.4..4> PHBPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM2_QEI_PHAPOL  ----------------------------------
// SVD Line: 14845

//  <item> SFDITEM_FIELD__PWM2_QEI_PHAPOL
//    <name> PHAPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015080) \nPhase A Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.5..5> PHAPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_QEI_PHBFLTREN  ---------------------------------
// SVD Line: 14864

//  <item> SFDITEM_FIELD__PWM2_QEI_PHBFLTREN
//    <name> PHBFLTREN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40015080) \nPhase B Input Filter Enable Register\n0 : 0 = Phase B input filter is disabled\n1 : 1 = Phase B input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.6..6> PHBFLTREN
//        <0=> 0: 0 = Phase B input filter is disabled
//        <1=> 1: 1 = Phase B input filter is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_QEI_PHAFLTREN  ---------------------------------
// SVD Line: 14883

//  <item> SFDITEM_FIELD__PWM2_QEI_PHAFLTREN
//    <name> PHAFLTREN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40015080) \nPhase A Input Filter Enable Register\n0 : 0 = Phase A input filter is disabled\n1 : 1 = Phase A input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_QEI ) </loc>
//      <o.7..7> PHAFLTREN
//        <0=> 0: 0 = Phase A input filter is disabled
//        <1=> 1: 1 = Phase A input filter is enabled
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_QEI  ------------------------------------
// SVD Line: 14741

//  <rtree> SFDITEM_REG__PWM2_QEI
//    <name> QEI </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015080) Quadrature Encoder/Decoder Interface Configuration Register </i>
//    <loc> ( (unsigned int)((PWM2_QEI >> 0) & 0xFFFFFFFF), ((PWM2_QEI = (PWM2_QEI & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_QEI_QEIEN </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_TOFDIR </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_QUADIR </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_QUADMODE </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_PHBPOL </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_PHAPOL </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_PHBFLTREN </item>
//    <item> SFDITEM_FIELD__PWM2_QEI_PHAFLTREN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_CONF  --------------------------------
// SVD Line: 14904

unsigned int PWM2_CONF __AT (0x40015084);



// -----------------------------  Field Item: PWM2_CONF_CNTOFNUM  ---------------------------------
// SVD Line: 14913

//  <item> SFDITEM_FIELD__PWM2_CONF_CNTOFNUM
//    <name> CNTOFNUM </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x40015084) Count Overflow Flag Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CONF >> 0) & 0x7F), ((PWM2_CONF = (PWM2_CONF & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM2_CONF_BDMMODE  ---------------------------------
// SVD Line: 14920

//  <item> SFDITEM_FIELD__PWM2_CONF_BDMMODE
//    <name> BDMMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x40015084) Debug Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM2_CONF >> 7) & 0x3), ((PWM2_CONF = (PWM2_CONF & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM2_CONF_GTBEEN  ----------------------------------
// SVD Line: 14927

//  <item> SFDITEM_FIELD__PWM2_CONF_GTBEEN
//    <name> GTBEEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40015084) \nGlobal Time Base Enable\n0 : 0 = Use of an external global time base is disabled.\n1 : 1 = Use of an external global time base is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CONF ) </loc>
//      <o.9..9> GTBEEN
//        <0=> 0: 0 = Use of an external global time base is disabled.
//        <1=> 1: 1 = Use of an external global time base is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_CONF_GTBEOUT  ---------------------------------
// SVD Line: 14946

//  <item> SFDITEM_FIELD__PWM2_CONF_GTBEOUT
//    <name> GTBEOUT </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40015084) \nGlobal Time Base Output\n0 : 0 = A global time base signal generation is disabled.\n1 : 1 = A global time base signal generation is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CONF ) </loc>
//      <o.10..10> GTBEOUT
//        <0=> 0: 0 = A global time base signal generation is disabled.
//        <1=> 1: 1 = A global time base signal generation is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_CONF_EVENTPSC  ---------------------------------
// SVD Line: 14965

//  <item> SFDITEM_FIELD__PWM2_CONF_EVENTPSC
//    <name> EVENTPSC </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x40015084) PWM Channel Input Event Prescale Setting </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM2_CONF >> 16) & 0xFFF), ((PWM2_CONF = (PWM2_CONF & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM2_CONF  -----------------------------------
// SVD Line: 14904

//  <rtree> SFDITEM_REG__PWM2_CONF
//    <name> CONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015084) Configuration </i>
//    <loc> ( (unsigned int)((PWM2_CONF >> 0) & 0xFFFFFFFF), ((PWM2_CONF = (PWM2_CONF & ~(0xFFF07FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF07FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CONF_CNTOFNUM </item>
//    <item> SFDITEM_FIELD__PWM2_CONF_BDMMODE </item>
//    <item> SFDITEM_FIELD__PWM2_CONF_GTBEEN </item>
//    <item> SFDITEM_FIELD__PWM2_CONF_GTBEOUT </item>
//    <item> SFDITEM_FIELD__PWM2_CONF_EVENTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_FLTPOL  -------------------------------
// SVD Line: 14974

unsigned int PWM2_FLTPOL __AT (0x40015088);



// -----------------------------  Field Item: PWM2_FLTPOL_FLT0POL  --------------------------------
// SVD Line: 14983

//  <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT0POL
//    <name> FLT0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015088) \nFault Input 0 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FLTPOL ) </loc>
//      <o.0..0> FLT0POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FLTPOL_FLT1POL  --------------------------------
// SVD Line: 15002

//  <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT1POL
//    <name> FLT1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015088) \nFault Input 1 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FLTPOL ) </loc>
//      <o.1..1> FLT1POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FLTPOL_FLT2POL  --------------------------------
// SVD Line: 15021

//  <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT2POL
//    <name> FLT2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015088) \nFault Input 2 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FLTPOL ) </loc>
//      <o.2..2> FLT2POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_FLTPOL_FLT3POL  --------------------------------
// SVD Line: 15040

//  <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT3POL
//    <name> FLT3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015088) \nFault Input 3 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_FLTPOL ) </loc>
//      <o.3..3> FLT3POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM2_FLTPOL  ----------------------------------
// SVD Line: 14974

//  <rtree> SFDITEM_REG__PWM2_FLTPOL
//    <name> FLTPOL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015088) PWM Fault Input Polarity </i>
//    <loc> ( (unsigned int)((PWM2_FLTPOL >> 0) & 0xFFFFFFFF), ((PWM2_FLTPOL = (PWM2_FLTPOL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT0POL </item>
//    <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT1POL </item>
//    <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT2POL </item>
//    <item> SFDITEM_FIELD__PWM2_FLTPOL_FLT3POL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_SYNCONF  ------------------------------
// SVD Line: 15062

unsigned int PWM2_SYNCONF __AT (0x4001508C);



// -------------------------  Field Item: PWM2_SYNCONF_HWTRIGMODESEL  -----------------------------
// SVD Line: 15071

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_HWTRIGMODESEL
//    <name> HWTRIGMODESEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001508C) \nHardware Trigger Mode\n0 : 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.\n1 : 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.0..0> HWTRIGMODESEL
//        <0=> 0: 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//        <1=> 1: 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNCONF_CNTINC  --------------------------------
// SVD Line: 15091

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTINC
//    <name> CNTINC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001508C) \nCNTIN Register Synchronization\n0 : 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = CNTIN register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.2..2> CNTINC
//        <0=> 0: 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = CNTIN register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNCONF_INVC  ---------------------------------
// SVD Line: 15111

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_INVC
//    <name> INVC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001508C) \nINVCTRL Register Synchronization\n0 : 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = INVCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.4..4> INVC
//        <0=> 0: 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = INVCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM2_SYNCONF_SWOC  ---------------------------------
// SVD Line: 15130

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_SWOC
//    <name> SWOC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001508C) \nSWOCTRL Register Synchronization\n0 : 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.5..5> SWOC
//        <0=> 0: 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_SYNCONF_SYNCMODE  -------------------------------
// SVD Line: 15150

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_SYNCMODE
//    <name> SYNCMODE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001508C) \nSynchronization Mode\n0 : 0 = Legacy PWM synchronization is selected.\n1 : 1 = Enhanced PWM synchronization is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.7..7> SYNCMODE
//        <0=> 0: 0 = Legacy PWM synchronization is selected.
//        <1=> 1: 1 = Enhanced PWM synchronization is selected.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_CNTVSWSYNC  ------------------------------
// SVD Line: 15169

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTVSWSYNC
//    <name> CNTVSWSYNC </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001508C) \nCNTVSWSYNC\n0 : 0 = The software trigger does not activate the PWM counter synchronization.\n1 : 1 = The software trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.8..8> CNTVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = The software trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_SYNCONF_PWMSVSWSYNC  ------------------------------
// SVD Line: 15188

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_PWMSVSWSYNC
//    <name> PWMSVSWSYNC </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001508C) \nPWMSVSWSYNC\n0 : 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.9..9> PWMSVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_OMVSWSYNC  -------------------------------
// SVD Line: 15207

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_OMVSWSYNC
//    <name> OMVSWSYNC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001508C) \nOMVSWSYNC\n0 : 0 = The software trigger does not activate the OUTMASK register synchronization.\n1 : 1 = The software trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.10..10> OMVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = The software trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_INVSWSYNC  -------------------------------
// SVD Line: 15226

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_INVSWSYNC
//    <name> INVSWSYNC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001508C) \nINVSWSYNC\n0 : 0 = The software trigger does not activate the INVCTRL register synchronization.\n1 : 1 = The software trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.11..11> INVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_SWVSWSYNC  -------------------------------
// SVD Line: 15245

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_SWVSWSYNC
//    <name> SWVSWSYNC </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001508C) \nSWVSWSYNC\n0 : 0 = The software trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = The software trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.12..12> SWVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_CNTVHWSYNC  ------------------------------
// SVD Line: 15265

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTVHWSYNC
//    <name> CNTVHWSYNC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001508C) \nCNTVHWSYNC\n0 : 0 = A hardware trigger does not activate the PWM counter synchronization.\n1 : 1 = A hardware trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.16..16> CNTVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = A hardware trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM2_SYNCONF_PWMSVHWSYNC  ------------------------------
// SVD Line: 15284

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_PWMSVHWSYNC
//    <name> PWMSVHWSYNC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001508C) \nPWMSVHWSYNC\n0 : 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.17..17> PWMSVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_OMVHWSYNC  -------------------------------
// SVD Line: 15303

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_OMVHWSYNC
//    <name> OMVHWSYNC </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001508C) \nOMVHWSYNC\n0 : 0 = A hardware trigger does not activate the OUTMASK register synchronization.\n1 : 1 = A hardware trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.18..18> OMVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_INVHWSYNC  -------------------------------
// SVD Line: 15322

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_INVHWSYNC
//    <name> INVHWSYNC </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4001508C) \nINVHWSYNC\n0 : 0 = A hardware trigger does not activate the INVCTRL register synchronization.\n1 : 1 = A hardware trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.19..19> INVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM2_SYNCONF_SWVHWSYNC  -------------------------------
// SVD Line: 15341

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_SWVHWSYNC
//    <name> SWVHWSYNC </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4001508C) \nSWVHWSYNC\n0 : 0 = A hardware trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = A hardware trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.20..20> SWVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNCONF_SWPOL  ---------------------------------
// SVD Line: 15360

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_SWPOL
//    <name> SWPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001508C) \nChannel POL synchronization is activeated by a softwaretrigger\n0 : 0 = The software trigger does not activate the POL register synchronization.\n1 : 1 = The software trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.21..21> SWPOL
//        <0=> 0: 0 = The software trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = The software trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM2_SYNCONF_HWPOL  ---------------------------------
// SVD Line: 15379

//  <item> SFDITEM_FIELD__PWM2_SYNCONF_HWPOL
//    <name> HWPOL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001508C) \nChannel POL synchronization is activeated by a hardwaretrigger\n0 : 0 = The hardware trigger does not activate the POL register synchronization.\n1 : 1 = >The hardware trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_SYNCONF ) </loc>
//      <o.22..22> HWPOL
//        <0=> 0: 0 = The hardware trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = >The hardware trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_SYNCONF  ----------------------------------
// SVD Line: 15062

//  <rtree> SFDITEM_REG__PWM2_SYNCONF
//    <name> SYNCONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001508C) Synchronization Configuration </i>
//    <loc> ( (unsigned int)((PWM2_SYNCONF >> 0) & 0xFFFFFFFF), ((PWM2_SYNCONF = (PWM2_SYNCONF & ~(0x7F1FB5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F1FB5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_HWTRIGMODESEL </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTINC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_INVC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_SWOC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_SYNCMODE </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_PWMSVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_OMVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_INVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_SWVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_CNTVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_PWMSVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_OMVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_INVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_SWVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_SWPOL </item>
//    <item> SFDITEM_FIELD__PWM2_SYNCONF_HWPOL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM2_INVCR  -------------------------------
// SVD Line: 15400

unsigned int PWM2_INVCR __AT (0x40015090);



// ----------------------------  Field Item: PWM2_INVCR_PAIR0INVEN  -------------------------------
// SVD Line: 15409

//  <item> SFDITEM_FIELD__PWM2_INVCR_PAIR0INVEN
//    <name> PAIR0INVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015090) \nPair Channels 0 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INVCR ) </loc>
//      <o.0..0> PAIR0INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_INVCR_PAIR1INVEN  -------------------------------
// SVD Line: 15428

//  <item> SFDITEM_FIELD__PWM2_INVCR_PAIR1INVEN
//    <name> PAIR1INVEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015090) \nPair Channels 1 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INVCR ) </loc>
//      <o.1..1> PAIR1INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_INVCR_PAIR2INVEN  -------------------------------
// SVD Line: 15447

//  <item> SFDITEM_FIELD__PWM2_INVCR_PAIR2INVEN
//    <name> PAIR2INVEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015090) \nPair Channels 2 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_INVCR ) </loc>
//      <o.2..2> PAIR2INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM2_INVCR  -----------------------------------
// SVD Line: 15400

//  <rtree> SFDITEM_REG__PWM2_INVCR
//    <name> INVCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015090) PWM Inverse Control Register </i>
//    <loc> ( (unsigned int)((PWM2_INVCR >> 0) & 0xFFFFFFFF), ((PWM2_INVCR = (PWM2_INVCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_INVCR_PAIR0INVEN </item>
//    <item> SFDITEM_FIELD__PWM2_INVCR_PAIR1INVEN </item>
//    <item> SFDITEM_FIELD__PWM2_INVCR_PAIR2INVEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM2_CHOSWCR  ------------------------------
// SVD Line: 15468

unsigned int PWM2_CHOSWCR __AT (0x40015094);



// ----------------------------  Field Item: PWM2_CHOSWCR_CH0SWEN  --------------------------------
// SVD Line: 15477

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH0SWEN
//    <name> CH0SWEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40015094) \nChannel 0 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.0..0> CH0SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH1SWEN  --------------------------------
// SVD Line: 15496

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH1SWEN
//    <name> CH1SWEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40015094) \nChannel 1 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.1..1> CH1SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH2SWEN  --------------------------------
// SVD Line: 15515

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH2SWEN
//    <name> CH2SWEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40015094) \nChannel 2 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.2..2> CH2SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH3SWEN  --------------------------------
// SVD Line: 15534

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH3SWEN
//    <name> CH3SWEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40015094) \nChannel 3 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.3..3> CH3SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH4SWEN  --------------------------------
// SVD Line: 15553

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH4SWEN
//    <name> CH4SWEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40015094) \nChannel 4 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.4..4> CH4SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH5SWEN  --------------------------------
// SVD Line: 15572

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH5SWEN
//    <name> CH5SWEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40015094) \nChannel 5 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.5..5> CH5SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH0SWCV  --------------------------------
// SVD Line: 15591

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH0SWCV
//    <name> CH0SWCV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40015094) \nChannel 0 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.8..8> CH0SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH1SWCV  --------------------------------
// SVD Line: 15610

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH1SWCV
//    <name> CH1SWCV </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40015094) \nChannel 1 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.9..9> CH1SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH2SWCV  --------------------------------
// SVD Line: 15629

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH2SWCV
//    <name> CH2SWCV </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40015094) \nChannel 2 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.10..10> CH2SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH3SWCV  --------------------------------
// SVD Line: 15648

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH3SWCV
//    <name> CH3SWCV </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40015094) \nChannel 3 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.11..11> CH3SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH4SWCV  --------------------------------
// SVD Line: 15667

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH4SWCV
//    <name> CH4SWCV </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40015094) \nChannel 4 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.12..12> CH4SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM2_CHOSWCR_CH5SWCV  --------------------------------
// SVD Line: 15686

//  <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH5SWCV
//    <name> CH5SWCV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40015094) \nChannel 5 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM2_CHOSWCR ) </loc>
//      <o.13..13> CH5SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM2_CHOSWCR  ----------------------------------
// SVD Line: 15468

//  <rtree> SFDITEM_REG__PWM2_CHOSWCR
//    <name> CHOSWCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40015094) PWM CHannel Software Output Control Register </i>
//    <loc> ( (unsigned int)((PWM2_CHOSWCR >> 0) & 0xFFFFFFFF), ((PWM2_CHOSWCR = (PWM2_CHOSWCR & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH0SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH1SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH2SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH3SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH4SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH5SWEN </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH0SWCV </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH1SWCV </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH2SWCV </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH3SWCV </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH4SWCV </item>
//    <item> SFDITEM_FIELD__PWM2_CHOSWCR_CH5SWCV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWM2  -------------------------------------
// SVD Line: 12688

//  <view> PWM2
//    <name> PWM2 </name>
//    <item> SFDITEM_REG__PWM2_INIT </item>
//    <item> SFDITEM_REG__PWM2_CNT </item>
//    <item> SFDITEM_REG__PWM2_MCVR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH0SCR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH1SCR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH2SCR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH3SCR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH4SCR </item>
//    <item> SFDITEM_REG__PWM2_CHSCR_CHSCR_CH5SCR </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH0V </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH1V </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH2V </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH3V </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH4V </item>
//    <item> SFDITEM_REG__PWM2_CHV_CHV_CH5V </item>
//    <item> SFDITEM_REG__PWM2_CNTIN </item>
//    <item> SFDITEM_REG__PWM2_STR </item>
//    <item> SFDITEM_REG__PWM2_FUNCSEL </item>
//    <item> SFDITEM_REG__PWM2_SYNC </item>
//    <item> SFDITEM_REG__PWM2_OUTINIT </item>
//    <item> SFDITEM_REG__PWM2_OMCR </item>
//    <item> SFDITEM_REG__PWM2_MODESEL </item>
//    <item> SFDITEM_REG__PWM2_DTSET </item>
//    <item> SFDITEM_REG__PWM2_EXTTRIG </item>
//    <item> SFDITEM_REG__PWM2_CHOPOLCR </item>
//    <item> SFDITEM_REG__PWM2_FDSR </item>
//    <item> SFDITEM_REG__PWM2_CAPFILTER </item>
//    <item> SFDITEM_REG__PWM2_FFAFER </item>
//    <item> SFDITEM_REG__PWM2_QEI </item>
//    <item> SFDITEM_REG__PWM2_CONF </item>
//    <item> SFDITEM_REG__PWM2_FLTPOL </item>
//    <item> SFDITEM_REG__PWM2_SYNCONF </item>
//    <item> SFDITEM_REG__PWM2_INVCR </item>
//    <item> SFDITEM_REG__PWM2_CHOSWCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: PWM3_INIT  --------------------------------
// SVD Line: 15726

unsigned int PWM3_INIT __AT (0x4001E000);



// ------------------------------  Field Item: PWM3_INIT_CLKSRC  ----------------------------------
// SVD Line: 15735

//  <item> SFDITEM_FIELD__PWM3_INIT_CLKSRC
//    <name> CLKSRC </name>
//    <rw> 
//    <i> [Bits 4..3] RW (@ 0x4001E000) \nClock Source Selection\n0 : 00 = No clock selected. This in effect disables the PWM counter.\n1 : 01 = System clock\n2 : 10 = Fixed frequency clock\n3 : 11 = External clock </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INIT ) </loc>
//      <o.4..3> CLKSRC
//        <0=> 0: 00 = No clock selected. This in effect disables the PWM counter.
//        <1=> 1: 01 = System clock
//        <2=> 2: 10 = Fixed frequency clock
//        <3=> 3: 11 = External clock
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_INIT_CNTMODE  ---------------------------------
// SVD Line: 15764

//  <item> SFDITEM_FIELD__PWM3_INIT_CNTMODE
//    <name> CNTMODE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E000) \nPWM Counter Mode Select\n0 : 0 = PWM counter operates in Up Counting mode.\n1 : 1 = PWM counter operates in Up-Down Counting mode. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INIT ) </loc>
//      <o.5..5> CNTMODE
//        <0=> 0: 0 = PWM counter operates in Up Counting mode.
//        <1=> 1: 1 = PWM counter operates in Up-Down Counting mode.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_INIT_CNTOIE  ----------------------------------
// SVD Line: 15783

//  <item> SFDITEM_FIELD__PWM3_INIT_CNTOIE
//    <name> CNTOIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E000) \nPWM Counter Overflow Interrupt Enable\n0 : 0 = Disable CNTOF interrupts. Use software polling.\n1 : 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INIT ) </loc>
//      <o.6..6> CNTOIE
//        <0=> 0: 0 = Disable CNTOF interrupts. Use software polling.
//        <1=> 1: 1 = Enable CNTOF interrupts. An interrupt is generated when CNTOF equals one.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_INIT_CNTOF  ----------------------------------
// SVD Line: 15802

//  <item> SFDITEM_FIELD__PWM3_INIT_CNTOF
//    <name> CNTOF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E000) \nPWM Counter Overflow Flag\n0 : 0 = PWM counter has not overflowed.\n1 : 1 = PWM counter has overflowed. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INIT ) </loc>
//      <o.7..7> CNTOF
//        <0=> 0: 0 = PWM counter has not overflowed.
//        <1=> 1: 1 = PWM counter has overflowed.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_INIT_CLKPSC  ----------------------------------
// SVD Line: 15821

//  <item> SFDITEM_FIELD__PWM3_INIT_CLKPSC
//    <name> CLKPSC </name>
//    <rw> 
//    <i> [Bits 23..8] RW (@ 0x4001E000) Prescale Factor Selection </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_INIT >> 8) & 0xFFFF), ((PWM3_INIT = (PWM3_INIT & ~(0xFFFFUL << 8 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_INIT  -----------------------------------
// SVD Line: 15726

//  <rtree> SFDITEM_REG__PWM3_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E000) PWM Initialize, Include Clock and Prescale Setting </i>
//    <loc> ( (unsigned int)((PWM3_INIT >> 0) & 0xFFFFFFFF), ((PWM3_INIT = (PWM3_INIT & ~(0xFFFF78UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF78) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_INIT_CLKSRC </item>
//    <item> SFDITEM_FIELD__PWM3_INIT_CNTMODE </item>
//    <item> SFDITEM_FIELD__PWM3_INIT_CNTOIE </item>
//    <item> SFDITEM_FIELD__PWM3_INIT_CNTOF </item>
//    <item> SFDITEM_FIELD__PWM3_INIT_CLKPSC </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM3_CNT  --------------------------------
// SVD Line: 15830

unsigned int PWM3_CNT __AT (0x4001E004);



// -------------------------------  Field Item: PWM3_CNT_COUNT  -----------------------------------
// SVD Line: 15839

//  <item> SFDITEM_FIELD__PWM3_CNT_COUNT
//    <name> COUNT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E004) Current Counter Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CNT >> 0) & 0xFFFF), ((PWM3_CNT = (PWM3_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_CNT  ------------------------------------
// SVD Line: 15830

//  <rtree> SFDITEM_REG__PWM3_CNT
//    <name> CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E004) PWM Counter Current Count Value </i>
//    <loc> ( (unsigned int)((PWM3_CNT >> 0) & 0xFFFFFFFF), ((PWM3_CNT = (PWM3_CNT & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CNT_COUNT </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_MCVR  --------------------------------
// SVD Line: 15849

unsigned int PWM3_MCVR __AT (0x4001E008);



// -------------------------------  Field Item: PWM3_MCVR_MCVR  -----------------------------------
// SVD Line: 15858

//  <item> SFDITEM_FIELD__PWM3_MCVR_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E008) MCVR </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_MCVR >> 0) & 0xFFFF), ((PWM3_MCVR = (PWM3_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_MCVR  -----------------------------------
// SVD Line: 15849

//  <rtree> SFDITEM_REG__PWM3_MCVR
//    <name> MCVR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E008) PWM Counter Max Count Value Register </i>
//    <loc> ( (unsigned int)((PWM3_MCVR >> 0) & 0xFFFFFFFF), ((PWM3_MCVR = (PWM3_MCVR & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_MCVR_MCVR </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH0SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH0SCR __AT (0x4001E00C);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E00C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E00C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E00C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E00C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E00C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH0SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E00C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH0SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH0SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH0SCR
//    <name> CH0SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E00C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH0SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH0SCR = (PWM3_CHSCR_CHSCR_CH0SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH0SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH1SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH1SCR __AT (0x4001E014);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E014) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E014) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E014) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E014) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E014) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH1SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E014) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH1SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH1SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH1SCR
//    <name> CH1SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E014) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH1SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH1SCR = (PWM3_CHSCR_CHSCR_CH1SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH1SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH2SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH2SCR __AT (0x4001E01C);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E01C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E01C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E01C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E01C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E01C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH2SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E01C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH2SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH2SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH2SCR
//    <name> CH2SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E01C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH2SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH2SCR = (PWM3_CHSCR_CHSCR_CH2SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH2SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH3SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH3SCR __AT (0x4001E024);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E024) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E024) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E024) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E024) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E024) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH3SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E024) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH3SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH3SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH3SCR
//    <name> CH3SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E024) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH3SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH3SCR = (PWM3_CHSCR_CHSCR_CH3SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH3SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH4SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH4SCR __AT (0x4001E02C);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E02C) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E02C) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E02C) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E02C) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E02C) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH4SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E02C) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH4SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH4SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH4SCR
//    <name> CH4SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E02C) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH4SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH4SCR = (PWM3_CHSCR_CHSCR_CH4SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH4SCR_CHIF </item>
//  </rtree>
//  


// ---------------------  Register Item Address: PWM3_CHSCR_CHSCR_CH5SCR  -------------------------
// SVD Line: 15868

unsigned int PWM3_CHSCR_CHSCR_CH5SCR __AT (0x4001E034);



// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_ELSR0  ---------------------------
// SVD Line: 15880

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_ELSR0
//    <name> ELSR0 </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E034) Edge or Level Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.2..2> ELSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_ELSR1  ---------------------------
// SVD Line: 15887

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_ELSR1
//    <name> ELSR1 </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E034) Edge or Level Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.3..3> ELSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_MSR0  ----------------------------
// SVD Line: 15894

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_MSR0
//    <name> MSR0 </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E034) Channel Mode Select Register 0 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.4..4> MSR0
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_MSR1  ----------------------------
// SVD Line: 15901

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_MSR1
//    <name> MSR1 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E034) Channel Mode Select Register 1 </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.5..5> MSR1
//    </check>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_CHIE  ----------------------------
// SVD Line: 15908

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_CHIE
//    <name> CHIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E034) \nChannel Interrupt Enable\n0 : 0 = Disable channel interrupts. Use software polling.\n1 : 1 = Enable channel interrupts. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.6..6> CHIE
//        <0=> 0: 0 = Disable channel interrupts. Use software polling.
//        <1=> 1: 1 = Enable channel interrupts.
//    </combo>
//  </item>
//  


// ------------------------  Field Item: PWM3_CHSCR_CHSCR_CH5SCR_CHIF  ----------------------------
// SVD Line: 15927

//  <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_CHIF
//    <name> CHIF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E034) \nChannel Interrupt Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHSCR_CHSCR_CH5SCR ) </loc>
//      <o.7..7> CHIF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------  Register RTree: PWM3_CHSCR_CHSCR_CH5SCR  ----------------------------
// SVD Line: 15868

//  <rtree> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH5SCR
//    <name> CH5SCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E034) Channel (n) Status And Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHSCR_CHSCR_CH5SCR >> 0) & 0xFFFFFFFF), ((PWM3_CHSCR_CHSCR_CH5SCR = (PWM3_CHSCR_CHSCR_CH5SCR & ~(0x7CUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7C) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_ELSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_ELSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_MSR0 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_MSR1 </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_CHIE </item>
//    <item> SFDITEM_FIELD__PWM3_CHSCR_CHSCR_CH5SCR_CHIF </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH0V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH0V __AT (0x4001E010);



// --------------------------  Field Item: PWM3_CHV_CHV_CH0V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH0V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E010) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH0V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH0V = (PWM3_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH0V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH0V
//    <name> CH0V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E010) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH0V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH0V = (PWM3_CHV_CHV_CH0V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH0V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH1V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH1V __AT (0x4001E018);



// --------------------------  Field Item: PWM3_CHV_CHV_CH1V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH1V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E018) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH1V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH1V = (PWM3_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH1V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH1V
//    <name> CH1V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E018) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH1V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH1V = (PWM3_CHV_CHV_CH1V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH1V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH2V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH2V __AT (0x4001E020);



// --------------------------  Field Item: PWM3_CHV_CHV_CH2V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH2V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E020) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH2V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH2V = (PWM3_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH2V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH2V
//    <name> CH2V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E020) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH2V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH2V = (PWM3_CHV_CHV_CH2V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH2V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH3V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH3V __AT (0x4001E028);



// --------------------------  Field Item: PWM3_CHV_CHV_CH3V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH3V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E028) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH3V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH3V = (PWM3_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH3V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH3V
//    <name> CH3V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E028) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH3V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH3V = (PWM3_CHV_CHV_CH3V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH3V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH4V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH4V __AT (0x4001E030);



// --------------------------  Field Item: PWM3_CHV_CHV_CH4V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH4V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E030) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH4V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH4V = (PWM3_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH4V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH4V
//    <name> CH4V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E030) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH4V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH4V = (PWM3_CHV_CHV_CH4V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH4V_CHCVAL </item>
//  </rtree>
//  


// ------------------------  Register Item Address: PWM3_CHV_CHV_CH5V  ----------------------------
// SVD Line: 15949

unsigned int PWM3_CHV_CHV_CH5V __AT (0x4001E038);



// --------------------------  Field Item: PWM3_CHV_CHV_CH5V_CHCVAL  ------------------------------
// SVD Line: 15961

//  <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH5V_CHCVAL
//    <name> CHCVAL </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E038) Channel Count Value </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CHV_CHV_CH5V >> 0) & 0xFFFF), ((PWM3_CHV_CHV_CH5V = (PWM3_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Register RTree: PWM3_CHV_CHV_CH5V  -------------------------------
// SVD Line: 15949

//  <rtree> SFDITEM_REG__PWM3_CHV_CHV_CH5V
//    <name> CH5V </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E038) Channel (n) Value </i>
//    <loc> ( (unsigned int)((PWM3_CHV_CHV_CH5V >> 0) & 0xFFFFFFFF), ((PWM3_CHV_CHV_CH5V = (PWM3_CHV_CHV_CH5V & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHV_CHV_CH5V_CHCVAL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_CNTIN  -------------------------------
// SVD Line: 15971

unsigned int PWM3_CNTIN __AT (0x4001E04C);



// -----------------------------  Field Item: PWM3_CNTIN_CNTINIT  ---------------------------------
// SVD Line: 15980

//  <item> SFDITEM_FIELD__PWM3_CNTIN_CNTINIT
//    <name> CNTINIT </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x4001E04C) CNTINIT </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CNTIN >> 0) & 0xFFFF), ((PWM3_CNTIN = (PWM3_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM3_CNTIN  -----------------------------------
// SVD Line: 15971

//  <rtree> SFDITEM_REG__PWM3_CNTIN
//    <name> CNTIN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E04C) Counter Initial Value </i>
//    <loc> ( (unsigned int)((PWM3_CNTIN >> 0) & 0xFFFFFFFF), ((PWM3_CNTIN = (PWM3_CNTIN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CNTIN_CNTINIT </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM3_STR  --------------------------------
// SVD Line: 15990

unsigned int PWM3_STR __AT (0x4001E050);



// -------------------------------  Field Item: PWM3_STR_CH0SF  -----------------------------------
// SVD Line: 15999

//  <item> SFDITEM_FIELD__PWM3_STR_CH0SF
//    <name> CH0SF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E050) \nChannel 0 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.0..0> CH0SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_STR_CH1SF  -----------------------------------
// SVD Line: 16018

//  <item> SFDITEM_FIELD__PWM3_STR_CH1SF
//    <name> CH1SF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E050) \nChannel 1 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.1..1> CH1SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_STR_CH2SF  -----------------------------------
// SVD Line: 16037

//  <item> SFDITEM_FIELD__PWM3_STR_CH2SF
//    <name> CH2SF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E050) \nChannel 2 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.2..2> CH2SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_STR_CH3SF  -----------------------------------
// SVD Line: 16056

//  <item> SFDITEM_FIELD__PWM3_STR_CH3SF
//    <name> CH3SF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E050) \nChannel 3 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.3..3> CH3SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_STR_CH4SF  -----------------------------------
// SVD Line: 16075

//  <item> SFDITEM_FIELD__PWM3_STR_CH4SF
//    <name> CH4SF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E050) \nChannel 4 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.4..4> CH4SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_STR_CH5SF  -----------------------------------
// SVD Line: 16094

//  <item> SFDITEM_FIELD__PWM3_STR_CH5SF
//    <name> CH5SF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E050) \nChannel 5 Status Flag\n0 : 0 = No channel event has occurred.\n1 : 1 = A channel event has occurred. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_STR ) </loc>
//      <o.5..5> CH5SF
//        <0=> 0: 0 = No channel event has occurred.
//        <1=> 1: 1 = A channel event has occurred.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_STR  ------------------------------------
// SVD Line: 15990

//  <rtree> SFDITEM_REG__PWM3_STR
//    <name> STR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E050) Status Register </i>
//    <loc> ( (unsigned int)((PWM3_STR >> 0) & 0xFFFFFFFF), ((PWM3_STR = (PWM3_STR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_STR_CH0SF </item>
//    <item> SFDITEM_FIELD__PWM3_STR_CH1SF </item>
//    <item> SFDITEM_FIELD__PWM3_STR_CH2SF </item>
//    <item> SFDITEM_FIELD__PWM3_STR_CH3SF </item>
//    <item> SFDITEM_FIELD__PWM3_STR_CH4SF </item>
//    <item> SFDITEM_FIELD__PWM3_STR_CH5SF </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_FUNCSEL  ------------------------------
// SVD Line: 16115

unsigned int PWM3_FUNCSEL __AT (0x4001E054);



// -----------------------------  Field Item: PWM3_FUNCSEL_PWMEN2  --------------------------------
// SVD Line: 16124

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_PWMEN2
//    <name> PWMEN2 </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E054) PWM Enhance function Enable </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.0..0> PWMEN2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FUNCSEL_INIT  ---------------------------------
// SVD Line: 16131

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_INIT
//    <name> INIT </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E054) Initialize The Channels Output </i>
//    <check> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.1..1> INIT
//    </check>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FUNCSEL_WPDIS  ---------------------------------
// SVD Line: 16138

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_WPDIS
//    <name> WPDIS </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E054) \nWrite Protection Enable Register\n0 : 0 = Write protection is enabled.\n1 : 1 = Write protection is disabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.2..2> WPDIS
//        <0=> 0: 0 = Write protection is enabled.
//        <1=> 1: 1 = Write protection is disabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_FUNCSEL_PWMSYNC  --------------------------------
// SVD Line: 16157

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_PWMSYNC
//    <name> PWMSYNC </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E054) \nPWM Synchronization Mode\n0 : 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.\n1 : 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.3..3> PWMSYNC
//        <0=> 0: 0 = No restrictions. Software and hardware triggers can be used by MOD, CnV, OUTMASK, and PWM counter synchronization.
//        <1=> 1: 1 = Software trigger can only be used by MOD and CnV synchronization, and hardware triggers can only be used by OUTMASK and PWM counter synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_FUNCSEL_CAPTEST  --------------------------------
// SVD Line: 16176

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_CAPTEST
//    <name> CAPTEST </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E054) \nCapture Test Mode Enable\n0 : 0 = Capture test mode is disabled.\n1 : 1 = Capture test mode is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.4..4> CAPTEST
//        <0=> 0: 0 = Capture test mode is disabled.
//        <1=> 1: 1 = Capture test mode is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_FUNCSEL_FAULTMODE  -------------------------------
// SVD Line: 16195

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_FAULTMODE
//    <name> FAULTMODE </name>
//    <rw> 
//    <i> [Bits 6..5] RW (@ 0x4001E054) \nFault Control Mode\n0 : 00 = Fault control is disabled for all channels.\n1 : 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.\n2 : 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.\n3 : 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.6..5> FAULTMODE
//        <0=> 0: 00 = Fault control is disabled for all channels.
//        <1=> 1: 01 = Fault control is enabled for even channels only (channels 0, 2, 4, and 6), and the selected mode is the manual fault clearing.
//        <2=> 2: 10 = Fault control is enabled for all channels, and the selected mode is the manual fault clearing.
//        <3=> 3: 11 = Fault control is enabled for all channels, and the selected mode is the automatic fault clearing.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_FUNCSEL_FAULTIE  --------------------------------
// SVD Line: 16224

//  <item> SFDITEM_FIELD__PWM3_FUNCSEL_FAULTIE
//    <name> FAULTIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001E054) \nFault Interrupt Enable\n0 : 0 = Fault control interrupt is disabled.\n1 : 1 = Fault control interrupt is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FUNCSEL ) </loc>
//      <o.7..7> FAULTIE
//        <0=> 0: 0 = Fault control interrupt is disabled.
//        <1=> 1: 1 = Fault control interrupt is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_FUNCSEL  ----------------------------------
// SVD Line: 16115

//  <rtree> SFDITEM_REG__PWM3_FUNCSEL
//    <name> FUNCSEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E054) PWM Features(Functions) Mode Selection Register </i>
//    <loc> ( (unsigned int)((PWM3_FUNCSEL >> 0) & 0xFFFFFFFF), ((PWM3_FUNCSEL = (PWM3_FUNCSEL & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_PWMEN2 </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_INIT </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_WPDIS </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_PWMSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_CAPTEST </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_FAULTMODE </item>
//    <item> SFDITEM_FIELD__PWM3_FUNCSEL_FAULTIE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_SYNC  --------------------------------
// SVD Line: 16246

unsigned int PWM3_SYNC __AT (0x4001E058);



// -----------------------------  Field Item: PWM3_SYNC_MINSYNCP  ---------------------------------
// SVD Line: 16255

//  <item> SFDITEM_FIELD__PWM3_SYNC_MINSYNCP
//    <name> MINSYNCP </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E058) \nMinimum Loading Point Enable\n0 : 0 = The minimum loading point is disabled.\n1 : 1 = The minimum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.0..0> MINSYNCP
//        <0=> 0: 0 = The minimum loading point is disabled.
//        <1=> 1: 1 = The minimum loading point is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNC_MAXSYNCP  ---------------------------------
// SVD Line: 16274

//  <item> SFDITEM_FIELD__PWM3_SYNC_MAXSYNCP
//    <name> MAXSYNCP </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E058) \nMaximum Loading Point Enable\n0 : 0 = The maximum loading point is disabled.\n1 : 1 = The maximum loading point is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.1..1> MAXSYNCP
//        <0=> 0: 0 = The maximum loading point is disabled.
//        <1=> 1: 1 = The maximum loading point is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNC_REINIT  ----------------------------------
// SVD Line: 16293

//  <item> SFDITEM_FIELD__PWM3_SYNC_REINIT
//    <name> REINIT </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E058) \nPWM Counter Reinitialization By Synchronization (PWM counter synchronization)\n0 : 0 = PWM counter continues to count normally.\n1 : 1 = PWM counter is updated with its initial value when the selected trigger is detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.2..2> REINIT
//        <0=> 0: 0 = PWM counter continues to count normally.
//        <1=> 1: 1 = PWM counter is updated with its initial value when the selected trigger is detected.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNC_OMSYNCP  ---------------------------------
// SVD Line: 16312

//  <item> SFDITEM_FIELD__PWM3_SYNC_OMSYNCP
//    <name> OMSYNCP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E058) \nOutput Mask Synchronization Point\n0 : 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.\n1 : 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.3..3> OMSYNCP
//        <0=> 0: 0 = OUTMASK register is updated with the value of its buffer in all rising edges of the system clock.
//        <1=> 1: 1 = OUTMASK register is updated with the value of its buffer only by the PWM synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNC_ACMPTRIG  ---------------------------------
// SVD Line: 16331

//  <item> SFDITEM_FIELD__PWM3_SYNC_ACMPTRIG
//    <name> ACMPTRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E058) \nPWM Synchronization Hardware Trigger 0\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.4..4> ACMPTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNC_PWM0TRIG  ---------------------------------
// SVD Line: 16350

//  <item> SFDITEM_FIELD__PWM3_SYNC_PWM0TRIG
//    <name> PWM0TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E058) \nPWM Synchronization Hardware Trigger 1\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.5..5> PWM0TRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNC_SWTRIG  ----------------------------------
// SVD Line: 16369

//  <item> SFDITEM_FIELD__PWM3_SYNC_SWTRIG
//    <name> SWTRIG </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E058) \nPWM Synchronization Hardware Trigger 2\n0 : 0 = Trigger is disabled.\n1 : 1 = Trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.6..6> SWTRIG
//        <0=> 0: 0 = Trigger is disabled.
//        <1=> 1: 1 = Trigger is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNC_SWSYNC  ----------------------------------
// SVD Line: 16388

//  <item> SFDITEM_FIELD__PWM3_SYNC_SWSYNC
//    <name> SWSYNC </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001E058) \nPWM Synchronization Software Trigger\n0 : 0 = Software trigger is not selected.\n1 : 1 = Software trigger is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNC ) </loc>
//      <o.7..7> SWSYNC
//        <0=> 0: 0 = Software trigger is not selected.
//        <1=> 1: 1 = Software trigger is selected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_SYNC  -----------------------------------
// SVD Line: 16246

//  <rtree> SFDITEM_REG__PWM3_SYNC
//    <name> SYNC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E058) Synchronization </i>
//    <loc> ( (unsigned int)((PWM3_SYNC >> 0) & 0xFFFFFFFF), ((PWM3_SYNC = (PWM3_SYNC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_SYNC_MINSYNCP </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_MAXSYNCP </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_REINIT </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_OMSYNCP </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_ACMPTRIG </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_PWM0TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_SWTRIG </item>
//    <item> SFDITEM_FIELD__PWM3_SYNC_SWSYNC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_OUTINIT  ------------------------------
// SVD Line: 16410

unsigned int PWM3_OUTINIT __AT (0x4001E05C);



// -----------------------------  Field Item: PWM3_OUTINIT_CH0OIV  --------------------------------
// SVD Line: 16419

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH0OIV
//    <name> CH0OIV </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E05C) \nChannel 0 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.0..0> CH0OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_OUTINIT_CH1OIV  --------------------------------
// SVD Line: 16438

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH1OIV
//    <name> CH1OIV </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E05C) \nChannel 1 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.1..1> CH1OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_OUTINIT_CH2OIV  --------------------------------
// SVD Line: 16457

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH2OIV
//    <name> CH2OIV </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E05C) \nChannel 2 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.2..2> CH2OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_OUTINIT_CH3OIV  --------------------------------
// SVD Line: 16476

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH3OIV
//    <name> CH3OIV </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E05C) \nChannel 3 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.3..3> CH3OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_OUTINIT_CH4OIV  --------------------------------
// SVD Line: 16495

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH4OIV
//    <name> CH4OIV </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E05C) \nChannel 4 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.4..4> CH4OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_OUTINIT_CH5OIV  --------------------------------
// SVD Line: 16514

//  <item> SFDITEM_FIELD__PWM3_OUTINIT_CH5OIV
//    <name> CH5OIV </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E05C) \nChannel 5 Output Initialization Value\n0 : 0 = The initialization value is 0.\n1 : 1 = The initialization value is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OUTINIT ) </loc>
//      <o.5..5> CH5OIV
//        <0=> 0: 0 = The initialization value is 0.
//        <1=> 1: 1 = The initialization value is 1.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_OUTINIT  ----------------------------------
// SVD Line: 16410

//  <rtree> SFDITEM_REG__PWM3_OUTINIT
//    <name> OUTINIT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E05C) Initial Value For Channels Output </i>
//    <loc> ( (unsigned int)((PWM3_OUTINIT >> 0) & 0xFFFFFFFF), ((PWM3_OUTINIT = (PWM3_OUTINIT & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH0OIV </item>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH1OIV </item>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH2OIV </item>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH3OIV </item>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH4OIV </item>
//    <item> SFDITEM_FIELD__PWM3_OUTINIT_CH5OIV </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_OMCR  --------------------------------
// SVD Line: 16536

unsigned int PWM3_OMCR __AT (0x4001E060);



// ------------------------------  Field Item: PWM3_OMCR_CH0OMEN  ---------------------------------
// SVD Line: 16545

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH0OMEN
//    <name> CH0OMEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E060) \nChannel 0 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.0..0> CH0OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_OMCR_CH1OMEN  ---------------------------------
// SVD Line: 16564

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH1OMEN
//    <name> CH1OMEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E060) \nChannel 1 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.1..1> CH1OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_OMCR_CH2OMEN  ---------------------------------
// SVD Line: 16583

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH2OMEN
//    <name> CH2OMEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E060) \nChannel 2 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.2..2> CH2OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_OMCR_CH3OMEN  ---------------------------------
// SVD Line: 16602

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH3OMEN
//    <name> CH3OMEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E060) \nChannel 3 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.3..3> CH3OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_OMCR_CH4OMEN  ---------------------------------
// SVD Line: 16621

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH4OMEN
//    <name> CH4OMEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E060) \nChannel 4 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.4..4> CH4OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_OMCR_CH5OMEN  ---------------------------------
// SVD Line: 16640

//  <item> SFDITEM_FIELD__PWM3_OMCR_CH5OMEN
//    <name> CH5OMEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E060) \nChannel 5 Output Mask\n0 : 0 = Channel output is not masked. It continues to operate normally.\n1 : 1 = Channel output is masked. It is forced to its inactive state. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_OMCR ) </loc>
//      <o.5..5> CH5OMEN
//        <0=> 0: 0 = Channel output is not masked. It continues to operate normally.
//        <1=> 1: 1 = Channel output is masked. It is forced to its inactive state.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_OMCR  -----------------------------------
// SVD Line: 16536

//  <rtree> SFDITEM_REG__PWM3_OMCR
//    <name> OMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E060) Output Mask Control Register </i>
//    <loc> ( (unsigned int)((PWM3_OMCR >> 0) & 0xFFFFFFFF), ((PWM3_OMCR = (PWM3_OMCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH0OMEN </item>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH1OMEN </item>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH2OMEN </item>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH3OMEN </item>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH4OMEN </item>
//    <item> SFDITEM_FIELD__PWM3_OMCR_CH5OMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_MODESEL  ------------------------------
// SVD Line: 16662

unsigned int PWM3_MODESEL __AT (0x4001E064);



// -------------------------  Field Item: PWM3_MODESEL_PAIR0COMBINEN  -----------------------------
// SVD Line: 16671

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0COMBINEN
//    <name> PAIR0COMBINEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E064) \nCombine Channels For Pair0\n0 : 0 = Channels 0 and 1 are independent.\n1 : 1 = Channels 0 and 1 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.0..0> PAIR0COMBINEN
//        <0=> 0: 0 = Channels 0 and 1 are independent.
//        <1=> 1: 1 = Channels 0 and 1 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR0COMPEN  ------------------------------
// SVD Line: 16690

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0COMPEN
//    <name> PAIR0COMPEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E064) \nComplement Channels for Pair0\n0 : 0 = The channel 1 output is the same as the channel 0 output.\n1 : 1 = The channel 1 output is the complement of the channel 0 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.1..1> PAIR0COMPEN
//        <0=> 0: 0 = The channel 1 output is the same as the channel 0 output.
//        <1=> 1: 1 = The channel 1 output is the complement of the channel 0 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR0DECAPEN  -----------------------------
// SVD Line: 16709

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DECAPEN
//    <name> PAIR0DECAPEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E064) \nDual Edge Capture Mode Enable for Pair0\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.2..2> PAIR0DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR0DECAP  ------------------------------
// SVD Line: 16728

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DECAP
//    <name> PAIR0DECAP </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E064) \nDual Edge Capture Mode Captures for Pair0\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.3..3> PAIR0DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR0DTEN  -------------------------------
// SVD Line: 16747

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DTEN
//    <name> PAIR0DTEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E064) \nDeadtime Enable for Pair0\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.4..4> PAIR0DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR0SYNCEN  ------------------------------
// SVD Line: 16766

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0SYNCEN
//    <name> PAIR0SYNCEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E064) \nSynchronization Enable for Pair0\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.5..5> PAIR0SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR0FAULTEN  -----------------------------
// SVD Line: 16785

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0FAULTEN
//    <name> PAIR0FAULTEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E064) \nFault Control Enable for Pair0\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.6..6> PAIR0FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM3_MODESEL_PAIR1COMBINEN  -----------------------------
// SVD Line: 16805

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1COMBINEN
//    <name> PAIR1COMBINEN </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001E064) \nCombine Channels For Pair1\n0 : 0 = Channels 2 and 3 are independent.\n1 : 1 = Channels 2 and 3 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.8..8> PAIR1COMBINEN
//        <0=> 0: 0 = Channels 2 and 3 are independent.
//        <1=> 1: 1 = Channels 2 and 3 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR1COMPEN  ------------------------------
// SVD Line: 16824

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1COMPEN
//    <name> PAIR1COMPEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001E064) \nComplement Of Channel (n) For Pair1\n0 : 0 = The channel 3 output is the same as the channel 2 output.\n1 : 1 = The channel 3 output is the complement of the channel 2 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.9..9> PAIR1COMPEN
//        <0=> 0: 0 = The channel 3 output is the same as the channel 2 output.
//        <1=> 1: 1 = The channel 3 output is the complement of the channel 2 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR1DECAPEN  -----------------------------
// SVD Line: 16843

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DECAPEN
//    <name> PAIR1DECAPEN </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001E064) \nDual Edge Capture Mode Enable For Pair1\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.10..10> PAIR1DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR1DECAP  ------------------------------
// SVD Line: 16862

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DECAP
//    <name> PAIR1DECAP </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001E064) \nDual Edge Capture Mode Captures For Pair1\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.11..11> PAIR1DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR1DTEN  -------------------------------
// SVD Line: 16881

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DTEN
//    <name> PAIR1DTEN </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001E064) \nDeadtime Enable For Pair1\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.12..12> PAIR1DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR1SYNCEN  ------------------------------
// SVD Line: 16900

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1SYNCEN
//    <name> PAIR1SYNCEN </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001E064) \nSynchronization Enable For Pair1\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.13..13> PAIR1SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR1FAULTEN  -----------------------------
// SVD Line: 16919

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1FAULTEN
//    <name> PAIR1FAULTEN </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4001E064) \nFault Control Enable For Pair1\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.14..14> PAIR1FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// -------------------------  Field Item: PWM3_MODESEL_PAIR2COMBINEN  -----------------------------
// SVD Line: 16939

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2COMBINEN
//    <name> PAIR2COMBINEN </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001E064) \nCombine Channels For Pair2\n0 : 0 = Channels 4 and 5 are independent.\n1 : 1 = Channels 4 and 5 are combined. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.16..16> PAIR2COMBINEN
//        <0=> 0: 0 = Channels 4 and 5 are independent.
//        <1=> 1: 1 = Channels 4 and 5 are combined.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR2COMPEN  ------------------------------
// SVD Line: 16958

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2COMPEN
//    <name> PAIR2COMPEN </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001E064) \nComplement Of Channel (n) For Pair2\n0 : 0 = The channel 5 output is the same as the channel 4 output.\n1 : 1 = The channel 5 output is the complement of the channel 4 output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.17..17> PAIR2COMPEN
//        <0=> 0: 0 = The channel 5 output is the same as the channel 4 output.
//        <1=> 1: 1 = The channel 5 output is the complement of the channel 4 output.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR2DECAPEN  -----------------------------
// SVD Line: 16977

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DECAPEN
//    <name> PAIR2DECAPEN </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001E064) \nDual Edge Capture Mode Enable For Pair2\n0 : 0 = The Dual Edge Capture mode in this pair of channels is disabled.\n1 : 1 = The Dual Edge Capture mode in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.18..18> PAIR2DECAPEN
//        <0=> 0: 0 = The Dual Edge Capture mode in this pair of channels is disabled.
//        <1=> 1: 1 = The Dual Edge Capture mode in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR2DECAP  ------------------------------
// SVD Line: 16996

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DECAP
//    <name> PAIR2DECAP </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4001E064) \nDual Edge Capture Mode Captures For Pair2\n0 : 0 = The dual edge captures are inactive.\n1 : 1 = The dual edge captures are active. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.19..19> PAIR2DECAP
//        <0=> 0: 0 = The dual edge captures are inactive.
//        <1=> 1: 1 = The dual edge captures are active.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_MODESEL_PAIR2DTEN  -------------------------------
// SVD Line: 17015

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DTEN
//    <name> PAIR2DTEN </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4001E064) \nDeadtime Enable For Pair2\n0 : 0 = The deadtime insertion in this pair of channels is disabled.\n1 : 1 = The deadtime insertion in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.20..20> PAIR2DTEN
//        <0=> 0: 0 = The deadtime insertion in this pair of channels is disabled.
//        <1=> 1: 1 = The deadtime insertion in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR2SYNCEN  ------------------------------
// SVD Line: 17034

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2SYNCEN
//    <name> PAIR2SYNCEN </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001E064) \nSynchronization Enable For Pair2\n0 : 0 = The PWM synchronization in this pair of channels is disabled.\n1 : 1 = The PWM synchronization in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.21..21> PAIR2SYNCEN
//        <0=> 0: 0 = The PWM synchronization in this pair of channels is disabled.
//        <1=> 1: 1 = The PWM synchronization in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_MODESEL_PAIR2FAULTEN  -----------------------------
// SVD Line: 17053

//  <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2FAULTEN
//    <name> PAIR2FAULTEN </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001E064) \nFault Control Enable For Pair2\n0 : 0 = The fault control in this pair of channels is disabled.\n1 : 1 = The fault control in this pair of channels is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_MODESEL ) </loc>
//      <o.22..22> PAIR2FAULTEN
//        <0=> 0: 0 = The fault control in this pair of channels is disabled.
//        <1=> 1: 1 = The fault control in this pair of channels is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_MODESEL  ----------------------------------
// SVD Line: 16662

//  <rtree> SFDITEM_REG__PWM3_MODESEL
//    <name> MODESEL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E064) PWM Function Mode Selection </i>
//    <loc> ( (unsigned int)((PWM3_MODESEL >> 0) & 0xFFFFFFFF), ((PWM3_MODESEL = (PWM3_MODESEL & ~(0x7F7F7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F7F7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0COMPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DECAP </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0DTEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR0FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1COMPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DECAP </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1DTEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR1FAULTEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2COMBINEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2COMPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DECAPEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DECAP </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2DTEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2SYNCEN </item>
//    <item> SFDITEM_FIELD__PWM3_MODESEL_PAIR2FAULTEN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_DTSET  -------------------------------
// SVD Line: 17074

unsigned int PWM3_DTSET __AT (0x4001E068);



// ------------------------------  Field Item: PWM3_DTSET_DTVAL  ----------------------------------
// SVD Line: 17083

//  <item> SFDITEM_FIELD__PWM3_DTSET_DTVAL
//    <name> DTVAL </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4001E068) Deadtime Value </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_DTSET >> 0) & 0x3F), ((PWM3_DTSET = (PWM3_DTSET & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM3_DTSET_DTPSC  ----------------------------------
// SVD Line: 17090

//  <item> SFDITEM_FIELD__PWM3_DTSET_DTPSC
//    <name> DTPSC </name>
//    <rw> 
//    <i> [Bits 7..6] RW (@ 0x4001E068) \nDeadtime Prescaler Control Value\n0 : 0x_0 = Divide the system clock by 1.\n1 : 0x_1 = Divide the system clock by 1.\n2 : 10 = Divide the system clock by 4.\n3 : 11 = Divide the system clock by 16. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_DTSET ) </loc>
//      <o.7..6> DTPSC
//        <0=> 0: 0x_0 = Divide the system clock by 1.
//        <1=> 1: 0x_1 = Divide the system clock by 1.
//        <2=> 2: 10 = Divide the system clock by 4.
//        <3=> 3: 11 = Divide the system clock by 16.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM3_DTSET  -----------------------------------
// SVD Line: 17074

//  <rtree> SFDITEM_REG__PWM3_DTSET
//    <name> DTSET </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E068) Deadtime Paramenters Setting Register </i>
//    <loc> ( (unsigned int)((PWM3_DTSET >> 0) & 0xFFFFFFFF), ((PWM3_DTSET = (PWM3_DTSET & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_DTSET_DTVAL </item>
//    <item> SFDITEM_FIELD__PWM3_DTSET_DTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_EXTTRIG  ------------------------------
// SVD Line: 17117

unsigned int PWM3_EXTTRIG __AT (0x4001E06C);



// ----------------------------  Field Item: PWM3_EXTTRIG_CH2TRIG  --------------------------------
// SVD Line: 17126

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH2TRIG
//    <name> CH2TRIG </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E06C) \nChannel 2 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.0..0> CH2TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_EXTTRIG_CH3TRIG  --------------------------------
// SVD Line: 17145

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH3TRIG
//    <name> CH3TRIG </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E06C) \nChannel 3 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.1..1> CH3TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_EXTTRIG_CH4TRIG  --------------------------------
// SVD Line: 17164

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH4TRIG
//    <name> CH4TRIG </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E06C) \nChannel 4 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.2..2> CH4TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_EXTTRIG_CH5TRIG  --------------------------------
// SVD Line: 17183

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH5TRIG
//    <name> CH5TRIG </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E06C) \nChannel 5 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.3..3> CH5TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_EXTTRIG_CH0TRIG  --------------------------------
// SVD Line: 17202

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH0TRIG
//    <name> CH0TRIG </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E06C) \nChannel 0 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.4..4> CH0TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_EXTTRIG_CH1TRIG  --------------------------------
// SVD Line: 17221

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH1TRIG
//    <name> CH1TRIG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E06C) \nChannel 1 Trigger Enable\n0 : 0 = The generation of the channel trigger is disabled.\n1 : 1 = The generation of the channel trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.5..5> CH1TRIG
//        <0=> 0: 0 = The generation of the channel trigger is disabled.
//        <1=> 1: 1 = The generation of the channel trigger is enabled.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_EXTTRIG_INITTRIGEN  ------------------------------
// SVD Line: 17240

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_INITTRIGEN
//    <name> INITTRIGEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E06C) \nInitialization Trigger Enable\n0 : 0 = The generation of initialization trigger is disabled.\n1 : 1 = The generation of initialization trigger is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.6..6> INITTRIGEN
//        <0=> 0: 0 = The generation of initialization trigger is disabled.
//        <1=> 1: 1 = The generation of initialization trigger is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_EXTTRIG_TRIGF  ---------------------------------
// SVD Line: 17259

//  <item> SFDITEM_FIELD__PWM3_EXTTRIG_TRIGF
//    <name> TRIGF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E06C) \nChannel Trigger Flag\n0 : 0 = No channel trigger was generated.\n1 : 1 = A channel trigger was generated. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_EXTTRIG ) </loc>
//      <o.7..7> TRIGF
//        <0=> 0: 0 = No channel trigger was generated.
//        <1=> 1: 1 = A channel trigger was generated.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_EXTTRIG  ----------------------------------
// SVD Line: 17117

//  <rtree> SFDITEM_REG__PWM3_EXTTRIG
//    <name> EXTTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E06C) PWM External Trigger </i>
//    <loc> ( (unsigned int)((PWM3_EXTTRIG >> 0) & 0xFFFFFFFF), ((PWM3_EXTTRIG = (PWM3_EXTTRIG & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH2TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH3TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH4TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH5TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH0TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_CH1TRIG </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_INITTRIGEN </item>
//    <item> SFDITEM_FIELD__PWM3_EXTTRIG_TRIGF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM3_CHOPOLCR  ------------------------------
// SVD Line: 17281

unsigned int PWM3_CHOPOLCR __AT (0x4001E070);



// ----------------------------  Field Item: PWM3_CHOPOLCR_CH0POL  --------------------------------
// SVD Line: 17290

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH0POL
//    <name> CH0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E070) \nChannel 0 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.0..0> CH0POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOPOLCR_CH1POL  --------------------------------
// SVD Line: 17309

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH1POL
//    <name> CH1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E070) \nChannel 1 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.1..1> CH1POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOPOLCR_CH2POL  --------------------------------
// SVD Line: 17328

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH2POL
//    <name> CH2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E070) \nChannel 2 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.2..2> CH2POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOPOLCR_CH3POL  --------------------------------
// SVD Line: 17347

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH3POL
//    <name> CH3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E070) \nChannel 3 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.3..3> CH3POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOPOLCR_CH4POL  --------------------------------
// SVD Line: 17366

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH4POL
//    <name> CH4POL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E070) \nChannel 4 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.4..4> CH4POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOPOLCR_CH5POL  --------------------------------
// SVD Line: 17385

//  <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH5POL
//    <name> CH5POL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E070) \nChannel 5 Polarity\n0 : 0 = The channel polarity is active high.\n1 : 1 = The channel polarity is active low. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOPOLCR ) </loc>
//      <o.5..5> CH5POL
//        <0=> 0: 0 = The channel polarity is active high.
//        <1=> 1: 1 = The channel polarity is active low.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_CHOPOLCR  ---------------------------------
// SVD Line: 17281

//  <rtree> SFDITEM_REG__PWM3_CHOPOLCR
//    <name> CHOPOLCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E070) Channels Output Polarity Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHOPOLCR >> 0) & 0xFFFFFFFF), ((PWM3_CHOPOLCR = (PWM3_CHOPOLCR & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH0POL </item>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH1POL </item>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH2POL </item>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH3POL </item>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH4POL </item>
//    <item> SFDITEM_FIELD__PWM3_CHOPOLCR_CH5POL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_FDSR  --------------------------------
// SVD Line: 17407

unsigned int PWM3_FDSR __AT (0x4001E074);



// -----------------------------  Field Item: PWM3_FDSR_FAULTDF0  ---------------------------------
// SVD Line: 17416

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF0
//    <name> FAULTDF0 </name>
//    <r> 
//    <i> [Bit 0] RO (@ 0x4001E074) \nFault Detection Flag 0\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.0..0> FAULTDF0
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FDSR_FAULTDF1  ---------------------------------
// SVD Line: 17435

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF1
//    <name> FAULTDF1 </name>
//    <r> 
//    <i> [Bit 1] RO (@ 0x4001E074) \nFault Detection Flag 1\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.1..1> FAULTDF1
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FDSR_FAULTDF2  ---------------------------------
// SVD Line: 17454

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF2
//    <name> FAULTDF2 </name>
//    <r> 
//    <i> [Bit 2] RO (@ 0x4001E074) \nFault Detection Flag 2\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.2..2> FAULTDF2
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FDSR_FAULTDF3  ---------------------------------
// SVD Line: 17473

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF3
//    <name> FAULTDF3 </name>
//    <r> 
//    <i> [Bit 3] RO (@ 0x4001E074) \nFault Detection Flag 3\n0 : 0 = No fault condition was detected at the fault input.\n1 : 1 = A fault condition was detected at the fault input. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.3..3> FAULTDF3
//        <0=> 0: 0 = No fault condition was detected at the fault input.
//        <1=> 1: 1 = A fault condition was detected at the fault input.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FDSR_FAULTIN  ---------------------------------
// SVD Line: 17493

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTIN
//    <name> FAULTIN </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x4001E074) \nFault Inputs\n0 : 0 = The logic OR of the enabled fault inputs is 0.\n1 : 1 = The logic OR of the enabled fault inputs is 1. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.5..5> FAULTIN
//        <0=> 0: 0 = The logic OR of the enabled fault inputs is 0.
//        <1=> 1: 1 = The logic OR of the enabled fault inputs is 1.
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_FDSR_WPEN  -----------------------------------
// SVD Line: 17512

//  <item> SFDITEM_FIELD__PWM3_FDSR_WPEN
//    <name> WPEN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E074) \nWrite Protection Enable\n0 : 0 = Write protection is disabled. Write protected bits can be written.\n1 : 1 = Write protection is enabled. Write protected bits cannot be written. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.6..6> WPEN
//        <0=> 0: 0 = Write protection is disabled. Write protected bits can be written.
//        <1=> 1: 1 = Write protection is enabled. Write protected bits cannot be written.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FDSR_FAULTDF  ---------------------------------
// SVD Line: 17531

//  <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF
//    <name> FAULTDF </name>
//    <r> 
//    <i> [Bit 7] RO (@ 0x4001E074) \nFault Detection Flag\n0 : 0 = No fault condition was detected.\n1 : 1 = A fault condition was detected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FDSR ) </loc>
//      <o.7..7> FAULTDF
//        <0=> 0: 0 = No fault condition was detected.
//        <1=> 1: 1 = A fault condition was detected.
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_FDSR  -----------------------------------
// SVD Line: 17407

//  <rtree> SFDITEM_REG__PWM3_FDSR
//    <name> FDSR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E074) Fault Detect Status Register </i>
//    <loc> ( (unsigned int)((PWM3_FDSR >> 0) & 0xFFFFFFFF), ((PWM3_FDSR = (PWM3_FDSR & ~(0x40UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x40) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF0 </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF1 </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF2 </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF3 </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTIN </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_WPEN </item>
//    <item> SFDITEM_FIELD__PWM3_FDSR_FAULTDF </item>
//  </rtree>
//  


// --------------------------  Register Item Address: PWM3_CAPFILTER  -----------------------------
// SVD Line: 17553

unsigned int PWM3_CAPFILTER __AT (0x4001E078);



// --------------------------  Field Item: PWM3_CAPFILTER_CH0CAPFVAL  -----------------------------
// SVD Line: 17562

//  <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH0CAPFVAL
//    <name> CH0CAPFVAL </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x4001E078) Channel 0 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CAPFILTER >> 0) & 0x1F), ((PWM3_CAPFILTER = (PWM3_CAPFILTER & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM3_CAPFILTER_CH1CAPFVAL  -----------------------------
// SVD Line: 17569

//  <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH1CAPFVAL
//    <name> CH1CAPFVAL </name>
//    <rw> 
//    <i> [Bits 9..5] RW (@ 0x4001E078) Channel 1 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CAPFILTER >> 5) & 0x1F), ((PWM3_CAPFILTER = (PWM3_CAPFILTER & ~(0x1FUL << 5 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 5 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM3_CAPFILTER_CH2CAPFVAL  -----------------------------
// SVD Line: 17576

//  <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH2CAPFVAL
//    <name> CH2CAPFVAL </name>
//    <rw> 
//    <i> [Bits 14..10] RW (@ 0x4001E078) Channel 2 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CAPFILTER >> 10) & 0x1F), ((PWM3_CAPFILTER = (PWM3_CAPFILTER & ~(0x1FUL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: PWM3_CAPFILTER_CH3CAPFVAL  -----------------------------
// SVD Line: 17583

//  <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH3CAPFVAL
//    <name> CH3CAPFVAL </name>
//    <rw> 
//    <i> [Bits 19..15] RW (@ 0x4001E078) Channel 3 Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CAPFILTER >> 15) & 0x1F), ((PWM3_CAPFILTER = (PWM3_CAPFILTER & ~(0x1FUL << 15 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 15 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: PWM3_CAPFILTER  ---------------------------------
// SVD Line: 17553

//  <rtree> SFDITEM_REG__PWM3_CAPFILTER
//    <name> CAPFILTER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E078) Input Capture Filter Control </i>
//    <loc> ( (unsigned int)((PWM3_CAPFILTER >> 0) & 0xFFFFFFFF), ((PWM3_CAPFILTER = (PWM3_CAPFILTER & ~(0xFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH0CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH1CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH2CAPFVAL </item>
//    <item> SFDITEM_FIELD__PWM3_CAPFILTER_CH3CAPFVAL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_FFAFER  -------------------------------
// SVD Line: 17593

unsigned int PWM3_FFAFER __AT (0x4001E07C);



// -----------------------------  Field Item: PWM3_FFAFER_FER0EN  ---------------------------------
// SVD Line: 17602

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FER0EN
//    <name> FER0EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E07C) \nFault Input 0 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.0..0> FER0EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FFAFER_FER1EN  ---------------------------------
// SVD Line: 17621

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FER1EN
//    <name> FER1EN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E07C) \nFault Input 1 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.1..1> FER1EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FFAFER_FER2EN  ---------------------------------
// SVD Line: 17640

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FER2EN
//    <name> FER2EN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E07C) \nFault Input 2 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.2..2> FER2EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FFAFER_FER3EN  ---------------------------------
// SVD Line: 17659

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FER3EN
//    <name> FER3EN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E07C) \nFault Input 3 Enable\n0 : 0 = Fault input is disabled.\n1 : 1 = Fault input is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.3..3> FER3EN
//        <0=> 0: 0 = Fault input is disabled.
//        <1=> 1: 1 = Fault input is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FFAFER_FF0EN  ---------------------------------
// SVD Line: 17678

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FF0EN
//    <name> FF0EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E07C) \nFault Input 0 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.4..4> FF0EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FFAFER_FF1EN  ---------------------------------
// SVD Line: 17697

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FF1EN
//    <name> FF1EN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E07C) \nFault Input 1 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.5..5> FF1EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FFAFER_FF2EN  ---------------------------------
// SVD Line: 17716

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FF2EN
//    <name> FF2EN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E07C) \nFault Input 2 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.6..6> FF2EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FFAFER_FF3EN  ---------------------------------
// SVD Line: 17735

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FF3EN
//    <name> FF3EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001E07C) \nFault Input 3 Filter Enable\n0 : 0 = Fault input filter is disabled.\n1 : 1 = Fault input filter is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FFAFER ) </loc>
//      <o.7..7> FF3EN
//        <0=> 0: 0 = Fault input filter is disabled.
//        <1=> 1: 1 = Fault input filter is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_FFAFER_FFVAL  ---------------------------------
// SVD Line: 17754

//  <item> SFDITEM_FIELD__PWM3_FFAFER_FFVAL
//    <name> FFVAL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x4001E07C) Fault Input Filter </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_FFAFER >> 8) & 0xF), ((PWM3_FFAFER = (PWM3_FFAFER & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: PWM3_FFAFER  ----------------------------------
// SVD Line: 17593

//  <rtree> SFDITEM_REG__PWM3_FFAFER
//    <name> FFAFER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E07C) Fault Filter and Fault Enable Register </i>
//    <loc> ( (unsigned int)((PWM3_FFAFER >> 0) & 0xFFFFFFFF), ((PWM3_FFAFER = (PWM3_FFAFER & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FER0EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FER1EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FER2EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FER3EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FF0EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FF1EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FF2EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FF3EN </item>
//    <item> SFDITEM_FIELD__PWM3_FFAFER_FFVAL </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: PWM3_QEI  --------------------------------
// SVD Line: 17763

unsigned int PWM3_QEI __AT (0x4001E080);



// -------------------------------  Field Item: PWM3_QEI_QEIEN  -----------------------------------
// SVD Line: 17772

//  <item> SFDITEM_FIELD__PWM3_QEI_QEIEN
//    <name> QEIEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.0..0> QEIEN
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_QEI_TOFDIR  ----------------------------------
// SVD Line: 17791

//  <item> SFDITEM_FIELD__PWM3_QEI_TOFDIR
//    <name> TOFDIR </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E080) \nTimer Overflow Direction in Quadrature Decoder Mode\n0 : 0 = TOF bit was set on the bottom of counting\n1 : 1 = TOF bit was set on the top of counting </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.1..1> TOFDIR
//        <0=> 0: 0 = TOF bit was set on the bottom of counting
//        <1=> 1: 1 = TOF bit was set on the top of counting
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_QEI_QUADIR  ----------------------------------
// SVD Line: 17810

//  <item> SFDITEM_FIELD__PWM3_QEI_QUADIR
//    <name> QUADIR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E080) \nQuadrature Decoder Mode Enable\n0 : 0 = Quadrature Decoder is Disable\n1 : 1 = Quadrature Decoder is Enable </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.2..2> QUADIR
//        <0=> 0: 0 = Quadrature Decoder is Disable
//        <1=> 1: 1 = Quadrature Decoder is Enable
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_QEI_QUADMODE  ---------------------------------
// SVD Line: 17829

//  <item> SFDITEM_FIELD__PWM3_QEI_QUADMODE
//    <name> QUADMODE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E080) \nQuadrature Decoder Mode\n0 : 0 = Phase A and phase B encoding mode.\n1 : 1 = Count and direction encoding mode </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.3..3> QUADMODE
//        <0=> 0: 0 = Phase A and phase B encoding mode.
//        <1=> 1: 1 = Count and direction encoding mode
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_QEI_PHBPOL  ----------------------------------
// SVD Line: 17848

//  <item> SFDITEM_FIELD__PWM3_QEI_PHBPOL
//    <name> PHBPOL </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E080) \nPhase B Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.4..4> PHBPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: PWM3_QEI_PHAPOL  ----------------------------------
// SVD Line: 17867

//  <item> SFDITEM_FIELD__PWM3_QEI_PHAPOL
//    <name> PHAPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E080) \nPhase A Input Polarity\n0 : 0 = Normal polarity\n1 : 1 = Inverted polarity </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.5..5> PHAPOL
//        <0=> 0: 0 = Normal polarity
//        <1=> 1: 1 = Inverted polarity
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_QEI_PHBFLTREN  ---------------------------------
// SVD Line: 17886

//  <item> SFDITEM_FIELD__PWM3_QEI_PHBFLTREN
//    <name> PHBFLTREN </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001E080) \nPhase B Input Filter Enable Register\n0 : 0 = Phase B input filter is disabled\n1 : 1 = Phase B input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.6..6> PHBFLTREN
//        <0=> 0: 0 = Phase B input filter is disabled
//        <1=> 1: 1 = Phase B input filter is enabled
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_QEI_PHAFLTREN  ---------------------------------
// SVD Line: 17905

//  <item> SFDITEM_FIELD__PWM3_QEI_PHAFLTREN
//    <name> PHAFLTREN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001E080) \nPhase A Input Filter Enable Register\n0 : 0 = Phase A input filter is disabled\n1 : 1 = Phase A input filter is enabled </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_QEI ) </loc>
//      <o.7..7> PHAFLTREN
//        <0=> 0: 0 = Phase A input filter is disabled
//        <1=> 1: 1 = Phase A input filter is enabled
//    </combo>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_QEI  ------------------------------------
// SVD Line: 17763

//  <rtree> SFDITEM_REG__PWM3_QEI
//    <name> QEI </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E080) Quadrature Encoder/Decoder Interface Configuration Register </i>
//    <loc> ( (unsigned int)((PWM3_QEI >> 0) & 0xFFFFFFFF), ((PWM3_QEI = (PWM3_QEI & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_QEI_QEIEN </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_TOFDIR </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_QUADIR </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_QUADMODE </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_PHBPOL </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_PHAPOL </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_PHBFLTREN </item>
//    <item> SFDITEM_FIELD__PWM3_QEI_PHAFLTREN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_CONF  --------------------------------
// SVD Line: 17926

unsigned int PWM3_CONF __AT (0x4001E084);



// -----------------------------  Field Item: PWM3_CONF_CNTOFNUM  ---------------------------------
// SVD Line: 17935

//  <item> SFDITEM_FIELD__PWM3_CONF_CNTOFNUM
//    <name> CNTOFNUM </name>
//    <rw> 
//    <i> [Bits 6..0] RW (@ 0x4001E084) Count Overflow Flag Number </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CONF >> 0) & 0x7F), ((PWM3_CONF = (PWM3_CONF & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM3_CONF_BDMMODE  ---------------------------------
// SVD Line: 17942

//  <item> SFDITEM_FIELD__PWM3_CONF_BDMMODE
//    <name> BDMMODE </name>
//    <rw> 
//    <i> [Bits 8..7] RW (@ 0x4001E084) Debug Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((PWM3_CONF >> 7) & 0x3), ((PWM3_CONF = (PWM3_CONF & ~(0x3UL << 7 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 7 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: PWM3_CONF_GTBEEN  ----------------------------------
// SVD Line: 17949

//  <item> SFDITEM_FIELD__PWM3_CONF_GTBEEN
//    <name> GTBEEN </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001E084) \nGlobal Time Base Enable\n0 : 0 = Use of an external global time base is disabled.\n1 : 1 = Use of an external global time base is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CONF ) </loc>
//      <o.9..9> GTBEEN
//        <0=> 0: 0 = Use of an external global time base is disabled.
//        <1=> 1: 1 = Use of an external global time base is enabled.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_CONF_GTBEOUT  ---------------------------------
// SVD Line: 17968

//  <item> SFDITEM_FIELD__PWM3_CONF_GTBEOUT
//    <name> GTBEOUT </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001E084) \nGlobal Time Base Output\n0 : 0 = A global time base signal generation is disabled.\n1 : 1 = A global time base signal generation is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CONF ) </loc>
//      <o.10..10> GTBEOUT
//        <0=> 0: 0 = A global time base signal generation is disabled.
//        <1=> 1: 1 = A global time base signal generation is enabled.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_CONF_EVENTPSC  ---------------------------------
// SVD Line: 17987

//  <item> SFDITEM_FIELD__PWM3_CONF_EVENTPSC
//    <name> EVENTPSC </name>
//    <rw> 
//    <i> [Bits 27..16] RW (@ 0x4001E084) PWM Channel Input Event Prescale Setting </i>
//    <edit> 
//      <loc> ( (unsigned short)((PWM3_CONF >> 16) & 0xFFF), ((PWM3_CONF = (PWM3_CONF & ~(0xFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: PWM3_CONF  -----------------------------------
// SVD Line: 17926

//  <rtree> SFDITEM_REG__PWM3_CONF
//    <name> CONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E084) Configuration </i>
//    <loc> ( (unsigned int)((PWM3_CONF >> 0) & 0xFFFFFFFF), ((PWM3_CONF = (PWM3_CONF & ~(0xFFF07FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF07FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CONF_CNTOFNUM </item>
//    <item> SFDITEM_FIELD__PWM3_CONF_BDMMODE </item>
//    <item> SFDITEM_FIELD__PWM3_CONF_GTBEEN </item>
//    <item> SFDITEM_FIELD__PWM3_CONF_GTBEOUT </item>
//    <item> SFDITEM_FIELD__PWM3_CONF_EVENTPSC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_FLTPOL  -------------------------------
// SVD Line: 17996

unsigned int PWM3_FLTPOL __AT (0x4001E088);



// -----------------------------  Field Item: PWM3_FLTPOL_FLT0POL  --------------------------------
// SVD Line: 18005

//  <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT0POL
//    <name> FLT0POL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E088) \nFault Input 0 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FLTPOL ) </loc>
//      <o.0..0> FLT0POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FLTPOL_FLT1POL  --------------------------------
// SVD Line: 18024

//  <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT1POL
//    <name> FLT1POL </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E088) \nFault Input 1 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FLTPOL ) </loc>
//      <o.1..1> FLT1POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FLTPOL_FLT2POL  --------------------------------
// SVD Line: 18043

//  <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT2POL
//    <name> FLT2POL </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E088) \nFault Input 2 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FLTPOL ) </loc>
//      <o.2..2> FLT2POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_FLTPOL_FLT3POL  --------------------------------
// SVD Line: 18062

//  <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT3POL
//    <name> FLT3POL </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E088) \nFault Input 3 Polarity\n0 : 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.\n1 : 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_FLTPOL ) </loc>
//      <o.3..3> FLT3POL
//        <0=> 0: 0 = The fault input polarity is active high. A 1 at the fault input indicates a fault.
//        <1=> 1: 1 = The fault input polarity is active low. A 0 at the fault input indicates a fault.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM3_FLTPOL  ----------------------------------
// SVD Line: 17996

//  <rtree> SFDITEM_REG__PWM3_FLTPOL
//    <name> FLTPOL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E088) PWM Fault Input Polarity </i>
//    <loc> ( (unsigned int)((PWM3_FLTPOL >> 0) & 0xFFFFFFFF), ((PWM3_FLTPOL = (PWM3_FLTPOL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT0POL </item>
//    <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT1POL </item>
//    <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT2POL </item>
//    <item> SFDITEM_FIELD__PWM3_FLTPOL_FLT3POL </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_SYNCONF  ------------------------------
// SVD Line: 18084

unsigned int PWM3_SYNCONF __AT (0x4001E08C);



// -------------------------  Field Item: PWM3_SYNCONF_HWTRIGMODESEL  -----------------------------
// SVD Line: 18093

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_HWTRIGMODESEL
//    <name> HWTRIGMODESEL </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E08C) \nHardware Trigger Mode\n0 : 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.\n1 : 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.0..0> HWTRIGMODESEL
//        <0=> 0: 0 = PWM clears the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//        <1=> 1: 1 = PWM does not clear the TRIGj bit when the hardware trigger j is detected, where j = 0, 1,2.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNCONF_CNTINC  --------------------------------
// SVD Line: 18113

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTINC
//    <name> CNTINC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E08C) \nCNTIN Register Synchronization\n0 : 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = CNTIN register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.2..2> CNTINC
//        <0=> 0: 0 = CNTIN register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = CNTIN register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNCONF_INVC  ---------------------------------
// SVD Line: 18133

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_INVC
//    <name> INVC </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E08C) \nINVCTRL Register Synchronization\n0 : 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = INVCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.4..4> INVC
//        <0=> 0: 0 = INVCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = INVCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: PWM3_SYNCONF_SWOC  ---------------------------------
// SVD Line: 18152

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_SWOC
//    <name> SWOC </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E08C) \nSWOCTRL Register Synchronization\n0 : 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.\n1 : 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.5..5> SWOC
//        <0=> 0: 0 = SWOCTRL register is updated with its buffer value at all rising edges of system clock.
//        <1=> 1: 1 = SWOCTRL register is updated with its buffer value by the PWM synchronization.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_SYNCONF_SYNCMODE  -------------------------------
// SVD Line: 18172

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_SYNCMODE
//    <name> SYNCMODE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001E08C) \nSynchronization Mode\n0 : 0 = Legacy PWM synchronization is selected.\n1 : 1 = Enhanced PWM synchronization is selected. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.7..7> SYNCMODE
//        <0=> 0: 0 = Legacy PWM synchronization is selected.
//        <1=> 1: 1 = Enhanced PWM synchronization is selected.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_CNTVSWSYNC  ------------------------------
// SVD Line: 18191

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTVSWSYNC
//    <name> CNTVSWSYNC </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001E08C) \nCNTVSWSYNC\n0 : 0 = The software trigger does not activate the PWM counter synchronization.\n1 : 1 = The software trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.8..8> CNTVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = The software trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_SYNCONF_PWMSVSWSYNC  ------------------------------
// SVD Line: 18210

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_PWMSVSWSYNC
//    <name> PWMSVSWSYNC </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001E08C) \nPWMSVSWSYNC\n0 : 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.9..9> PWMSVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = The software trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_OMVSWSYNC  -------------------------------
// SVD Line: 18229

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_OMVSWSYNC
//    <name> OMVSWSYNC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001E08C) \nOMVSWSYNC\n0 : 0 = The software trigger does not activate the OUTMASK register synchronization.\n1 : 1 = The software trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.10..10> OMVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = The software trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_INVSWSYNC  -------------------------------
// SVD Line: 18248

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_INVSWSYNC
//    <name> INVSWSYNC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001E08C) \nINVSWSYNC\n0 : 0 = The software trigger does not activate the INVCTRL register synchronization.\n1 : 1 = The software trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.11..11> INVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_SWVSWSYNC  -------------------------------
// SVD Line: 18267

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_SWVSWSYNC
//    <name> SWVSWSYNC </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001E08C) \nSWVSWSYNC\n0 : 0 = The software trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = The software trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.12..12> SWVSWSYNC
//        <0=> 0: 0 = The software trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = The software trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_CNTVHWSYNC  ------------------------------
// SVD Line: 18287

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTVHWSYNC
//    <name> CNTVHWSYNC </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x4001E08C) \nCNTVHWSYNC\n0 : 0 = A hardware trigger does not activate the PWM counter synchronization.\n1 : 1 = A hardware trigger activates the PWM counter synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.16..16> CNTVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the PWM counter synchronization.
//        <1=> 1: 1 = A hardware trigger activates the PWM counter synchronization.
//    </combo>
//  </item>
//  


// --------------------------  Field Item: PWM3_SYNCONF_PWMSVHWSYNC  ------------------------------
// SVD Line: 18306

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_PWMSVHWSYNC
//    <name> PWMSVHWSYNC </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x4001E08C) \nPWMSVHWSYNC\n0 : 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.\n1 : 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.17..17> PWMSVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization.
//        <1=> 1: 1 = A hardware trigger activates MOD, CNTIN, and CV registers synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_OMVHWSYNC  -------------------------------
// SVD Line: 18325

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_OMVHWSYNC
//    <name> OMVHWSYNC </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x4001E08C) \nOMVHWSYNC\n0 : 0 = A hardware trigger does not activate the OUTMASK register synchronization.\n1 : 1 = A hardware trigger activates the OUTMASK register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.18..18> OMVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the OUTMASK register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the OUTMASK register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_INVHWSYNC  -------------------------------
// SVD Line: 18344

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_INVHWSYNC
//    <name> INVHWSYNC </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x4001E08C) \nINVHWSYNC\n0 : 0 = A hardware trigger does not activate the INVCTRL register synchronization.\n1 : 1 = A hardware trigger activates the INVCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.19..19> INVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the INVCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the INVCTRL register synchronization.
//    </combo>
//  </item>
//  


// ---------------------------  Field Item: PWM3_SYNCONF_SWVHWSYNC  -------------------------------
// SVD Line: 18363

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_SWVHWSYNC
//    <name> SWVHWSYNC </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x4001E08C) \nSWVHWSYNC\n0 : 0 = A hardware trigger does not activate the SWOCTRL register synchronization.\n1 : 1 = A hardware trigger activates the SWOCTRL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.20..20> SWVHWSYNC
//        <0=> 0: 0 = A hardware trigger does not activate the SWOCTRL register synchronization.
//        <1=> 1: 1 = A hardware trigger activates the SWOCTRL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNCONF_SWPOL  ---------------------------------
// SVD Line: 18382

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_SWPOL
//    <name> SWPOL </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x4001E08C) \nChannel POL synchronization is activeated by a softwaretrigger\n0 : 0 = The software trigger does not activate the POL register synchronization.\n1 : 1 = The software trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.21..21> SWPOL
//        <0=> 0: 0 = The software trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = The software trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: PWM3_SYNCONF_HWPOL  ---------------------------------
// SVD Line: 18401

//  <item> SFDITEM_FIELD__PWM3_SYNCONF_HWPOL
//    <name> HWPOL </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x4001E08C) \nChannel POL synchronization is activeated by a hardwaretrigger\n0 : 0 = The hardware trigger does not activate the POL register synchronization.\n1 : 1 = >The hardware trigger activates POL register synchronization. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_SYNCONF ) </loc>
//      <o.22..22> HWPOL
//        <0=> 0: 0 = The hardware trigger does not activate the POL register synchronization.
//        <1=> 1: 1 = >The hardware trigger activates POL register synchronization.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_SYNCONF  ----------------------------------
// SVD Line: 18084

//  <rtree> SFDITEM_REG__PWM3_SYNCONF
//    <name> SYNCONF </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E08C) Synchronization Configuration </i>
//    <loc> ( (unsigned int)((PWM3_SYNCONF >> 0) & 0xFFFFFFFF), ((PWM3_SYNCONF = (PWM3_SYNCONF & ~(0x7F1FB5UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F1FB5) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_HWTRIGMODESEL </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTINC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_INVC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_SWOC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_SYNCMODE </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_PWMSVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_OMVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_INVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_SWVSWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_CNTVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_PWMSVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_OMVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_INVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_SWVHWSYNC </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_SWPOL </item>
//    <item> SFDITEM_FIELD__PWM3_SYNCONF_HWPOL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: PWM3_INVCR  -------------------------------
// SVD Line: 18422

unsigned int PWM3_INVCR __AT (0x4001E090);



// ----------------------------  Field Item: PWM3_INVCR_PAIR0INVEN  -------------------------------
// SVD Line: 18431

//  <item> SFDITEM_FIELD__PWM3_INVCR_PAIR0INVEN
//    <name> PAIR0INVEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E090) \nPair Channels 0 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INVCR ) </loc>
//      <o.0..0> PAIR0INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_INVCR_PAIR1INVEN  -------------------------------
// SVD Line: 18450

//  <item> SFDITEM_FIELD__PWM3_INVCR_PAIR1INVEN
//    <name> PAIR1INVEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E090) \nPair Channels 1 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INVCR ) </loc>
//      <o.1..1> PAIR1INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_INVCR_PAIR2INVEN  -------------------------------
// SVD Line: 18469

//  <item> SFDITEM_FIELD__PWM3_INVCR_PAIR2INVEN
//    <name> PAIR2INVEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E090) \nPair Channels 2 Inverting Enable\n0 : 0 = Inverting is disabled.\n1 : 1 = Inverting is enabled. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_INVCR ) </loc>
//      <o.2..2> PAIR2INVEN
//        <0=> 0: 0 = Inverting is disabled.
//        <1=> 1: 1 = Inverting is enabled.
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: PWM3_INVCR  -----------------------------------
// SVD Line: 18422

//  <rtree> SFDITEM_REG__PWM3_INVCR
//    <name> INVCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E090) PWM Inverse Control Register </i>
//    <loc> ( (unsigned int)((PWM3_INVCR >> 0) & 0xFFFFFFFF), ((PWM3_INVCR = (PWM3_INVCR & ~(0x7UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_INVCR_PAIR0INVEN </item>
//    <item> SFDITEM_FIELD__PWM3_INVCR_PAIR1INVEN </item>
//    <item> SFDITEM_FIELD__PWM3_INVCR_PAIR2INVEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: PWM3_CHOSWCR  ------------------------------
// SVD Line: 18490

unsigned int PWM3_CHOSWCR __AT (0x4001E094);



// ----------------------------  Field Item: PWM3_CHOSWCR_CH0SWEN  --------------------------------
// SVD Line: 18499

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH0SWEN
//    <name> CH0SWEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001E094) \nChannel 0 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.0..0> CH0SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH1SWEN  --------------------------------
// SVD Line: 18518

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH1SWEN
//    <name> CH1SWEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001E094) \nChannel 1 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.1..1> CH1SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH2SWEN  --------------------------------
// SVD Line: 18537

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH2SWEN
//    <name> CH2SWEN </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001E094) \nChannel 2 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.2..2> CH2SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH3SWEN  --------------------------------
// SVD Line: 18556

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH3SWEN
//    <name> CH3SWEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001E094) \nChannel 3 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.3..3> CH3SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH4SWEN  --------------------------------
// SVD Line: 18575

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH4SWEN
//    <name> CH4SWEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001E094) \nChannel 4 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.4..4> CH4SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH5SWEN  --------------------------------
// SVD Line: 18594

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH5SWEN
//    <name> CH5SWEN </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001E094) \nChannel 5 Software Output Control Enable\n0 : 0 = The channel output is not affected by software output control.\n1 : 1 = The channel output is affected by software output control. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.5..5> CH5SWEN
//        <0=> 0: 0 = The channel output is not affected by software output control.
//        <1=> 1: 1 = The channel output is affected by software output control.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH0SWCV  --------------------------------
// SVD Line: 18613

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH0SWCV
//    <name> CH0SWCV </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4001E094) \nChannel 0 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.8..8> CH0SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH1SWCV  --------------------------------
// SVD Line: 18632

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH1SWCV
//    <name> CH1SWCV </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4001E094) \nChannel 1 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.9..9> CH1SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH2SWCV  --------------------------------
// SVD Line: 18651

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH2SWCV
//    <name> CH2SWCV </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x4001E094) \nChannel 2 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.10..10> CH2SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH3SWCV  --------------------------------
// SVD Line: 18670

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH3SWCV
//    <name> CH3SWCV </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4001E094) \nChannel 3 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.11..11> CH3SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH4SWCV  --------------------------------
// SVD Line: 18689

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH4SWCV
//    <name> CH4SWCV </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4001E094) \nChannel 4 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.12..12> CH4SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: PWM3_CHOSWCR_CH5SWCV  --------------------------------
// SVD Line: 18708

//  <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH5SWCV
//    <name> CH5SWCV </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4001E094) \nChannel 5 Software Output Control Value\n0 : 0 = The software output control forces 0 to the channel output.\n1 : 1 = The software output control forces 1 to the channel output. </i>
//    <combo> 
//      <loc> ( (unsigned int) PWM3_CHOSWCR ) </loc>
//      <o.13..13> CH5SWCV
//        <0=> 0: 0 = The software output control forces 0 to the channel output.
//        <1=> 1: 1 = The software output control forces 1 to the channel output.
//    </combo>
//  </item>
//  


// ------------------------------  Register RTree: PWM3_CHOSWCR  ----------------------------------
// SVD Line: 18490

//  <rtree> SFDITEM_REG__PWM3_CHOSWCR
//    <name> CHOSWCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001E094) PWM CHannel Software Output Control Register </i>
//    <loc> ( (unsigned int)((PWM3_CHOSWCR >> 0) & 0xFFFFFFFF), ((PWM3_CHOSWCR = (PWM3_CHOSWCR & ~(0x3F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH0SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH1SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH2SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH3SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH4SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH5SWEN </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH0SWCV </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH1SWCV </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH2SWCV </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH3SWCV </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH4SWCV </item>
//    <item> SFDITEM_FIELD__PWM3_CHOSWCR_CH5SWCV </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: PWM3  -------------------------------------
// SVD Line: 15710

//  <view> PWM3
//    <name> PWM3 </name>
//    <item> SFDITEM_REG__PWM3_INIT </item>
//    <item> SFDITEM_REG__PWM3_CNT </item>
//    <item> SFDITEM_REG__PWM3_MCVR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH0SCR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH1SCR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH2SCR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH3SCR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH4SCR </item>
//    <item> SFDITEM_REG__PWM3_CHSCR_CHSCR_CH5SCR </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH0V </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH1V </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH2V </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH3V </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH4V </item>
//    <item> SFDITEM_REG__PWM3_CHV_CHV_CH5V </item>
//    <item> SFDITEM_REG__PWM3_CNTIN </item>
//    <item> SFDITEM_REG__PWM3_STR </item>
//    <item> SFDITEM_REG__PWM3_FUNCSEL </item>
//    <item> SFDITEM_REG__PWM3_SYNC </item>
//    <item> SFDITEM_REG__PWM3_OUTINIT </item>
//    <item> SFDITEM_REG__PWM3_OMCR </item>
//    <item> SFDITEM_REG__PWM3_MODESEL </item>
//    <item> SFDITEM_REG__PWM3_DTSET </item>
//    <item> SFDITEM_REG__PWM3_EXTTRIG </item>
//    <item> SFDITEM_REG__PWM3_CHOPOLCR </item>
//    <item> SFDITEM_REG__PWM3_FDSR </item>
//    <item> SFDITEM_REG__PWM3_CAPFILTER </item>
//    <item> SFDITEM_REG__PWM3_FFAFER </item>
//    <item> SFDITEM_REG__PWM3_QEI </item>
//    <item> SFDITEM_REG__PWM3_CONF </item>
//    <item> SFDITEM_REG__PWM3_FLTPOL </item>
//    <item> SFDITEM_REG__PWM3_SYNCONF </item>
//    <item> SFDITEM_REG__PWM3_INVCR </item>
//    <item> SFDITEM_REG__PWM3_CHOSWCR </item>
//  </view>
//  


// ---------------------------  Register Item Address: CTU_CONFIG1  -------------------------------
// SVD Line: 18743

unsigned int CTU_CONFIG1 __AT (0x40016000);



// ------------------------------  Field Item: CTU_CONFIG1_ACTRG  ---------------------------------
// SVD Line: 18752

//  <item> SFDITEM_FIELD__CTU_CONFIG1_ACTRG
//    <name> ACTRG </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40016000) \nACMP Trigger PWM2 Selection\n0 : 0 = ACMP0 Output Trigger PWM\n1 : 1 = ACMP1 Output Trigger PWM </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.5..5> ACTRG
//        <0=> 0: 0 = ACMP0 Output Trigger PWM
//        <1=> 1: 1 = ACMP1 Output Trigger PWM
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_RXDFE  ---------------------------------
// SVD Line: 18771

//  <item> SFDITEM_FIELD__CTU_CONFIG1_RXDFE
//    <name> RXDFE </name>
//    <rw> 
//    <i> [Bits 9..8] RW (@ 0x40016000) \nUART1 RxD filter Selection\n0 : 00 = RXD1 input signal is connected to UART1 modulate directly\n1 : 01 = RXD1 input signal is filtered by ACMP0, then injected to UART1\n2 : 10 = RXD1 input signal is filtered by ACMP1, then injected to UART1\n3 : 11 = Not Defined </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.9..8> RXDFE
//        <0=> 0: 00 = RXD1 input signal is connected to UART1 modulate directly
//        <1=> 1: 01 = RXD1 input signal is filtered by ACMP0, then injected to UART1
//        <2=> 2: 10 = RXD1 input signal is filtered by ACMP1, then injected to UART1
//        <3=> 3: 11 = Not Defined
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_RTCC  ----------------------------------
// SVD Line: 18800

//  <item> SFDITEM_FIELD__CTU_CONFIG1_RTCC
//    <name> RTCC </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40016000) \nReal-Time Counter Capture\n0 : 0 = RTC Overflow is not connected to PWM1 Channel 1\n1 : 1 = RTC overflow is connected to PWM1 Channel 1 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.10..10> RTCC
//        <0=> 0: 0 = RTC Overflow is not connected to PWM1 Channel 1
//        <1=> 1: 1 = RTC overflow is connected to PWM1 Channel 1
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_ACIC  ----------------------------------
// SVD Line: 18819

//  <item> SFDITEM_FIELD__CTU_CONFIG1_ACIC
//    <name> ACIC </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40016000) \nAnalog Comparator to Input Capture Enable\n0 : 0 = ACMP0 Output is not connected to PWM1 Channel0\n1 : 1 = ACMP1 Output is connected to PWM1 Channel0 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.11..11> ACIC
//        <0=> 0: 0 = ACMP0 Output is not connected to PWM1 Channel0
//        <1=> 1: 1 = ACMP1 Output is connected to PWM1 Channel0
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_RXDCE  ---------------------------------
// SVD Line: 18838

//  <item> SFDITEM_FIELD__CTU_CONFIG1_RXDCE
//    <name> RXDCE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40016000) \nUART0_RX Capture Selection\n0 : 0 = UART1_RX input connect to UART1 Only\n1 : 1 = UART1_RX input connected to PWM0 Channel 1 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.12..12> RXDCE
//        <0=> 0: 0 = UART1_RX input connect to UART1 Only
//        <1=> 1: 1 = UART1_RX input connected to PWM0 Channel 1
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CTU_CONFIG1_PWMSYNC  --------------------------------
// SVD Line: 18857

//  <item> SFDITEM_FIELD__CTU_CONFIG1_PWMSYNC
//    <name> PWMSYNC </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40016000) \nPWM SW Synchronization Selection\n0 : 0 = No Synchronization triggered\n1 : 1 = Generate PWM Synchronization to trigger PWM Modules </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.14..14> PWMSYNC
//        <0=> 0: 0 = No Synchronization triggered
//        <1=> 1: 1 = Generate PWM Synchronization to trigger PWM Modules
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_TXDME  ---------------------------------
// SVD Line: 18876

//  <item> SFDITEM_FIELD__CTU_CONFIG1_TXDME
//    <name> TXDME </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40016000) \nUART1 TX Modulation Selection\n0 : 0 = UART1_TX is connected to PIN out directly\n1 : 1 = UART1_TX is modulated by PWM0 Channel 0 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.15..15> TXDME
//        <0=> 0: 0 = UART1_TX is connected to PIN out directly
//        <1=> 1: 1 = UART1_TX is modulated by PWM0 Channel 0
//    </combo>
//  </item>
//  


// -------------------------------  Field Item: CTU_CONFIG1_CLK  ----------------------------------
// SVD Line: 18895

//  <item> SFDITEM_FIELD__CTU_CONFIG1_CLK
//    <name> CLK </name>
//    <rw> 
//    <i> [Bits 18..16] RW (@ 0x40016000) \nBUS Clock Output Selection\n0 : 000 = BUS Clock\n1 : 001 = Bus Divided by 2\n2 : 010 = Bus Divided by 4\n3 : 011 = Bus Divided by 8\n4 : 100 = Bus Divided by 16\n5 : 101 = Bus Divided by 32\n6 : 110 = Bus Divided by 64\n7 : 111 = Bus Divided by 128 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.18..16> CLK
//        <0=> 0: 000 = BUS Clock
//        <1=> 1: 001 = Bus Divided by 2
//        <2=> 2: 010 = Bus Divided by 4
//        <3=> 3: 011 = Bus Divided by 8
//        <4=> 4: 100 = Bus Divided by 16
//        <5=> 5: 101 = Bus Divided by 32
//        <6=> 6: 110 = Bus Divided by 64
//        <7=> 7: 111 = Bus Divided by 128
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CTU_CONFIG1_ADHWT1  ---------------------------------
// SVD Line: 18944

//  <item> SFDITEM_FIELD__CTU_CONFIG1_ADHWT1
//    <name> ADHWT1 </name>
//    <rw> 
//    <i> [Bits 22..20] RW (@ 0x40016000) \nADC Hardware Trigger Source for regular group\n0 : 000 = RTC Overflow as ADC hardware Trigger\n1 : 001 = PWM0 as ADC Hardware Trigger\n2 : 010 = PWM2 Init Trigger with 8-bit programmable counter delay\n3 : 011 = PWM2 Match Trigger with 8-bit programmable counter delay\n4 : 100 = Timer Channel0 overflow as ADC Hardware Trigger\n5 : 101 = Timer Channel1 overflow as ADC hardware Trigger\n6 : 110 = ACMP0 Out as ADC Hardware Trigger\n7 : 111 = ACMP1 Out as ADC Hardware Trigger </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.22..20> ADHWT1
//        <0=> 0: 000 = RTC Overflow as ADC hardware Trigger
//        <1=> 1: 001 = PWM0 as ADC Hardware Trigger
//        <2=> 2: 010 = PWM2 Init Trigger with 8-bit programmable counter delay
//        <3=> 3: 011 = PWM2 Match Trigger with 8-bit programmable counter delay
//        <4=> 4: 100 = Timer Channel0 overflow as ADC Hardware Trigger
//        <5=> 5: 101 = Timer Channel1 overflow as ADC hardware Trigger
//        <6=> 6: 110 = ACMP0 Out as ADC Hardware Trigger
//        <7=> 7: 111 = ACMP1 Out as ADC Hardware Trigger
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CTU_CONFIG1_DLYACT  ---------------------------------
// SVD Line: 18993

//  <item> SFDITEM_FIELD__CTU_CONFIG1_DLYACT
//    <name> DLYACT </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40016000) \nTrigger Delay Active\n0 : 0 = Delay is inactive\n1 : 1 = Delay is active </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG1 ) </loc>
//      <o.23..23> DLYACT
//        <0=> 0: 0 = Delay is inactive
//        <1=> 1: 1 = Delay is active
//    </combo>
//  </item>
//  


// ------------------------------  Field Item: CTU_CONFIG1_DELAY  ---------------------------------
// SVD Line: 19012

//  <item> SFDITEM_FIELD__CTU_CONFIG1_DELAY
//    <name> DELAY </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40016000) Trigger Delay Counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((CTU_CONFIG1 >> 24) & 0xFF), ((CTU_CONFIG1 = (CTU_CONFIG1 & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CTU_CONFIG1  ----------------------------------
// SVD Line: 18743

//  <rtree> SFDITEM_REG__CTU_CONFIG1
//    <name> CONFIG1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40016000) CTU Configuration Register 1 </i>
//    <loc> ( (unsigned int)((CTU_CONFIG1 >> 0) & 0xFFFFFFFF), ((CTU_CONFIG1 = (CTU_CONFIG1 & ~(0xFFF7DF20UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF7DF20) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_ACTRG </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_RXDFE </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_RTCC </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_ACIC </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_RXDCE </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_PWMSYNC </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_TXDME </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_CLK </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_ADHWT1 </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_DLYACT </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG1_DELAY </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CTU_CONFIG2  -------------------------------
// SVD Line: 19021

unsigned int CTU_CONFIG2 __AT (0x40016004);



// -----------------------------  Field Item: CTU_CONFIG2_ACPWTS  ---------------------------------
// SVD Line: 19030

//  <item> SFDITEM_FIELD__CTU_CONFIG2_ACPWTS
//    <name> ACPWTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40016004) \nPWDT ACMP_OUT Select\n0 : 0 = ACMP1_OUT is Connected to PWDT_IN3\n1 : 1 = ACMP0_OUT is Connected to PWDT_IN3 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG2 ) </loc>
//      <o.3..3> ACPWTS
//        <0=> 0: 0 = ACMP1_OUT is Connected to PWDT_IN3
//        <1=> 1: 1 = ACMP0_OUT is Connected to PWDT_IN3
//    </combo>
//  </item>
//  


// ----------------------------  Field Item: CTU_CONFIG2_UARTPWDTS  -------------------------------
// SVD Line: 19049

//  <item> SFDITEM_FIELD__CTU_CONFIG2_UARTPWDTS
//    <name> UARTPWDTS </name>
//    <rw> 
//    <i> [Bits 5..4] RW (@ 0x40016004) \nPWDT UART RX Select\n0 : 00 = UART0 RX is connected to PWDT_IN3\n1 : 01 = UART1 RX is connected to PWDT_IN3\n2 : 10 = UART2 RX is connected to PWDT_IN3\n3 : 11 = ACMP_OUT is Connected to PWTIN3 </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG2 ) </loc>
//      <o.5..4> UARTPWDTS
//        <0=> 0: 00 = UART0 RX is connected to PWDT_IN3
//        <1=> 1: 01 = UART1 RX is connected to PWDT_IN3
//        <2=> 2: 10 = UART2 RX is connected to PWDT_IN3
//        <3=> 3: 11 = ACMP_OUT is Connected to PWTIN3
//    </combo>
//  </item>
//  


// -----------------------------  Field Item: CTU_CONFIG2_ADHWT2  ---------------------------------
// SVD Line: 19078

//  <item> SFDITEM_FIELD__CTU_CONFIG2_ADHWT2
//    <name> ADHWT2 </name>
//    <rw> 
//    <i> [Bits 8..6] RW (@ 0x40016004) \nADC Hardware Trigger Source for injection group\n0 : 000 = RTC Overflow as the ADC hardware trigger\n1 : 001 = PWM0 as the ADC hardware trigger\n2 : 010 = PWM2 init trigger with 8-bit programmable count delay as ADC hardware trigger\n3 : 011 = PWM2 match trigger with 8-bit programmable count delay as ADC hardware trigger\n4 : 100 = Timer Channel0 overflow as the ADC hardware trigger\n5 : 101 = Timer Channel1 overflow as the ADC hardware trigger\n6 : 110 = ACMP0 output as the ADC hardware trigger\n7 : 111 = ACMP1 output as the ADC hardware trigger </i>
//    <combo> 
//      <loc> ( (unsigned int) CTU_CONFIG2 ) </loc>
//      <o.8..6> ADHWT2
//        <0=> 0: 000 = RTC Overflow as the ADC hardware trigger
//        <1=> 1: 001 = PWM0 as the ADC hardware trigger
//        <2=> 2: 010 = PWM2 init trigger with 8-bit programmable count delay as ADC hardware trigger
//        <3=> 3: 011 = PWM2 match trigger with 8-bit programmable count delay as ADC hardware trigger
//        <4=> 4: 100 = Timer Channel0 overflow as the ADC hardware trigger
//        <5=> 5: 101 = Timer Channel1 overflow as the ADC hardware trigger
//        <6=> 6: 110 = ACMP0 output as the ADC hardware trigger
//        <7=> 7: 111 = ACMP1 output as the ADC hardware trigger
//    </combo>
//  </item>
//  


// -------------------------------  Register RTree: CTU_CONFIG2  ----------------------------------
// SVD Line: 19021

//  <rtree> SFDITEM_REG__CTU_CONFIG2
//    <name> CONFIG2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40016004) CTU Configuration Register 2 </i>
//    <loc> ( (unsigned int)((CTU_CONFIG2 >> 0) & 0xFFFFFFFF), ((CTU_CONFIG2 = (CTU_CONFIG2 & ~(0x1F8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CTU_CONFIG2_ACPWTS </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG2_UARTPWDTS </item>
//    <item> SFDITEM_FIELD__CTU_CONFIG2_ADHWT2 </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CTU  --------------------------------------
// SVD Line: 18732

//  <view> CTU
//    <name> CTU </name>
//    <item> SFDITEM_REG__CTU_CONFIG1 </item>
//    <item> SFDITEM_REG__CTU_CONFIG2 </item>
//  </view>
//  


// ----------------------------  Register Item Address: uart1_RBR  --------------------------------
// SVD Line: 19147

unsigned int uart1_RBR __AT (0x40018000);



// ------------------------------  Field Item: uart1_RBR_RBR_THR  ---------------------------------
// SVD Line: 19156

//  <item> SFDITEM_FIELD__uart1_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_RBR >> 0) & 0xFF), ((uart1_RBR = (uart1_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: uart1_RBR  -----------------------------------
// SVD Line: 19147

//  <rtree> SFDITEM_REG__uart1_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((uart1_RBR >> 0) & 0xFFFFFFFF), ((uart1_RBR = (uart1_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: uart1_DIV_L  -------------------------------
// SVD Line: 19165

unsigned int uart1_DIV_L __AT (0x40018004);



// ------------------------------  Field Item: uart1_DIV_L_DIV_L  ---------------------------------
// SVD Line: 19174

//  <item> SFDITEM_FIELD__uart1_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_DIV_L >> 0) & 0xFF), ((uart1_DIV_L = (uart1_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: uart1_DIV_L  ----------------------------------
// SVD Line: 19165

//  <rtree> SFDITEM_REG__uart1_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((uart1_DIV_L >> 0) & 0xFFFFFFFF), ((uart1_DIV_L = (uart1_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: uart1_DIV_H  -------------------------------
// SVD Line: 19183

unsigned int uart1_DIV_H __AT (0x40018008);



// ------------------------------  Field Item: uart1_DIV_H_DIV_H  ---------------------------------
// SVD Line: 19192

//  <item> SFDITEM_FIELD__uart1_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_DIV_H >> 0) & 0xFF), ((uart1_DIV_H = (uart1_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: uart1_DIV_H  ----------------------------------
// SVD Line: 19183

//  <rtree> SFDITEM_REG__uart1_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((uart1_DIV_H >> 0) & 0xFFFFFFFF), ((uart1_DIV_H = (uart1_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_LCR0  -------------------------------
// SVD Line: 19201

unsigned int uart1_LCR0 __AT (0x4001800C);



// -------------------------------  Field Item: uart1_LCR0_WLS  -----------------------------------
// SVD Line: 19210

//  <item> SFDITEM_FIELD__uart1_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001800C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_LCR0 >> 0) & 0x3), ((uart1_LCR0 = (uart1_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR0_STB  -----------------------------------
// SVD Line: 19217

//  <item> SFDITEM_FIELD__uart1_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001800C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR0_PEN  -----------------------------------
// SVD Line: 19224

//  <item> SFDITEM_FIELD__uart1_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001800C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR0_EPS  -----------------------------------
// SVD Line: 19231

//  <item> SFDITEM_FIELD__uart1_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001800C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LCR0_SP  -----------------------------------
// SVD Line: 19238

//  <item> SFDITEM_FIELD__uart1_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001800C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR0_SUB  -----------------------------------
// SVD Line: 19245

//  <item> SFDITEM_FIELD__uart1_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001800C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_LCR0  -----------------------------------
// SVD Line: 19201

//  <rtree> SFDITEM_REG__uart1_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001800C) uart control register 0 </i>
//    <loc> ( (unsigned int)((uart1_LCR0 >> 0) & 0xFFFFFFFF), ((uart1_LCR0 = (uart1_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__uart1_LCR0_STB </item>
//    <item> SFDITEM_FIELD__uart1_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__uart1_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__uart1_LCR0_SP </item>
//    <item> SFDITEM_FIELD__uart1_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_LCR1  -------------------------------
// SVD Line: 19254

unsigned int uart1_LCR1 __AT (0x40018010);



// -------------------------------  Field Item: uart1_LCR1_RXEN  ----------------------------------
// SVD Line: 19263

//  <item> SFDITEM_FIELD__uart1_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR1_TXEN  ----------------------------------
// SVD Line: 19270

//  <item> SFDITEM_FIELD__uart1_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR1_LOOP  ----------------------------------
// SVD Line: 19277

//  <item> SFDITEM_FIELD__uart1_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LCR1_WLS2  ----------------------------------
// SVD Line: 19284

//  <item> SFDITEM_FIELD__uart1_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: uart1_LCR1_INVRX  ----------------------------------
// SVD Line: 19291

//  <item> SFDITEM_FIELD__uart1_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: uart1_LCR1_INVTX  ----------------------------------
// SVD Line: 19298

//  <item> SFDITEM_FIELD__uart1_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_LCR1  -----------------------------------
// SVD Line: 19254

//  <rtree> SFDITEM_REG__uart1_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018010) uart control register 1 </i>
//    <loc> ( (unsigned int)((uart1_LCR1 >> 0) & 0xFFFFFFFF), ((uart1_LCR1 = (uart1_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__uart1_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__uart1_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__uart1_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__uart1_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__uart1_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_FCR  --------------------------------
// SVD Line: 19307

unsigned int uart1_FCR __AT (0x40018014);



// -------------------------------  Field Item: uart1_FCR_FIFOE  ----------------------------------
// SVD Line: 19316

//  <item> SFDITEM_FIELD__uart1_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: uart1_FCR  -----------------------------------
// SVD Line: 19307

//  <rtree> SFDITEM_REG__uart1_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((uart1_FCR >> 0) & 0xFFFFFFFF), ((uart1_FCR = (uart1_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_EFR  --------------------------------
// SVD Line: 19325

unsigned int uart1_EFR __AT (0x40018018);



// --------------------------------  Field Item: uart1_EFR_CTS  -----------------------------------
// SVD Line: 19334

//  <item> SFDITEM_FIELD__uart1_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_EFR_RTS  -----------------------------------
// SVD Line: 19341

//  <item> SFDITEM_FIELD__uart1_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: uart1_EFR  -----------------------------------
// SVD Line: 19325

//  <rtree> SFDITEM_REG__uart1_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018018) hardware flow control register </i>
//    <loc> ( (unsigned int)((uart1_EFR >> 0) & 0xFFFFFFFF), ((uart1_EFR = (uart1_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_EFR_CTS </item>
//    <item> SFDITEM_FIELD__uart1_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_IER  --------------------------------
// SVD Line: 19350

unsigned int uart1_IER __AT (0x4001801C);



// -------------------------------  Field Item: uart1_IER_ERXEN  ----------------------------------
// SVD Line: 19359

//  <item> SFDITEM_FIELD__uart1_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001801C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_IER_ETXE  -----------------------------------
// SVD Line: 19366

//  <item> SFDITEM_FIELD__uart1_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001801C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_IER_ETC  -----------------------------------
// SVD Line: 19373

//  <item> SFDITEM_FIELD__uart1_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001801C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_IER_EPE  -----------------------------------
// SVD Line: 19380

//  <item> SFDITEM_FIELD__uart1_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001801C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_IER_EFE  -----------------------------------
// SVD Line: 19387

//  <item> SFDITEM_FIELD__uart1_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001801C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_IER_ENE  -----------------------------------
// SVD Line: 19394

//  <item> SFDITEM_FIELD__uart1_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001801C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_IER_EOEBI  ----------------------------------
// SVD Line: 19401

//  <item> SFDITEM_FIELD__uart1_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001801C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_IER_EDCTS  ----------------------------------
// SVD Line: 19408

//  <item> SFDITEM_FIELD__uart1_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001801C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: uart1_IER  -----------------------------------
// SVD Line: 19350

//  <rtree> SFDITEM_REG__uart1_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001801C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((uart1_IER >> 0) & 0xFFFFFFFF), ((uart1_IER = (uart1_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__uart1_IER_ETXE </item>
//    <item> SFDITEM_FIELD__uart1_IER_ETC </item>
//    <item> SFDITEM_FIELD__uart1_IER_EPE </item>
//    <item> SFDITEM_FIELD__uart1_IER_EFE </item>
//    <item> SFDITEM_FIELD__uart1_IER_ENE </item>
//    <item> SFDITEM_FIELD__uart1_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__uart1_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_LSR0  -------------------------------
// SVD Line: 19417

unsigned int uart1_LSR0 __AT (0x40018020);



// --------------------------------  Field Item: uart1_LSR0_DR  -----------------------------------
// SVD Line: 19426

//  <item> SFDITEM_FIELD__uart1_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_OE  -----------------------------------
// SVD Line: 19433

//  <item> SFDITEM_FIELD__uart1_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_PE  -----------------------------------
// SVD Line: 19440

//  <item> SFDITEM_FIELD__uart1_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_FE  -----------------------------------
// SVD Line: 19447

//  <item> SFDITEM_FIELD__uart1_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_BI  -----------------------------------
// SVD Line: 19454

//  <item> SFDITEM_FIELD__uart1_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LSR0_THRE  ----------------------------------
// SVD Line: 19461

//  <item> SFDITEM_FIELD__uart1_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_TC  -----------------------------------
// SVD Line: 19468

//  <item> SFDITEM_FIELD__uart1_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: uart1_LSR0_NE  -----------------------------------
// SVD Line: 19475

//  <item> SFDITEM_FIELD__uart1_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_LSR0  -----------------------------------
// SVD Line: 19417

//  <rtree> SFDITEM_REG__uart1_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((uart1_LSR0 >> 0) & 0xFFFFFFFF), ((uart1_LSR0 = (uart1_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_LSR0_DR </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_OE </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_PE </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_FE </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_BI </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_TC </item>
//    <item> SFDITEM_FIELD__uart1_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_LSR1  -------------------------------
// SVD Line: 19484

unsigned int uart1_LSR1 __AT (0x40018024);



// -------------------------------  Field Item: uart1_LSR1_IDLE  ----------------------------------
// SVD Line: 19493

//  <item> SFDITEM_FIELD__uart1_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LSR1_FBRK  ----------------------------------
// SVD Line: 19500

//  <item> SFDITEM_FIELD__uart1_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40018024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LSR1_DCTS  ----------------------------------
// SVD Line: 19507

//  <item> SFDITEM_FIELD__uart1_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40018024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: uart1_LSR1_UART_IDLE  --------------------------------
// SVD Line: 19514

//  <item> SFDITEM_FIELD__uart1_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LSR1_CTS  -----------------------------------
// SVD Line: 19521

//  <item> SFDITEM_FIELD__uart1_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: uart1_LSR1_RTS  -----------------------------------
// SVD Line: 19528

//  <item> SFDITEM_FIELD__uart1_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_LSR1  -----------------------------------
// SVD Line: 19484

//  <rtree> SFDITEM_REG__uart1_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((uart1_LSR1 >> 0) & 0xFFFFFFFF), ((uart1_LSR1 = (uart1_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__uart1_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__uart1_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__uart1_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__uart1_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__uart1_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: uart1_SMP_CNT  ------------------------------
// SVD Line: 19537

unsigned int uart1_SMP_CNT __AT (0x40018028);



// ----------------------------  Field Item: uart1_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 19546

//  <item> SFDITEM_FIELD__uart1_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40018028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_SMP_CNT >> 0) & 0x3), ((uart1_SMP_CNT = (uart1_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: uart1_SMP_CNT  ---------------------------------
// SVD Line: 19537

//  <rtree> SFDITEM_REG__uart1_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018028) uart sample counter register </i>
//    <loc> ( (unsigned int)((uart1_SMP_CNT >> 0) & 0xFFFFFFFF), ((uart1_SMP_CNT = (uart1_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: uart1_GUARD  -------------------------------
// SVD Line: 19555

unsigned int uart1_GUARD __AT (0x40018034);



// ----------------------------  Field Item: uart1_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 19564

//  <item> SFDITEM_FIELD__uart1_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40018034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_GUARD >> 0) & 0xF), ((uart1_GUARD = (uart1_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: uart1_GUARD_GUARD_EN  --------------------------------
// SVD Line: 19571

//  <item> SFDITEM_FIELD__uart1_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_GUARD  ----------------------------------
// SVD Line: 19555

//  <rtree> SFDITEM_REG__uart1_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018034) uart guard time register </i>
//    <loc> ( (unsigned int)((uart1_GUARD >> 0) & 0xFFFFFFFF), ((uart1_GUARD = (uart1_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__uart1_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: uart1_SLEEP  -------------------------------
// SVD Line: 19580

unsigned int uart1_SLEEP __AT (0x4001803C);



// ----------------------------  Field Item: uart1_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 19589

//  <item> SFDITEM_FIELD__uart1_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001803C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: uart1_SLEEP  ----------------------------------
// SVD Line: 19580

//  <rtree> SFDITEM_REG__uart1_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001803C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((uart1_SLEEP >> 0) & 0xFFFFFFFF), ((uart1_SLEEP = (uart1_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_DMA  --------------------------------
// SVD Line: 19598

unsigned int uart1_DMA __AT (0x40018040);



// ------------------------------  Field Item: uart1_DMA_RXDMAEN  ---------------------------------
// SVD Line: 19607

//  <item> SFDITEM_FIELD__uart1_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40018040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: uart1_DMA_TXDMAEN  ---------------------------------
// SVD Line: 19614

//  <item> SFDITEM_FIELD__uart1_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40018040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: uart1_DMA  -----------------------------------
// SVD Line: 19598

//  <rtree> SFDITEM_REG__uart1_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((uart1_DMA >> 0) & 0xFFFFFFFF), ((uart1_DMA = (uart1_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__uart1_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: uart1_DIV_FRAC  -----------------------------
// SVD Line: 19623

unsigned int uart1_DIV_FRAC __AT (0x40018044);



// ---------------------------  Field Item: uart1_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 19632

//  <item> SFDITEM_FIELD__uart1_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_DIV_FRAC >> 0) & 0xFF), ((uart1_DIV_FRAC = (uart1_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: uart1_DIV_FRAC  ---------------------------------
// SVD Line: 19623

//  <rtree> SFDITEM_REG__uart1_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((uart1_DIV_FRAC >> 0) & 0xFFFFFFFF), ((uart1_DIV_FRAC = (uart1_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: uart1_RS485CR  ------------------------------
// SVD Line: 19641

unsigned int uart1_RS485CR __AT (0x4001804C);



// -----------------------------  Field Item: uart1_RS485CR_DLYEN  --------------------------------
// SVD Line: 19650

//  <item> SFDITEM_FIELD__uart1_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001804C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: uart1_RS485CR_INVPOL  --------------------------------
// SVD Line: 19657

//  <item> SFDITEM_FIELD__uart1_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001804C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: uart1_RS485CR_RS485EN  -------------------------------
// SVD Line: 19664

//  <item> SFDITEM_FIELD__uart1_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001804C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: uart1_RS485CR  ---------------------------------
// SVD Line: 19641

//  <rtree> SFDITEM_REG__uart1_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001804C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((uart1_RS485CR >> 0) & 0xFFFFFFFF), ((uart1_RS485CR = (uart1_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__uart1_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__uart1_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: uart1_SLADDR  ------------------------------
// SVD Line: 19673

unsigned int uart1_SLADDR __AT (0x40018050);



// -----------------------------  Field Item: uart1_SLADDR_SLADDR  --------------------------------
// SVD Line: 19682

//  <item> SFDITEM_FIELD__uart1_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_SLADDR >> 0) & 0xFF), ((uart1_SLADDR = (uart1_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: uart1_SLADDR  ----------------------------------
// SVD Line: 19673

//  <rtree> SFDITEM_REG__uart1_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((uart1_SLADDR >> 0) & 0xFFFFFFFF), ((uart1_SLADDR = (uart1_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: uart1_CNTR  -------------------------------
// SVD Line: 19691

unsigned int uart1_CNTR __AT (0x40018054);



// -------------------------------  Field Item: uart1_CNTR_CNTR  ----------------------------------
// SVD Line: 19700

//  <item> SFDITEM_FIELD__uart1_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40018054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((uart1_CNTR >> 0) & 0xFF), ((uart1_CNTR = (uart1_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: uart1_CNTR  -----------------------------------
// SVD Line: 19691

//  <rtree> SFDITEM_REG__uart1_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((uart1_CNTR >> 0) & 0xFFFFFFFF), ((uart1_CNTR = (uart1_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: uart1_MULCOMCR  -----------------------------
// SVD Line: 19709

unsigned int uart1_MULCOMCR __AT (0x40018058);



// ----------------------------  Field Item: uart1_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 19718

//  <item> SFDITEM_FIELD__uart1_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40018058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: uart1_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 19725

//  <item> SFDITEM_FIELD__uart1_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40018058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: uart1_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 19732

//  <item> SFDITEM_FIELD__uart1_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40018058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: uart1_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 19739

//  <item> SFDITEM_FIELD__uart1_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40018058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) uart1_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: uart1_MULCOMCR  ---------------------------------
// SVD Line: 19709

//  <rtree> SFDITEM_REG__uart1_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40018058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((uart1_MULCOMCR >> 0) & 0xFFFFFFFF), ((uart1_MULCOMCR = (uart1_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__uart1_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__uart1_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__uart1_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__uart1_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: uart1  -------------------------------------
// SVD Line: 19132

//  <view> uart1
//    <name> uart1 </name>
//    <item> SFDITEM_REG__uart1_RBR </item>
//    <item> SFDITEM_REG__uart1_DIV_L </item>
//    <item> SFDITEM_REG__uart1_DIV_H </item>
//    <item> SFDITEM_REG__uart1_LCR0 </item>
//    <item> SFDITEM_REG__uart1_LCR1 </item>
//    <item> SFDITEM_REG__uart1_FCR </item>
//    <item> SFDITEM_REG__uart1_EFR </item>
//    <item> SFDITEM_REG__uart1_IER </item>
//    <item> SFDITEM_REG__uart1_LSR0 </item>
//    <item> SFDITEM_REG__uart1_LSR1 </item>
//    <item> SFDITEM_REG__uart1_SMP_CNT </item>
//    <item> SFDITEM_REG__uart1_GUARD </item>
//    <item> SFDITEM_REG__uart1_SLEEP </item>
//    <item> SFDITEM_REG__uart1_DMA </item>
//    <item> SFDITEM_REG__uart1_DIV_FRAC </item>
//    <item> SFDITEM_REG__uart1_RS485CR </item>
//    <item> SFDITEM_REG__uart1_SLADDR </item>
//    <item> SFDITEM_REG__uart1_CNTR </item>
//    <item> SFDITEM_REG__uart1_MULCOMCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART2_RBR  --------------------------------
// SVD Line: 19766

unsigned int UART2_RBR __AT (0x40019000);



// ------------------------------  Field Item: UART2_RBR_RBR_THR  ---------------------------------
// SVD Line: 19775

//  <item> SFDITEM_FIELD__UART2_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_RBR >> 0) & 0xFF), ((UART2_RBR = (UART2_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UART2_RBR  -----------------------------------
// SVD Line: 19766

//  <rtree> SFDITEM_REG__UART2_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((UART2_RBR >> 0) & 0xFFFFFFFF), ((UART2_RBR = (UART2_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_DIV_L  -------------------------------
// SVD Line: 19784

unsigned int UART2_DIV_L __AT (0x40019004);



// ------------------------------  Field Item: UART2_DIV_L_DIV_L  ---------------------------------
// SVD Line: 19793

//  <item> SFDITEM_FIELD__UART2_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_DIV_L >> 0) & 0xFF), ((UART2_DIV_L = (UART2_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_DIV_L  ----------------------------------
// SVD Line: 19784

//  <rtree> SFDITEM_REG__UART2_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((UART2_DIV_L >> 0) & 0xFFFFFFFF), ((UART2_DIV_L = (UART2_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_DIV_H  -------------------------------
// SVD Line: 19802

unsigned int UART2_DIV_H __AT (0x40019008);



// ------------------------------  Field Item: UART2_DIV_H_DIV_H  ---------------------------------
// SVD Line: 19811

//  <item> SFDITEM_FIELD__UART2_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_DIV_H >> 0) & 0xFF), ((UART2_DIV_H = (UART2_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_DIV_H  ----------------------------------
// SVD Line: 19802

//  <rtree> SFDITEM_REG__UART2_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((UART2_DIV_H >> 0) & 0xFFFFFFFF), ((UART2_DIV_H = (UART2_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_LCR0  -------------------------------
// SVD Line: 19820

unsigned int UART2_LCR0 __AT (0x4001900C);



// -------------------------------  Field Item: UART2_LCR0_WLS  -----------------------------------
// SVD Line: 19829

//  <item> SFDITEM_FIELD__UART2_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001900C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_LCR0 >> 0) & 0x3), ((UART2_LCR0 = (UART2_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR0_STB  -----------------------------------
// SVD Line: 19836

//  <item> SFDITEM_FIELD__UART2_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001900C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR0_PEN  -----------------------------------
// SVD Line: 19843

//  <item> SFDITEM_FIELD__UART2_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001900C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR0_EPS  -----------------------------------
// SVD Line: 19850

//  <item> SFDITEM_FIELD__UART2_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001900C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LCR0_SP  -----------------------------------
// SVD Line: 19857

//  <item> SFDITEM_FIELD__UART2_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001900C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR0_SUB  -----------------------------------
// SVD Line: 19864

//  <item> SFDITEM_FIELD__UART2_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001900C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_LCR0  -----------------------------------
// SVD Line: 19820

//  <rtree> SFDITEM_REG__UART2_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001900C) uart control register 0 </i>
//    <loc> ( (unsigned int)((UART2_LCR0 >> 0) & 0xFFFFFFFF), ((UART2_LCR0 = (UART2_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__UART2_LCR0_STB </item>
//    <item> SFDITEM_FIELD__UART2_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__UART2_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__UART2_LCR0_SP </item>
//    <item> SFDITEM_FIELD__UART2_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_LCR1  -------------------------------
// SVD Line: 19873

unsigned int UART2_LCR1 __AT (0x40019010);



// -------------------------------  Field Item: UART2_LCR1_RXEN  ----------------------------------
// SVD Line: 19882

//  <item> SFDITEM_FIELD__UART2_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR1_TXEN  ----------------------------------
// SVD Line: 19889

//  <item> SFDITEM_FIELD__UART2_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40019010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR1_LOOP  ----------------------------------
// SVD Line: 19896

//  <item> SFDITEM_FIELD__UART2_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40019010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LCR1_WLS2  ----------------------------------
// SVD Line: 19903

//  <item> SFDITEM_FIELD__UART2_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40019010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_LCR1_INVRX  ----------------------------------
// SVD Line: 19910

//  <item> SFDITEM_FIELD__UART2_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_LCR1_INVTX  ----------------------------------
// SVD Line: 19917

//  <item> SFDITEM_FIELD__UART2_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_LCR1  -----------------------------------
// SVD Line: 19873

//  <rtree> SFDITEM_REG__UART2_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019010) uart control register 1 </i>
//    <loc> ( (unsigned int)((UART2_LCR1 >> 0) & 0xFFFFFFFF), ((UART2_LCR1 = (UART2_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__UART2_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__UART2_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__UART2_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__UART2_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__UART2_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_FCR  --------------------------------
// SVD Line: 19926

unsigned int UART2_FCR __AT (0x40019014);



// -------------------------------  Field Item: UART2_FCR_FIFOE  ----------------------------------
// SVD Line: 19935

//  <item> SFDITEM_FIELD__UART2_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_FCR  -----------------------------------
// SVD Line: 19926

//  <rtree> SFDITEM_REG__UART2_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((UART2_FCR >> 0) & 0xFFFFFFFF), ((UART2_FCR = (UART2_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_EFR  --------------------------------
// SVD Line: 19944

unsigned int UART2_EFR __AT (0x40019018);



// --------------------------------  Field Item: UART2_EFR_CTS  -----------------------------------
// SVD Line: 19953

//  <item> SFDITEM_FIELD__UART2_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_EFR_RTS  -----------------------------------
// SVD Line: 19960

//  <item> SFDITEM_FIELD__UART2_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_EFR  -----------------------------------
// SVD Line: 19944

//  <rtree> SFDITEM_REG__UART2_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019018) hardware flow control register </i>
//    <loc> ( (unsigned int)((UART2_EFR >> 0) & 0xFFFFFFFF), ((UART2_EFR = (UART2_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_EFR_CTS </item>
//    <item> SFDITEM_FIELD__UART2_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_IER  --------------------------------
// SVD Line: 19969

unsigned int UART2_IER __AT (0x4001901C);



// -------------------------------  Field Item: UART2_IER_ERXEN  ----------------------------------
// SVD Line: 19978

//  <item> SFDITEM_FIELD__UART2_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001901C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IER_ETXE  -----------------------------------
// SVD Line: 19985

//  <item> SFDITEM_FIELD__UART2_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001901C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_IER_ETC  -----------------------------------
// SVD Line: 19992

//  <item> SFDITEM_FIELD__UART2_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001901C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_IER_EPE  -----------------------------------
// SVD Line: 19999

//  <item> SFDITEM_FIELD__UART2_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001901C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_IER_EFE  -----------------------------------
// SVD Line: 20006

//  <item> SFDITEM_FIELD__UART2_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001901C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_IER_ENE  -----------------------------------
// SVD Line: 20013

//  <item> SFDITEM_FIELD__UART2_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001901C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IER_EOEBI  ----------------------------------
// SVD Line: 20020

//  <item> SFDITEM_FIELD__UART2_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001901C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_IER_EDCTS  ----------------------------------
// SVD Line: 20027

//  <item> SFDITEM_FIELD__UART2_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001901C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_IER  -----------------------------------
// SVD Line: 19969

//  <rtree> SFDITEM_REG__UART2_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001901C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((UART2_IER >> 0) & 0xFFFFFFFF), ((UART2_IER = (UART2_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__UART2_IER_ETXE </item>
//    <item> SFDITEM_FIELD__UART2_IER_ETC </item>
//    <item> SFDITEM_FIELD__UART2_IER_EPE </item>
//    <item> SFDITEM_FIELD__UART2_IER_EFE </item>
//    <item> SFDITEM_FIELD__UART2_IER_ENE </item>
//    <item> SFDITEM_FIELD__UART2_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__UART2_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_LSR0  -------------------------------
// SVD Line: 20036

unsigned int UART2_LSR0 __AT (0x40019020);



// --------------------------------  Field Item: UART2_LSR0_DR  -----------------------------------
// SVD Line: 20045

//  <item> SFDITEM_FIELD__UART2_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_OE  -----------------------------------
// SVD Line: 20052

//  <item> SFDITEM_FIELD__UART2_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40019020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_PE  -----------------------------------
// SVD Line: 20059

//  <item> SFDITEM_FIELD__UART2_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40019020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_FE  -----------------------------------
// SVD Line: 20066

//  <item> SFDITEM_FIELD__UART2_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40019020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_BI  -----------------------------------
// SVD Line: 20073

//  <item> SFDITEM_FIELD__UART2_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40019020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LSR0_THRE  ----------------------------------
// SVD Line: 20080

//  <item> SFDITEM_FIELD__UART2_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40019020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_TC  -----------------------------------
// SVD Line: 20087

//  <item> SFDITEM_FIELD__UART2_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART2_LSR0_NE  -----------------------------------
// SVD Line: 20094

//  <item> SFDITEM_FIELD__UART2_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_LSR0  -----------------------------------
// SVD Line: 20036

//  <rtree> SFDITEM_REG__UART2_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((UART2_LSR0 >> 0) & 0xFFFFFFFF), ((UART2_LSR0 = (UART2_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_LSR0_DR </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_OE </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_PE </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_FE </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_BI </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_TC </item>
//    <item> SFDITEM_FIELD__UART2_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_LSR1  -------------------------------
// SVD Line: 20103

unsigned int UART2_LSR1 __AT (0x40019024);



// -------------------------------  Field Item: UART2_LSR1_IDLE  ----------------------------------
// SVD Line: 20112

//  <item> SFDITEM_FIELD__UART2_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LSR1_FBRK  ----------------------------------
// SVD Line: 20119

//  <item> SFDITEM_FIELD__UART2_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40019024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LSR1_DCTS  ----------------------------------
// SVD Line: 20126

//  <item> SFDITEM_FIELD__UART2_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40019024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_LSR1_UART_IDLE  --------------------------------
// SVD Line: 20133

//  <item> SFDITEM_FIELD__UART2_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40019024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LSR1_CTS  -----------------------------------
// SVD Line: 20140

//  <item> SFDITEM_FIELD__UART2_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART2_LSR1_RTS  -----------------------------------
// SVD Line: 20147

//  <item> SFDITEM_FIELD__UART2_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_LSR1  -----------------------------------
// SVD Line: 20103

//  <rtree> SFDITEM_REG__UART2_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((UART2_LSR1 >> 0) & 0xFFFFFFFF), ((UART2_LSR1 = (UART2_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__UART2_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__UART2_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__UART2_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__UART2_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__UART2_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_SMP_CNT  ------------------------------
// SVD Line: 20156

unsigned int UART2_SMP_CNT __AT (0x40019028);



// ----------------------------  Field Item: UART2_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 20165

//  <item> SFDITEM_FIELD__UART2_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40019028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_SMP_CNT >> 0) & 0x3), ((UART2_SMP_CNT = (UART2_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART2_SMP_CNT  ---------------------------------
// SVD Line: 20156

//  <rtree> SFDITEM_REG__UART2_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019028) uart sample counter register </i>
//    <loc> ( (unsigned int)((UART2_SMP_CNT >> 0) & 0xFFFFFFFF), ((UART2_SMP_CNT = (UART2_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_GUARD  -------------------------------
// SVD Line: 20174

unsigned int UART2_GUARD __AT (0x40019034);



// ----------------------------  Field Item: UART2_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 20183

//  <item> SFDITEM_FIELD__UART2_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40019034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_GUARD >> 0) & 0xF), ((UART2_GUARD = (UART2_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UART2_GUARD_GUARD_EN  --------------------------------
// SVD Line: 20190

//  <item> SFDITEM_FIELD__UART2_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40019034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_GUARD  ----------------------------------
// SVD Line: 20174

//  <rtree> SFDITEM_REG__UART2_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019034) uart guard time register </i>
//    <loc> ( (unsigned int)((UART2_GUARD >> 0) & 0xFFFFFFFF), ((UART2_GUARD = (UART2_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__UART2_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_SLEEP  -------------------------------
// SVD Line: 20199

unsigned int UART2_SLEEP __AT (0x4001903C);



// ----------------------------  Field Item: UART2_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 20208

//  <item> SFDITEM_FIELD__UART2_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001903C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART2_SLEEP  ----------------------------------
// SVD Line: 20199

//  <rtree> SFDITEM_REG__UART2_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001903C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((UART2_SLEEP >> 0) & 0xFFFFFFFF), ((UART2_SLEEP = (UART2_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_DMA  --------------------------------
// SVD Line: 20217

unsigned int UART2_DMA __AT (0x40019040);



// ------------------------------  Field Item: UART2_DMA_RXDMAEN  ---------------------------------
// SVD Line: 20226

//  <item> SFDITEM_FIELD__UART2_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40019040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART2_DMA_TXDMAEN  ---------------------------------
// SVD Line: 20233

//  <item> SFDITEM_FIELD__UART2_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40019040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART2_DMA  -----------------------------------
// SVD Line: 20217

//  <rtree> SFDITEM_REG__UART2_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((UART2_DMA >> 0) & 0xFFFFFFFF), ((UART2_DMA = (UART2_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UART2_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_DIV_FRAC  -----------------------------
// SVD Line: 20242

unsigned int UART2_DIV_FRAC __AT (0x40019044);



// ---------------------------  Field Item: UART2_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 20251

//  <item> SFDITEM_FIELD__UART2_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_DIV_FRAC >> 0) & 0xFF), ((UART2_DIV_FRAC = (UART2_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART2_DIV_FRAC  ---------------------------------
// SVD Line: 20242

//  <rtree> SFDITEM_REG__UART2_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((UART2_DIV_FRAC >> 0) & 0xFFFFFFFF), ((UART2_DIV_FRAC = (UART2_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_RS485CR  ------------------------------
// SVD Line: 20260

unsigned int UART2_RS485CR __AT (0x4001904C);



// -----------------------------  Field Item: UART2_RS485CR_DLYEN  --------------------------------
// SVD Line: 20269

//  <item> SFDITEM_FIELD__UART2_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001904C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_RS485CR_INVPOL  --------------------------------
// SVD Line: 20276

//  <item> SFDITEM_FIELD__UART2_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001904C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_RS485CR_RS485EN  -------------------------------
// SVD Line: 20283

//  <item> SFDITEM_FIELD__UART2_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001904C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART2_RS485CR  ---------------------------------
// SVD Line: 20260

//  <rtree> SFDITEM_REG__UART2_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001904C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((UART2_RS485CR >> 0) & 0xFFFFFFFF), ((UART2_RS485CR = (UART2_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__UART2_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__UART2_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART2_SLADDR  ------------------------------
// SVD Line: 20292

unsigned int UART2_SLADDR __AT (0x40019050);



// -----------------------------  Field Item: UART2_SLADDR_SLADDR  --------------------------------
// SVD Line: 20301

//  <item> SFDITEM_FIELD__UART2_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_SLADDR >> 0) & 0xFF), ((UART2_SLADDR = (UART2_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART2_SLADDR  ----------------------------------
// SVD Line: 20292

//  <rtree> SFDITEM_REG__UART2_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((UART2_SLADDR >> 0) & 0xFFFFFFFF), ((UART2_SLADDR = (UART2_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART2_CNTR  -------------------------------
// SVD Line: 20310

unsigned int UART2_CNTR __AT (0x40019054);



// -------------------------------  Field Item: UART2_CNTR_CNTR  ----------------------------------
// SVD Line: 20319

//  <item> SFDITEM_FIELD__UART2_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40019054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART2_CNTR >> 0) & 0xFF), ((UART2_CNTR = (UART2_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART2_CNTR  -----------------------------------
// SVD Line: 20310

//  <rtree> SFDITEM_REG__UART2_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((UART2_CNTR >> 0) & 0xFFFFFFFF), ((UART2_CNTR = (UART2_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART2_MULCOMCR  -----------------------------
// SVD Line: 20328

unsigned int UART2_MULCOMCR __AT (0x40019058);



// ----------------------------  Field Item: UART2_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 20337

//  <item> SFDITEM_FIELD__UART2_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40019058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART2_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 20344

//  <item> SFDITEM_FIELD__UART2_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40019058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 20351

//  <item> SFDITEM_FIELD__UART2_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40019058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART2_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 20358

//  <item> SFDITEM_FIELD__UART2_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40019058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART2_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART2_MULCOMCR  ---------------------------------
// SVD Line: 20328

//  <rtree> SFDITEM_REG__UART2_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40019058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((UART2_MULCOMCR >> 0) & 0xFFFFFFFF), ((UART2_MULCOMCR = (UART2_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART2_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__UART2_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__UART2_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__UART2_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART2  -------------------------------------
// SVD Line: 19751

//  <view> UART2
//    <name> UART2 </name>
//    <item> SFDITEM_REG__UART2_RBR </item>
//    <item> SFDITEM_REG__UART2_DIV_L </item>
//    <item> SFDITEM_REG__UART2_DIV_H </item>
//    <item> SFDITEM_REG__UART2_LCR0 </item>
//    <item> SFDITEM_REG__UART2_LCR1 </item>
//    <item> SFDITEM_REG__UART2_FCR </item>
//    <item> SFDITEM_REG__UART2_EFR </item>
//    <item> SFDITEM_REG__UART2_IER </item>
//    <item> SFDITEM_REG__UART2_LSR0 </item>
//    <item> SFDITEM_REG__UART2_LSR1 </item>
//    <item> SFDITEM_REG__UART2_SMP_CNT </item>
//    <item> SFDITEM_REG__UART2_GUARD </item>
//    <item> SFDITEM_REG__UART2_SLEEP </item>
//    <item> SFDITEM_REG__UART2_DMA </item>
//    <item> SFDITEM_REG__UART2_DIV_FRAC </item>
//    <item> SFDITEM_REG__UART2_RS485CR </item>
//    <item> SFDITEM_REG__UART2_SLADDR </item>
//    <item> SFDITEM_REG__UART2_CNTR </item>
//    <item> SFDITEM_REG__UART2_MULCOMCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART3_RBR  --------------------------------
// SVD Line: 20385

unsigned int UART3_RBR __AT (0x4001A000);



// ------------------------------  Field Item: UART3_RBR_RBR_THR  ---------------------------------
// SVD Line: 20394

//  <item> SFDITEM_FIELD__UART3_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_RBR >> 0) & 0xFF), ((UART3_RBR = (UART3_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UART3_RBR  -----------------------------------
// SVD Line: 20385

//  <rtree> SFDITEM_REG__UART3_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((UART3_RBR >> 0) & 0xFFFFFFFF), ((UART3_RBR = (UART3_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_DIV_L  -------------------------------
// SVD Line: 20403

unsigned int UART3_DIV_L __AT (0x4001A004);



// ------------------------------  Field Item: UART3_DIV_L_DIV_L  ---------------------------------
// SVD Line: 20412

//  <item> SFDITEM_FIELD__UART3_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_DIV_L >> 0) & 0xFF), ((UART3_DIV_L = (UART3_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_DIV_L  ----------------------------------
// SVD Line: 20403

//  <rtree> SFDITEM_REG__UART3_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((UART3_DIV_L >> 0) & 0xFFFFFFFF), ((UART3_DIV_L = (UART3_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_DIV_H  -------------------------------
// SVD Line: 20421

unsigned int UART3_DIV_H __AT (0x4001A008);



// ------------------------------  Field Item: UART3_DIV_H_DIV_H  ---------------------------------
// SVD Line: 20430

//  <item> SFDITEM_FIELD__UART3_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_DIV_H >> 0) & 0xFF), ((UART3_DIV_H = (UART3_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_DIV_H  ----------------------------------
// SVD Line: 20421

//  <rtree> SFDITEM_REG__UART3_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((UART3_DIV_H >> 0) & 0xFFFFFFFF), ((UART3_DIV_H = (UART3_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_LCR0  -------------------------------
// SVD Line: 20439

unsigned int UART3_LCR0 __AT (0x4001A00C);



// -------------------------------  Field Item: UART3_LCR0_WLS  -----------------------------------
// SVD Line: 20448

//  <item> SFDITEM_FIELD__UART3_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001A00C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_LCR0 >> 0) & 0x3), ((UART3_LCR0 = (UART3_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR0_STB  -----------------------------------
// SVD Line: 20455

//  <item> SFDITEM_FIELD__UART3_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A00C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR0_PEN  -----------------------------------
// SVD Line: 20462

//  <item> SFDITEM_FIELD__UART3_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A00C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR0_EPS  -----------------------------------
// SVD Line: 20469

//  <item> SFDITEM_FIELD__UART3_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A00C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LCR0_SP  -----------------------------------
// SVD Line: 20476

//  <item> SFDITEM_FIELD__UART3_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A00C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR0_SUB  -----------------------------------
// SVD Line: 20483

//  <item> SFDITEM_FIELD__UART3_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A00C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_LCR0  -----------------------------------
// SVD Line: 20439

//  <rtree> SFDITEM_REG__UART3_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A00C) uart control register 0 </i>
//    <loc> ( (unsigned int)((UART3_LCR0 >> 0) & 0xFFFFFFFF), ((UART3_LCR0 = (UART3_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__UART3_LCR0_STB </item>
//    <item> SFDITEM_FIELD__UART3_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__UART3_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__UART3_LCR0_SP </item>
//    <item> SFDITEM_FIELD__UART3_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_LCR1  -------------------------------
// SVD Line: 20492

unsigned int UART3_LCR1 __AT (0x4001A010);



// -------------------------------  Field Item: UART3_LCR1_RXEN  ----------------------------------
// SVD Line: 20501

//  <item> SFDITEM_FIELD__UART3_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR1_TXEN  ----------------------------------
// SVD Line: 20508

//  <item> SFDITEM_FIELD__UART3_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR1_LOOP  ----------------------------------
// SVD Line: 20515

//  <item> SFDITEM_FIELD__UART3_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LCR1_WLS2  ----------------------------------
// SVD Line: 20522

//  <item> SFDITEM_FIELD__UART3_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_LCR1_INVRX  ----------------------------------
// SVD Line: 20529

//  <item> SFDITEM_FIELD__UART3_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_LCR1_INVTX  ----------------------------------
// SVD Line: 20536

//  <item> SFDITEM_FIELD__UART3_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_LCR1  -----------------------------------
// SVD Line: 20492

//  <rtree> SFDITEM_REG__UART3_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A010) uart control register 1 </i>
//    <loc> ( (unsigned int)((UART3_LCR1 >> 0) & 0xFFFFFFFF), ((UART3_LCR1 = (UART3_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__UART3_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__UART3_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__UART3_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__UART3_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__UART3_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_FCR  --------------------------------
// SVD Line: 20545

unsigned int UART3_FCR __AT (0x4001A014);



// -------------------------------  Field Item: UART3_FCR_FIFOE  ----------------------------------
// SVD Line: 20554

//  <item> SFDITEM_FIELD__UART3_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_FCR  -----------------------------------
// SVD Line: 20545

//  <rtree> SFDITEM_REG__UART3_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((UART3_FCR >> 0) & 0xFFFFFFFF), ((UART3_FCR = (UART3_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_EFR  --------------------------------
// SVD Line: 20563

unsigned int UART3_EFR __AT (0x4001A018);



// --------------------------------  Field Item: UART3_EFR_CTS  -----------------------------------
// SVD Line: 20572

//  <item> SFDITEM_FIELD__UART3_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_EFR_RTS  -----------------------------------
// SVD Line: 20579

//  <item> SFDITEM_FIELD__UART3_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_EFR  -----------------------------------
// SVD Line: 20563

//  <rtree> SFDITEM_REG__UART3_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A018) hardware flow control register </i>
//    <loc> ( (unsigned int)((UART3_EFR >> 0) & 0xFFFFFFFF), ((UART3_EFR = (UART3_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_EFR_CTS </item>
//    <item> SFDITEM_FIELD__UART3_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_IER  --------------------------------
// SVD Line: 20588

unsigned int UART3_IER __AT (0x4001A01C);



// -------------------------------  Field Item: UART3_IER_ERXEN  ----------------------------------
// SVD Line: 20597

//  <item> SFDITEM_FIELD__UART3_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A01C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IER_ETXE  -----------------------------------
// SVD Line: 20604

//  <item> SFDITEM_FIELD__UART3_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A01C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_IER_ETC  -----------------------------------
// SVD Line: 20611

//  <item> SFDITEM_FIELD__UART3_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A01C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_IER_EPE  -----------------------------------
// SVD Line: 20618

//  <item> SFDITEM_FIELD__UART3_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A01C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_IER_EFE  -----------------------------------
// SVD Line: 20625

//  <item> SFDITEM_FIELD__UART3_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A01C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_IER_ENE  -----------------------------------
// SVD Line: 20632

//  <item> SFDITEM_FIELD__UART3_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A01C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IER_EOEBI  ----------------------------------
// SVD Line: 20639

//  <item> SFDITEM_FIELD__UART3_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A01C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_IER_EDCTS  ----------------------------------
// SVD Line: 20646

//  <item> SFDITEM_FIELD__UART3_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A01C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_IER  -----------------------------------
// SVD Line: 20588

//  <rtree> SFDITEM_REG__UART3_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A01C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((UART3_IER >> 0) & 0xFFFFFFFF), ((UART3_IER = (UART3_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__UART3_IER_ETXE </item>
//    <item> SFDITEM_FIELD__UART3_IER_ETC </item>
//    <item> SFDITEM_FIELD__UART3_IER_EPE </item>
//    <item> SFDITEM_FIELD__UART3_IER_EFE </item>
//    <item> SFDITEM_FIELD__UART3_IER_ENE </item>
//    <item> SFDITEM_FIELD__UART3_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__UART3_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_LSR0  -------------------------------
// SVD Line: 20655

unsigned int UART3_LSR0 __AT (0x4001A020);



// --------------------------------  Field Item: UART3_LSR0_DR  -----------------------------------
// SVD Line: 20664

//  <item> SFDITEM_FIELD__UART3_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_OE  -----------------------------------
// SVD Line: 20671

//  <item> SFDITEM_FIELD__UART3_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_PE  -----------------------------------
// SVD Line: 20678

//  <item> SFDITEM_FIELD__UART3_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_FE  -----------------------------------
// SVD Line: 20685

//  <item> SFDITEM_FIELD__UART3_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_BI  -----------------------------------
// SVD Line: 20692

//  <item> SFDITEM_FIELD__UART3_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LSR0_THRE  ----------------------------------
// SVD Line: 20699

//  <item> SFDITEM_FIELD__UART3_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_TC  -----------------------------------
// SVD Line: 20706

//  <item> SFDITEM_FIELD__UART3_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART3_LSR0_NE  -----------------------------------
// SVD Line: 20713

//  <item> SFDITEM_FIELD__UART3_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_LSR0  -----------------------------------
// SVD Line: 20655

//  <rtree> SFDITEM_REG__UART3_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((UART3_LSR0 >> 0) & 0xFFFFFFFF), ((UART3_LSR0 = (UART3_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_LSR0_DR </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_OE </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_PE </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_FE </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_BI </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_TC </item>
//    <item> SFDITEM_FIELD__UART3_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_LSR1  -------------------------------
// SVD Line: 20722

unsigned int UART3_LSR1 __AT (0x4001A024);



// -------------------------------  Field Item: UART3_LSR1_IDLE  ----------------------------------
// SVD Line: 20731

//  <item> SFDITEM_FIELD__UART3_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LSR1_FBRK  ----------------------------------
// SVD Line: 20738

//  <item> SFDITEM_FIELD__UART3_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001A024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LSR1_DCTS  ----------------------------------
// SVD Line: 20745

//  <item> SFDITEM_FIELD__UART3_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001A024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_LSR1_UART_IDLE  --------------------------------
// SVD Line: 20752

//  <item> SFDITEM_FIELD__UART3_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LSR1_CTS  -----------------------------------
// SVD Line: 20759

//  <item> SFDITEM_FIELD__UART3_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART3_LSR1_RTS  -----------------------------------
// SVD Line: 20766

//  <item> SFDITEM_FIELD__UART3_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_LSR1  -----------------------------------
// SVD Line: 20722

//  <rtree> SFDITEM_REG__UART3_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((UART3_LSR1 >> 0) & 0xFFFFFFFF), ((UART3_LSR1 = (UART3_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__UART3_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__UART3_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__UART3_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__UART3_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__UART3_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_SMP_CNT  ------------------------------
// SVD Line: 20775

unsigned int UART3_SMP_CNT __AT (0x4001A028);



// ----------------------------  Field Item: UART3_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 20784

//  <item> SFDITEM_FIELD__UART3_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001A028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_SMP_CNT >> 0) & 0x3), ((UART3_SMP_CNT = (UART3_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART3_SMP_CNT  ---------------------------------
// SVD Line: 20775

//  <rtree> SFDITEM_REG__UART3_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A028) uart sample counter register </i>
//    <loc> ( (unsigned int)((UART3_SMP_CNT >> 0) & 0xFFFFFFFF), ((UART3_SMP_CNT = (UART3_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_GUARD  -------------------------------
// SVD Line: 20793

unsigned int UART3_GUARD __AT (0x4001A034);



// ----------------------------  Field Item: UART3_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 20802

//  <item> SFDITEM_FIELD__UART3_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001A034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_GUARD >> 0) & 0xF), ((UART3_GUARD = (UART3_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UART3_GUARD_GUARD_EN  --------------------------------
// SVD Line: 20809

//  <item> SFDITEM_FIELD__UART3_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_GUARD  ----------------------------------
// SVD Line: 20793

//  <rtree> SFDITEM_REG__UART3_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A034) uart guard time register </i>
//    <loc> ( (unsigned int)((UART3_GUARD >> 0) & 0xFFFFFFFF), ((UART3_GUARD = (UART3_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__UART3_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_SLEEP  -------------------------------
// SVD Line: 20818

unsigned int UART3_SLEEP __AT (0x4001A03C);



// ----------------------------  Field Item: UART3_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 20827

//  <item> SFDITEM_FIELD__UART3_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A03C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART3_SLEEP  ----------------------------------
// SVD Line: 20818

//  <rtree> SFDITEM_REG__UART3_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A03C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((UART3_SLEEP >> 0) & 0xFFFFFFFF), ((UART3_SLEEP = (UART3_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_DMA  --------------------------------
// SVD Line: 20836

unsigned int UART3_DMA __AT (0x4001A040);



// ------------------------------  Field Item: UART3_DMA_RXDMAEN  ---------------------------------
// SVD Line: 20845

//  <item> SFDITEM_FIELD__UART3_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001A040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART3_DMA_TXDMAEN  ---------------------------------
// SVD Line: 20852

//  <item> SFDITEM_FIELD__UART3_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001A040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART3_DMA  -----------------------------------
// SVD Line: 20836

//  <rtree> SFDITEM_REG__UART3_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((UART3_DMA >> 0) & 0xFFFFFFFF), ((UART3_DMA = (UART3_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UART3_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_DIV_FRAC  -----------------------------
// SVD Line: 20861

unsigned int UART3_DIV_FRAC __AT (0x4001A044);



// ---------------------------  Field Item: UART3_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 20870

//  <item> SFDITEM_FIELD__UART3_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_DIV_FRAC >> 0) & 0xFF), ((UART3_DIV_FRAC = (UART3_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART3_DIV_FRAC  ---------------------------------
// SVD Line: 20861

//  <rtree> SFDITEM_REG__UART3_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((UART3_DIV_FRAC >> 0) & 0xFFFFFFFF), ((UART3_DIV_FRAC = (UART3_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_RS485CR  ------------------------------
// SVD Line: 20879

unsigned int UART3_RS485CR __AT (0x4001A04C);



// -----------------------------  Field Item: UART3_RS485CR_DLYEN  --------------------------------
// SVD Line: 20888

//  <item> SFDITEM_FIELD__UART3_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A04C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_RS485CR_INVPOL  --------------------------------
// SVD Line: 20895

//  <item> SFDITEM_FIELD__UART3_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A04C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_RS485CR_RS485EN  -------------------------------
// SVD Line: 20902

//  <item> SFDITEM_FIELD__UART3_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A04C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART3_RS485CR  ---------------------------------
// SVD Line: 20879

//  <rtree> SFDITEM_REG__UART3_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A04C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((UART3_RS485CR >> 0) & 0xFFFFFFFF), ((UART3_RS485CR = (UART3_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__UART3_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__UART3_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART3_SLADDR  ------------------------------
// SVD Line: 20911

unsigned int UART3_SLADDR __AT (0x4001A050);



// -----------------------------  Field Item: UART3_SLADDR_SLADDR  --------------------------------
// SVD Line: 20920

//  <item> SFDITEM_FIELD__UART3_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_SLADDR >> 0) & 0xFF), ((UART3_SLADDR = (UART3_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART3_SLADDR  ----------------------------------
// SVD Line: 20911

//  <rtree> SFDITEM_REG__UART3_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((UART3_SLADDR >> 0) & 0xFFFFFFFF), ((UART3_SLADDR = (UART3_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART3_CNTR  -------------------------------
// SVD Line: 20929

unsigned int UART3_CNTR __AT (0x4001A054);



// -------------------------------  Field Item: UART3_CNTR_CNTR  ----------------------------------
// SVD Line: 20938

//  <item> SFDITEM_FIELD__UART3_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001A054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART3_CNTR >> 0) & 0xFF), ((UART3_CNTR = (UART3_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART3_CNTR  -----------------------------------
// SVD Line: 20929

//  <rtree> SFDITEM_REG__UART3_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((UART3_CNTR >> 0) & 0xFFFFFFFF), ((UART3_CNTR = (UART3_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART3_MULCOMCR  -----------------------------
// SVD Line: 20947

unsigned int UART3_MULCOMCR __AT (0x4001A058);



// ----------------------------  Field Item: UART3_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 20956

//  <item> SFDITEM_FIELD__UART3_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001A058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART3_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 20963

//  <item> SFDITEM_FIELD__UART3_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001A058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 20970

//  <item> SFDITEM_FIELD__UART3_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001A058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART3_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 20977

//  <item> SFDITEM_FIELD__UART3_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001A058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART3_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART3_MULCOMCR  ---------------------------------
// SVD Line: 20947

//  <rtree> SFDITEM_REG__UART3_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001A058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((UART3_MULCOMCR >> 0) & 0xFFFFFFFF), ((UART3_MULCOMCR = (UART3_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART3_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__UART3_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__UART3_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__UART3_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART3  -------------------------------------
// SVD Line: 20370

//  <view> UART3
//    <name> UART3 </name>
//    <item> SFDITEM_REG__UART3_RBR </item>
//    <item> SFDITEM_REG__UART3_DIV_L </item>
//    <item> SFDITEM_REG__UART3_DIV_H </item>
//    <item> SFDITEM_REG__UART3_LCR0 </item>
//    <item> SFDITEM_REG__UART3_LCR1 </item>
//    <item> SFDITEM_REG__UART3_FCR </item>
//    <item> SFDITEM_REG__UART3_EFR </item>
//    <item> SFDITEM_REG__UART3_IER </item>
//    <item> SFDITEM_REG__UART3_LSR0 </item>
//    <item> SFDITEM_REG__UART3_LSR1 </item>
//    <item> SFDITEM_REG__UART3_SMP_CNT </item>
//    <item> SFDITEM_REG__UART3_GUARD </item>
//    <item> SFDITEM_REG__UART3_SLEEP </item>
//    <item> SFDITEM_REG__UART3_DMA </item>
//    <item> SFDITEM_REG__UART3_DIV_FRAC </item>
//    <item> SFDITEM_REG__UART3_RS485CR </item>
//    <item> SFDITEM_REG__UART3_SLADDR </item>
//    <item> SFDITEM_REG__UART3_CNTR </item>
//    <item> SFDITEM_REG__UART3_MULCOMCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART4_RBR  --------------------------------
// SVD Line: 21004

unsigned int UART4_RBR __AT (0x4001B000);



// ------------------------------  Field Item: UART4_RBR_RBR_THR  ---------------------------------
// SVD Line: 21013

//  <item> SFDITEM_FIELD__UART4_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_RBR >> 0) & 0xFF), ((UART4_RBR = (UART4_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UART4_RBR  -----------------------------------
// SVD Line: 21004

//  <rtree> SFDITEM_REG__UART4_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((UART4_RBR >> 0) & 0xFFFFFFFF), ((UART4_RBR = (UART4_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART4_DIV_L  -------------------------------
// SVD Line: 21022

unsigned int UART4_DIV_L __AT (0x4001B004);



// ------------------------------  Field Item: UART4_DIV_L_DIV_L  ---------------------------------
// SVD Line: 21031

//  <item> SFDITEM_FIELD__UART4_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_DIV_L >> 0) & 0xFF), ((UART4_DIV_L = (UART4_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART4_DIV_L  ----------------------------------
// SVD Line: 21022

//  <rtree> SFDITEM_REG__UART4_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((UART4_DIV_L >> 0) & 0xFFFFFFFF), ((UART4_DIV_L = (UART4_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART4_DIV_H  -------------------------------
// SVD Line: 21040

unsigned int UART4_DIV_H __AT (0x4001B008);



// ------------------------------  Field Item: UART4_DIV_H_DIV_H  ---------------------------------
// SVD Line: 21049

//  <item> SFDITEM_FIELD__UART4_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_DIV_H >> 0) & 0xFF), ((UART4_DIV_H = (UART4_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART4_DIV_H  ----------------------------------
// SVD Line: 21040

//  <rtree> SFDITEM_REG__UART4_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((UART4_DIV_H >> 0) & 0xFFFFFFFF), ((UART4_DIV_H = (UART4_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_LCR0  -------------------------------
// SVD Line: 21058

unsigned int UART4_LCR0 __AT (0x4001B00C);



// -------------------------------  Field Item: UART4_LCR0_WLS  -----------------------------------
// SVD Line: 21067

//  <item> SFDITEM_FIELD__UART4_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001B00C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_LCR0 >> 0) & 0x3), ((UART4_LCR0 = (UART4_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR0_STB  -----------------------------------
// SVD Line: 21074

//  <item> SFDITEM_FIELD__UART4_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B00C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR0_PEN  -----------------------------------
// SVD Line: 21081

//  <item> SFDITEM_FIELD__UART4_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B00C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR0_EPS  -----------------------------------
// SVD Line: 21088

//  <item> SFDITEM_FIELD__UART4_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B00C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LCR0_SP  -----------------------------------
// SVD Line: 21095

//  <item> SFDITEM_FIELD__UART4_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B00C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR0_SUB  -----------------------------------
// SVD Line: 21102

//  <item> SFDITEM_FIELD__UART4_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B00C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_LCR0  -----------------------------------
// SVD Line: 21058

//  <rtree> SFDITEM_REG__UART4_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B00C) uart control register 0 </i>
//    <loc> ( (unsigned int)((UART4_LCR0 >> 0) & 0xFFFFFFFF), ((UART4_LCR0 = (UART4_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__UART4_LCR0_STB </item>
//    <item> SFDITEM_FIELD__UART4_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__UART4_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__UART4_LCR0_SP </item>
//    <item> SFDITEM_FIELD__UART4_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_LCR1  -------------------------------
// SVD Line: 21111

unsigned int UART4_LCR1 __AT (0x4001B010);



// -------------------------------  Field Item: UART4_LCR1_RXEN  ----------------------------------
// SVD Line: 21120

//  <item> SFDITEM_FIELD__UART4_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR1_TXEN  ----------------------------------
// SVD Line: 21127

//  <item> SFDITEM_FIELD__UART4_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR1_LOOP  ----------------------------------
// SVD Line: 21134

//  <item> SFDITEM_FIELD__UART4_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LCR1_WLS2  ----------------------------------
// SVD Line: 21141

//  <item> SFDITEM_FIELD__UART4_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_LCR1_INVRX  ----------------------------------
// SVD Line: 21148

//  <item> SFDITEM_FIELD__UART4_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_LCR1_INVTX  ----------------------------------
// SVD Line: 21155

//  <item> SFDITEM_FIELD__UART4_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_LCR1  -----------------------------------
// SVD Line: 21111

//  <rtree> SFDITEM_REG__UART4_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B010) uart control register 1 </i>
//    <loc> ( (unsigned int)((UART4_LCR1 >> 0) & 0xFFFFFFFF), ((UART4_LCR1 = (UART4_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__UART4_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__UART4_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__UART4_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__UART4_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__UART4_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_FCR  --------------------------------
// SVD Line: 21164

unsigned int UART4_FCR __AT (0x4001B014);



// -------------------------------  Field Item: UART4_FCR_FIFOE  ----------------------------------
// SVD Line: 21173

//  <item> SFDITEM_FIELD__UART4_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART4_FCR  -----------------------------------
// SVD Line: 21164

//  <rtree> SFDITEM_REG__UART4_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((UART4_FCR >> 0) & 0xFFFFFFFF), ((UART4_FCR = (UART4_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_EFR  --------------------------------
// SVD Line: 21182

unsigned int UART4_EFR __AT (0x4001B018);



// --------------------------------  Field Item: UART4_EFR_CTS  -----------------------------------
// SVD Line: 21191

//  <item> SFDITEM_FIELD__UART4_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_EFR_RTS  -----------------------------------
// SVD Line: 21198

//  <item> SFDITEM_FIELD__UART4_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART4_EFR  -----------------------------------
// SVD Line: 21182

//  <rtree> SFDITEM_REG__UART4_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B018) hardware flow control register </i>
//    <loc> ( (unsigned int)((UART4_EFR >> 0) & 0xFFFFFFFF), ((UART4_EFR = (UART4_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_EFR_CTS </item>
//    <item> SFDITEM_FIELD__UART4_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_IER  --------------------------------
// SVD Line: 21207

unsigned int UART4_IER __AT (0x4001B01C);



// -------------------------------  Field Item: UART4_IER_ERXEN  ----------------------------------
// SVD Line: 21216

//  <item> SFDITEM_FIELD__UART4_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B01C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_IER_ETXE  -----------------------------------
// SVD Line: 21223

//  <item> SFDITEM_FIELD__UART4_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B01C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_IER_ETC  -----------------------------------
// SVD Line: 21230

//  <item> SFDITEM_FIELD__UART4_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B01C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_IER_EPE  -----------------------------------
// SVD Line: 21237

//  <item> SFDITEM_FIELD__UART4_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B01C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_IER_EFE  -----------------------------------
// SVD Line: 21244

//  <item> SFDITEM_FIELD__UART4_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B01C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_IER_ENE  -----------------------------------
// SVD Line: 21251

//  <item> SFDITEM_FIELD__UART4_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B01C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_IER_EOEBI  ----------------------------------
// SVD Line: 21258

//  <item> SFDITEM_FIELD__UART4_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B01C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_IER_EDCTS  ----------------------------------
// SVD Line: 21265

//  <item> SFDITEM_FIELD__UART4_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B01C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART4_IER  -----------------------------------
// SVD Line: 21207

//  <rtree> SFDITEM_REG__UART4_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B01C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((UART4_IER >> 0) & 0xFFFFFFFF), ((UART4_IER = (UART4_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__UART4_IER_ETXE </item>
//    <item> SFDITEM_FIELD__UART4_IER_ETC </item>
//    <item> SFDITEM_FIELD__UART4_IER_EPE </item>
//    <item> SFDITEM_FIELD__UART4_IER_EFE </item>
//    <item> SFDITEM_FIELD__UART4_IER_ENE </item>
//    <item> SFDITEM_FIELD__UART4_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__UART4_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_LSR0  -------------------------------
// SVD Line: 21274

unsigned int UART4_LSR0 __AT (0x4001B020);



// --------------------------------  Field Item: UART4_LSR0_DR  -----------------------------------
// SVD Line: 21283

//  <item> SFDITEM_FIELD__UART4_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_OE  -----------------------------------
// SVD Line: 21290

//  <item> SFDITEM_FIELD__UART4_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_PE  -----------------------------------
// SVD Line: 21297

//  <item> SFDITEM_FIELD__UART4_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_FE  -----------------------------------
// SVD Line: 21304

//  <item> SFDITEM_FIELD__UART4_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_BI  -----------------------------------
// SVD Line: 21311

//  <item> SFDITEM_FIELD__UART4_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LSR0_THRE  ----------------------------------
// SVD Line: 21318

//  <item> SFDITEM_FIELD__UART4_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_TC  -----------------------------------
// SVD Line: 21325

//  <item> SFDITEM_FIELD__UART4_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART4_LSR0_NE  -----------------------------------
// SVD Line: 21332

//  <item> SFDITEM_FIELD__UART4_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_LSR0  -----------------------------------
// SVD Line: 21274

//  <rtree> SFDITEM_REG__UART4_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((UART4_LSR0 >> 0) & 0xFFFFFFFF), ((UART4_LSR0 = (UART4_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_LSR0_DR </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_OE </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_PE </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_FE </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_BI </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_TC </item>
//    <item> SFDITEM_FIELD__UART4_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_LSR1  -------------------------------
// SVD Line: 21341

unsigned int UART4_LSR1 __AT (0x4001B024);



// -------------------------------  Field Item: UART4_LSR1_IDLE  ----------------------------------
// SVD Line: 21350

//  <item> SFDITEM_FIELD__UART4_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LSR1_FBRK  ----------------------------------
// SVD Line: 21357

//  <item> SFDITEM_FIELD__UART4_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001B024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LSR1_DCTS  ----------------------------------
// SVD Line: 21364

//  <item> SFDITEM_FIELD__UART4_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001B024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_LSR1_UART_IDLE  --------------------------------
// SVD Line: 21371

//  <item> SFDITEM_FIELD__UART4_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LSR1_CTS  -----------------------------------
// SVD Line: 21378

//  <item> SFDITEM_FIELD__UART4_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART4_LSR1_RTS  -----------------------------------
// SVD Line: 21385

//  <item> SFDITEM_FIELD__UART4_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_LSR1  -----------------------------------
// SVD Line: 21341

//  <rtree> SFDITEM_REG__UART4_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((UART4_LSR1 >> 0) & 0xFFFFFFFF), ((UART4_LSR1 = (UART4_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__UART4_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__UART4_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__UART4_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__UART4_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__UART4_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_SMP_CNT  ------------------------------
// SVD Line: 21394

unsigned int UART4_SMP_CNT __AT (0x4001B028);



// ----------------------------  Field Item: UART4_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 21403

//  <item> SFDITEM_FIELD__UART4_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001B028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_SMP_CNT >> 0) & 0x3), ((UART4_SMP_CNT = (UART4_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART4_SMP_CNT  ---------------------------------
// SVD Line: 21394

//  <rtree> SFDITEM_REG__UART4_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B028) uart sample counter register </i>
//    <loc> ( (unsigned int)((UART4_SMP_CNT >> 0) & 0xFFFFFFFF), ((UART4_SMP_CNT = (UART4_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART4_GUARD  -------------------------------
// SVD Line: 21412

unsigned int UART4_GUARD __AT (0x4001B034);



// ----------------------------  Field Item: UART4_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 21421

//  <item> SFDITEM_FIELD__UART4_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001B034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_GUARD >> 0) & 0xF), ((UART4_GUARD = (UART4_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UART4_GUARD_GUARD_EN  --------------------------------
// SVD Line: 21428

//  <item> SFDITEM_FIELD__UART4_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_GUARD  ----------------------------------
// SVD Line: 21412

//  <rtree> SFDITEM_REG__UART4_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B034) uart guard time register </i>
//    <loc> ( (unsigned int)((UART4_GUARD >> 0) & 0xFFFFFFFF), ((UART4_GUARD = (UART4_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__UART4_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART4_SLEEP  -------------------------------
// SVD Line: 21437

unsigned int UART4_SLEEP __AT (0x4001B03C);



// ----------------------------  Field Item: UART4_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 21446

//  <item> SFDITEM_FIELD__UART4_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B03C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART4_SLEEP  ----------------------------------
// SVD Line: 21437

//  <rtree> SFDITEM_REG__UART4_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B03C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((UART4_SLEEP >> 0) & 0xFFFFFFFF), ((UART4_SLEEP = (UART4_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_DMA  --------------------------------
// SVD Line: 21455

unsigned int UART4_DMA __AT (0x4001B040);



// ------------------------------  Field Item: UART4_DMA_RXDMAEN  ---------------------------------
// SVD Line: 21464

//  <item> SFDITEM_FIELD__UART4_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001B040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART4_DMA_TXDMAEN  ---------------------------------
// SVD Line: 21471

//  <item> SFDITEM_FIELD__UART4_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001B040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART4_DMA  -----------------------------------
// SVD Line: 21455

//  <rtree> SFDITEM_REG__UART4_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((UART4_DMA >> 0) & 0xFFFFFFFF), ((UART4_DMA = (UART4_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UART4_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_DIV_FRAC  -----------------------------
// SVD Line: 21480

unsigned int UART4_DIV_FRAC __AT (0x4001B044);



// ---------------------------  Field Item: UART4_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 21489

//  <item> SFDITEM_FIELD__UART4_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_DIV_FRAC >> 0) & 0xFF), ((UART4_DIV_FRAC = (UART4_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART4_DIV_FRAC  ---------------------------------
// SVD Line: 21480

//  <rtree> SFDITEM_REG__UART4_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((UART4_DIV_FRAC >> 0) & 0xFFFFFFFF), ((UART4_DIV_FRAC = (UART4_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_RS485CR  ------------------------------
// SVD Line: 21498

unsigned int UART4_RS485CR __AT (0x4001B04C);



// -----------------------------  Field Item: UART4_RS485CR_DLYEN  --------------------------------
// SVD Line: 21507

//  <item> SFDITEM_FIELD__UART4_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B04C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_RS485CR_INVPOL  --------------------------------
// SVD Line: 21514

//  <item> SFDITEM_FIELD__UART4_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B04C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_RS485CR_RS485EN  -------------------------------
// SVD Line: 21521

//  <item> SFDITEM_FIELD__UART4_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B04C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART4_RS485CR  ---------------------------------
// SVD Line: 21498

//  <rtree> SFDITEM_REG__UART4_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B04C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((UART4_RS485CR >> 0) & 0xFFFFFFFF), ((UART4_RS485CR = (UART4_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__UART4_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__UART4_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART4_SLADDR  ------------------------------
// SVD Line: 21530

unsigned int UART4_SLADDR __AT (0x4001B050);



// -----------------------------  Field Item: UART4_SLADDR_SLADDR  --------------------------------
// SVD Line: 21539

//  <item> SFDITEM_FIELD__UART4_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_SLADDR >> 0) & 0xFF), ((UART4_SLADDR = (UART4_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART4_SLADDR  ----------------------------------
// SVD Line: 21530

//  <rtree> SFDITEM_REG__UART4_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((UART4_SLADDR >> 0) & 0xFFFFFFFF), ((UART4_SLADDR = (UART4_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART4_CNTR  -------------------------------
// SVD Line: 21548

unsigned int UART4_CNTR __AT (0x4001B054);



// -------------------------------  Field Item: UART4_CNTR_CNTR  ----------------------------------
// SVD Line: 21557

//  <item> SFDITEM_FIELD__UART4_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001B054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART4_CNTR >> 0) & 0xFF), ((UART4_CNTR = (UART4_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART4_CNTR  -----------------------------------
// SVD Line: 21548

//  <rtree> SFDITEM_REG__UART4_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((UART4_CNTR >> 0) & 0xFFFFFFFF), ((UART4_CNTR = (UART4_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART4_MULCOMCR  -----------------------------
// SVD Line: 21566

unsigned int UART4_MULCOMCR __AT (0x4001B058);



// ----------------------------  Field Item: UART4_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 21575

//  <item> SFDITEM_FIELD__UART4_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001B058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART4_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 21582

//  <item> SFDITEM_FIELD__UART4_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001B058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 21589

//  <item> SFDITEM_FIELD__UART4_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001B058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART4_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 21596

//  <item> SFDITEM_FIELD__UART4_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001B058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART4_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART4_MULCOMCR  ---------------------------------
// SVD Line: 21566

//  <rtree> SFDITEM_REG__UART4_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001B058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((UART4_MULCOMCR >> 0) & 0xFFFFFFFF), ((UART4_MULCOMCR = (UART4_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART4_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__UART4_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__UART4_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__UART4_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART4  -------------------------------------
// SVD Line: 20989

//  <view> UART4
//    <name> UART4 </name>
//    <item> SFDITEM_REG__UART4_RBR </item>
//    <item> SFDITEM_REG__UART4_DIV_L </item>
//    <item> SFDITEM_REG__UART4_DIV_H </item>
//    <item> SFDITEM_REG__UART4_LCR0 </item>
//    <item> SFDITEM_REG__UART4_LCR1 </item>
//    <item> SFDITEM_REG__UART4_FCR </item>
//    <item> SFDITEM_REG__UART4_EFR </item>
//    <item> SFDITEM_REG__UART4_IER </item>
//    <item> SFDITEM_REG__UART4_LSR0 </item>
//    <item> SFDITEM_REG__UART4_LSR1 </item>
//    <item> SFDITEM_REG__UART4_SMP_CNT </item>
//    <item> SFDITEM_REG__UART4_GUARD </item>
//    <item> SFDITEM_REG__UART4_SLEEP </item>
//    <item> SFDITEM_REG__UART4_DMA </item>
//    <item> SFDITEM_REG__UART4_DIV_FRAC </item>
//    <item> SFDITEM_REG__UART4_RS485CR </item>
//    <item> SFDITEM_REG__UART4_SLADDR </item>
//    <item> SFDITEM_REG__UART4_CNTR </item>
//    <item> SFDITEM_REG__UART4_MULCOMCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART5_RBR  --------------------------------
// SVD Line: 21623

unsigned int UART5_RBR __AT (0x4001C000);



// ------------------------------  Field Item: UART5_RBR_RBR_THR  ---------------------------------
// SVD Line: 21632

//  <item> SFDITEM_FIELD__UART5_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_RBR >> 0) & 0xFF), ((UART5_RBR = (UART5_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UART5_RBR  -----------------------------------
// SVD Line: 21623

//  <rtree> SFDITEM_REG__UART5_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((UART5_RBR >> 0) & 0xFFFFFFFF), ((UART5_RBR = (UART5_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART5_DIV_L  -------------------------------
// SVD Line: 21641

unsigned int UART5_DIV_L __AT (0x4001C004);



// ------------------------------  Field Item: UART5_DIV_L_DIV_L  ---------------------------------
// SVD Line: 21650

//  <item> SFDITEM_FIELD__UART5_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_DIV_L >> 0) & 0xFF), ((UART5_DIV_L = (UART5_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART5_DIV_L  ----------------------------------
// SVD Line: 21641

//  <rtree> SFDITEM_REG__UART5_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((UART5_DIV_L >> 0) & 0xFFFFFFFF), ((UART5_DIV_L = (UART5_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART5_DIV_H  -------------------------------
// SVD Line: 21659

unsigned int UART5_DIV_H __AT (0x4001C008);



// ------------------------------  Field Item: UART5_DIV_H_DIV_H  ---------------------------------
// SVD Line: 21668

//  <item> SFDITEM_FIELD__UART5_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_DIV_H >> 0) & 0xFF), ((UART5_DIV_H = (UART5_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART5_DIV_H  ----------------------------------
// SVD Line: 21659

//  <rtree> SFDITEM_REG__UART5_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((UART5_DIV_H >> 0) & 0xFFFFFFFF), ((UART5_DIV_H = (UART5_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_LCR0  -------------------------------
// SVD Line: 21677

unsigned int UART5_LCR0 __AT (0x4001C00C);



// -------------------------------  Field Item: UART5_LCR0_WLS  -----------------------------------
// SVD Line: 21686

//  <item> SFDITEM_FIELD__UART5_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001C00C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_LCR0 >> 0) & 0x3), ((UART5_LCR0 = (UART5_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR0_STB  -----------------------------------
// SVD Line: 21693

//  <item> SFDITEM_FIELD__UART5_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001C00C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR0_PEN  -----------------------------------
// SVD Line: 21700

//  <item> SFDITEM_FIELD__UART5_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001C00C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR0_EPS  -----------------------------------
// SVD Line: 21707

//  <item> SFDITEM_FIELD__UART5_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C00C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LCR0_SP  -----------------------------------
// SVD Line: 21714

//  <item> SFDITEM_FIELD__UART5_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C00C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR0_SUB  -----------------------------------
// SVD Line: 21721

//  <item> SFDITEM_FIELD__UART5_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C00C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_LCR0  -----------------------------------
// SVD Line: 21677

//  <rtree> SFDITEM_REG__UART5_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C00C) uart control register 0 </i>
//    <loc> ( (unsigned int)((UART5_LCR0 >> 0) & 0xFFFFFFFF), ((UART5_LCR0 = (UART5_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__UART5_LCR0_STB </item>
//    <item> SFDITEM_FIELD__UART5_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__UART5_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__UART5_LCR0_SP </item>
//    <item> SFDITEM_FIELD__UART5_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_LCR1  -------------------------------
// SVD Line: 21730

unsigned int UART5_LCR1 __AT (0x4001C010);



// -------------------------------  Field Item: UART5_LCR1_RXEN  ----------------------------------
// SVD Line: 21739

//  <item> SFDITEM_FIELD__UART5_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR1_TXEN  ----------------------------------
// SVD Line: 21746

//  <item> SFDITEM_FIELD__UART5_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001C010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR1_LOOP  ----------------------------------
// SVD Line: 21753

//  <item> SFDITEM_FIELD__UART5_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LCR1_WLS2  ----------------------------------
// SVD Line: 21760

//  <item> SFDITEM_FIELD__UART5_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_LCR1_INVRX  ----------------------------------
// SVD Line: 21767

//  <item> SFDITEM_FIELD__UART5_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_LCR1_INVTX  ----------------------------------
// SVD Line: 21774

//  <item> SFDITEM_FIELD__UART5_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_LCR1  -----------------------------------
// SVD Line: 21730

//  <rtree> SFDITEM_REG__UART5_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C010) uart control register 1 </i>
//    <loc> ( (unsigned int)((UART5_LCR1 >> 0) & 0xFFFFFFFF), ((UART5_LCR1 = (UART5_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__UART5_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__UART5_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__UART5_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__UART5_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__UART5_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_FCR  --------------------------------
// SVD Line: 21783

unsigned int UART5_FCR __AT (0x4001C014);



// -------------------------------  Field Item: UART5_FCR_FIFOE  ----------------------------------
// SVD Line: 21792

//  <item> SFDITEM_FIELD__UART5_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART5_FCR  -----------------------------------
// SVD Line: 21783

//  <rtree> SFDITEM_REG__UART5_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((UART5_FCR >> 0) & 0xFFFFFFFF), ((UART5_FCR = (UART5_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_EFR  --------------------------------
// SVD Line: 21801

unsigned int UART5_EFR __AT (0x4001C018);



// --------------------------------  Field Item: UART5_EFR_CTS  -----------------------------------
// SVD Line: 21810

//  <item> SFDITEM_FIELD__UART5_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_EFR_RTS  -----------------------------------
// SVD Line: 21817

//  <item> SFDITEM_FIELD__UART5_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART5_EFR  -----------------------------------
// SVD Line: 21801

//  <rtree> SFDITEM_REG__UART5_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C018) hardware flow control register </i>
//    <loc> ( (unsigned int)((UART5_EFR >> 0) & 0xFFFFFFFF), ((UART5_EFR = (UART5_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_EFR_CTS </item>
//    <item> SFDITEM_FIELD__UART5_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_IER  --------------------------------
// SVD Line: 21826

unsigned int UART5_IER __AT (0x4001C01C);



// -------------------------------  Field Item: UART5_IER_ERXEN  ----------------------------------
// SVD Line: 21835

//  <item> SFDITEM_FIELD__UART5_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C01C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_IER_ETXE  -----------------------------------
// SVD Line: 21842

//  <item> SFDITEM_FIELD__UART5_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001C01C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_IER_ETC  -----------------------------------
// SVD Line: 21849

//  <item> SFDITEM_FIELD__UART5_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001C01C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_IER_EPE  -----------------------------------
// SVD Line: 21856

//  <item> SFDITEM_FIELD__UART5_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001C01C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_IER_EFE  -----------------------------------
// SVD Line: 21863

//  <item> SFDITEM_FIELD__UART5_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C01C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_IER_ENE  -----------------------------------
// SVD Line: 21870

//  <item> SFDITEM_FIELD__UART5_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C01C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_IER_EOEBI  ----------------------------------
// SVD Line: 21877

//  <item> SFDITEM_FIELD__UART5_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C01C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_IER_EDCTS  ----------------------------------
// SVD Line: 21884

//  <item> SFDITEM_FIELD__UART5_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C01C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART5_IER  -----------------------------------
// SVD Line: 21826

//  <rtree> SFDITEM_REG__UART5_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C01C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((UART5_IER >> 0) & 0xFFFFFFFF), ((UART5_IER = (UART5_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__UART5_IER_ETXE </item>
//    <item> SFDITEM_FIELD__UART5_IER_ETC </item>
//    <item> SFDITEM_FIELD__UART5_IER_EPE </item>
//    <item> SFDITEM_FIELD__UART5_IER_EFE </item>
//    <item> SFDITEM_FIELD__UART5_IER_ENE </item>
//    <item> SFDITEM_FIELD__UART5_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__UART5_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_LSR0  -------------------------------
// SVD Line: 21893

unsigned int UART5_LSR0 __AT (0x4001C020);



// --------------------------------  Field Item: UART5_LSR0_DR  -----------------------------------
// SVD Line: 21902

//  <item> SFDITEM_FIELD__UART5_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_OE  -----------------------------------
// SVD Line: 21909

//  <item> SFDITEM_FIELD__UART5_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001C020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_PE  -----------------------------------
// SVD Line: 21916

//  <item> SFDITEM_FIELD__UART5_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001C020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_FE  -----------------------------------
// SVD Line: 21923

//  <item> SFDITEM_FIELD__UART5_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001C020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_BI  -----------------------------------
// SVD Line: 21930

//  <item> SFDITEM_FIELD__UART5_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LSR0_THRE  ----------------------------------
// SVD Line: 21937

//  <item> SFDITEM_FIELD__UART5_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_TC  -----------------------------------
// SVD Line: 21944

//  <item> SFDITEM_FIELD__UART5_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART5_LSR0_NE  -----------------------------------
// SVD Line: 21951

//  <item> SFDITEM_FIELD__UART5_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_LSR0  -----------------------------------
// SVD Line: 21893

//  <rtree> SFDITEM_REG__UART5_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((UART5_LSR0 >> 0) & 0xFFFFFFFF), ((UART5_LSR0 = (UART5_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_LSR0_DR </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_OE </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_PE </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_FE </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_BI </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_TC </item>
//    <item> SFDITEM_FIELD__UART5_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_LSR1  -------------------------------
// SVD Line: 21960

unsigned int UART5_LSR1 __AT (0x4001C024);



// -------------------------------  Field Item: UART5_LSR1_IDLE  ----------------------------------
// SVD Line: 21969

//  <item> SFDITEM_FIELD__UART5_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LSR1_FBRK  ----------------------------------
// SVD Line: 21976

//  <item> SFDITEM_FIELD__UART5_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001C024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LSR1_DCTS  ----------------------------------
// SVD Line: 21983

//  <item> SFDITEM_FIELD__UART5_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001C024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_LSR1_UART_IDLE  --------------------------------
// SVD Line: 21990

//  <item> SFDITEM_FIELD__UART5_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LSR1_CTS  -----------------------------------
// SVD Line: 21997

//  <item> SFDITEM_FIELD__UART5_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART5_LSR1_RTS  -----------------------------------
// SVD Line: 22004

//  <item> SFDITEM_FIELD__UART5_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_LSR1  -----------------------------------
// SVD Line: 21960

//  <rtree> SFDITEM_REG__UART5_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((UART5_LSR1 >> 0) & 0xFFFFFFFF), ((UART5_LSR1 = (UART5_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__UART5_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__UART5_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__UART5_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__UART5_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__UART5_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_SMP_CNT  ------------------------------
// SVD Line: 22013

unsigned int UART5_SMP_CNT __AT (0x4001C028);



// ----------------------------  Field Item: UART5_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 22022

//  <item> SFDITEM_FIELD__UART5_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001C028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_SMP_CNT >> 0) & 0x3), ((UART5_SMP_CNT = (UART5_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART5_SMP_CNT  ---------------------------------
// SVD Line: 22013

//  <rtree> SFDITEM_REG__UART5_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C028) uart sample counter register </i>
//    <loc> ( (unsigned int)((UART5_SMP_CNT >> 0) & 0xFFFFFFFF), ((UART5_SMP_CNT = (UART5_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART5_GUARD  -------------------------------
// SVD Line: 22031

unsigned int UART5_GUARD __AT (0x4001C034);



// ----------------------------  Field Item: UART5_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 22040

//  <item> SFDITEM_FIELD__UART5_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001C034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_GUARD >> 0) & 0xF), ((UART5_GUARD = (UART5_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UART5_GUARD_GUARD_EN  --------------------------------
// SVD Line: 22047

//  <item> SFDITEM_FIELD__UART5_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_GUARD  ----------------------------------
// SVD Line: 22031

//  <rtree> SFDITEM_REG__UART5_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C034) uart guard time register </i>
//    <loc> ( (unsigned int)((UART5_GUARD >> 0) & 0xFFFFFFFF), ((UART5_GUARD = (UART5_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__UART5_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART5_SLEEP  -------------------------------
// SVD Line: 22056

unsigned int UART5_SLEEP __AT (0x4001C03C);



// ----------------------------  Field Item: UART5_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 22065

//  <item> SFDITEM_FIELD__UART5_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C03C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART5_SLEEP  ----------------------------------
// SVD Line: 22056

//  <rtree> SFDITEM_REG__UART5_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C03C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((UART5_SLEEP >> 0) & 0xFFFFFFFF), ((UART5_SLEEP = (UART5_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_DMA  --------------------------------
// SVD Line: 22074

unsigned int UART5_DMA __AT (0x4001C040);



// ------------------------------  Field Item: UART5_DMA_RXDMAEN  ---------------------------------
// SVD Line: 22083

//  <item> SFDITEM_FIELD__UART5_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001C040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART5_DMA_TXDMAEN  ---------------------------------
// SVD Line: 22090

//  <item> SFDITEM_FIELD__UART5_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001C040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART5_DMA  -----------------------------------
// SVD Line: 22074

//  <rtree> SFDITEM_REG__UART5_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((UART5_DMA >> 0) & 0xFFFFFFFF), ((UART5_DMA = (UART5_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UART5_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_DIV_FRAC  -----------------------------
// SVD Line: 22099

unsigned int UART5_DIV_FRAC __AT (0x4001C044);



// ---------------------------  Field Item: UART5_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 22108

//  <item> SFDITEM_FIELD__UART5_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_DIV_FRAC >> 0) & 0xFF), ((UART5_DIV_FRAC = (UART5_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART5_DIV_FRAC  ---------------------------------
// SVD Line: 22099

//  <rtree> SFDITEM_REG__UART5_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((UART5_DIV_FRAC >> 0) & 0xFFFFFFFF), ((UART5_DIV_FRAC = (UART5_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_RS485CR  ------------------------------
// SVD Line: 22117

unsigned int UART5_RS485CR __AT (0x4001C04C);



// -----------------------------  Field Item: UART5_RS485CR_DLYEN  --------------------------------
// SVD Line: 22126

//  <item> SFDITEM_FIELD__UART5_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C04C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_RS485CR_INVPOL  --------------------------------
// SVD Line: 22133

//  <item> SFDITEM_FIELD__UART5_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C04C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_RS485CR_RS485EN  -------------------------------
// SVD Line: 22140

//  <item> SFDITEM_FIELD__UART5_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C04C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART5_RS485CR  ---------------------------------
// SVD Line: 22117

//  <rtree> SFDITEM_REG__UART5_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C04C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((UART5_RS485CR >> 0) & 0xFFFFFFFF), ((UART5_RS485CR = (UART5_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__UART5_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__UART5_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART5_SLADDR  ------------------------------
// SVD Line: 22149

unsigned int UART5_SLADDR __AT (0x4001C050);



// -----------------------------  Field Item: UART5_SLADDR_SLADDR  --------------------------------
// SVD Line: 22158

//  <item> SFDITEM_FIELD__UART5_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_SLADDR >> 0) & 0xFF), ((UART5_SLADDR = (UART5_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART5_SLADDR  ----------------------------------
// SVD Line: 22149

//  <rtree> SFDITEM_REG__UART5_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((UART5_SLADDR >> 0) & 0xFFFFFFFF), ((UART5_SLADDR = (UART5_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART5_CNTR  -------------------------------
// SVD Line: 22167

unsigned int UART5_CNTR __AT (0x4001C054);



// -------------------------------  Field Item: UART5_CNTR_CNTR  ----------------------------------
// SVD Line: 22176

//  <item> SFDITEM_FIELD__UART5_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001C054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART5_CNTR >> 0) & 0xFF), ((UART5_CNTR = (UART5_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART5_CNTR  -----------------------------------
// SVD Line: 22167

//  <rtree> SFDITEM_REG__UART5_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((UART5_CNTR >> 0) & 0xFFFFFFFF), ((UART5_CNTR = (UART5_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART5_MULCOMCR  -----------------------------
// SVD Line: 22185

unsigned int UART5_MULCOMCR __AT (0x4001C058);



// ----------------------------  Field Item: UART5_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 22194

//  <item> SFDITEM_FIELD__UART5_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001C058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART5_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 22201

//  <item> SFDITEM_FIELD__UART5_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001C058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART5_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 22208

//  <item> SFDITEM_FIELD__UART5_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001C058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART5_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 22215

//  <item> SFDITEM_FIELD__UART5_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001C058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART5_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART5_MULCOMCR  ---------------------------------
// SVD Line: 22185

//  <rtree> SFDITEM_REG__UART5_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001C058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((UART5_MULCOMCR >> 0) & 0xFFFFFFFF), ((UART5_MULCOMCR = (UART5_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART5_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__UART5_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__UART5_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__UART5_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART5  -------------------------------------
// SVD Line: 21608

//  <view> UART5
//    <name> UART5 </name>
//    <item> SFDITEM_REG__UART5_RBR </item>
//    <item> SFDITEM_REG__UART5_DIV_L </item>
//    <item> SFDITEM_REG__UART5_DIV_H </item>
//    <item> SFDITEM_REG__UART5_LCR0 </item>
//    <item> SFDITEM_REG__UART5_LCR1 </item>
//    <item> SFDITEM_REG__UART5_FCR </item>
//    <item> SFDITEM_REG__UART5_EFR </item>
//    <item> SFDITEM_REG__UART5_IER </item>
//    <item> SFDITEM_REG__UART5_LSR0 </item>
//    <item> SFDITEM_REG__UART5_LSR1 </item>
//    <item> SFDITEM_REG__UART5_SMP_CNT </item>
//    <item> SFDITEM_REG__UART5_GUARD </item>
//    <item> SFDITEM_REG__UART5_SLEEP </item>
//    <item> SFDITEM_REG__UART5_DMA </item>
//    <item> SFDITEM_REG__UART5_DIV_FRAC </item>
//    <item> SFDITEM_REG__UART5_RS485CR </item>
//    <item> SFDITEM_REG__UART5_SLADDR </item>
//    <item> SFDITEM_REG__UART5_CNTR </item>
//    <item> SFDITEM_REG__UART5_MULCOMCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: UART6_RBR  --------------------------------
// SVD Line: 22242

unsigned int UART6_RBR __AT (0x4001D000);



// ------------------------------  Field Item: UART6_RBR_RBR_THR  ---------------------------------
// SVD Line: 22251

//  <item> SFDITEM_FIELD__UART6_RBR_RBR_THR
//    <name> RBR_THR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D000) RX/TX Data Register </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_RBR >> 0) & 0xFF), ((UART6_RBR = (UART6_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: UART6_RBR  -----------------------------------
// SVD Line: 22242

//  <rtree> SFDITEM_REG__UART6_RBR
//    <name> RBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D000) RX/TX Data Register </i>
//    <loc> ( (unsigned int)((UART6_RBR >> 0) & 0xFFFFFFFF), ((UART6_RBR = (UART6_RBR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_RBR_RBR_THR </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_DIV_L  -------------------------------
// SVD Line: 22260

unsigned int UART6_DIV_L __AT (0x4001D004);



// ------------------------------  Field Item: UART6_DIV_L_DIV_L  ---------------------------------
// SVD Line: 22269

//  <item> SFDITEM_FIELD__UART6_DIV_L_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D004) uart baud rate divisor low 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_DIV_L >> 0) & 0xFF), ((UART6_DIV_L = (UART6_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART6_DIV_L  ----------------------------------
// SVD Line: 22260

//  <rtree> SFDITEM_REG__UART6_DIV_L
//    <name> DIV_L </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D004) Divisor low 8 bits register </i>
//    <loc> ( (unsigned int)((UART6_DIV_L >> 0) & 0xFFFFFFFF), ((UART6_DIV_L = (UART6_DIV_L & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_DIV_L_DIV_L </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_DIV_H  -------------------------------
// SVD Line: 22278

unsigned int UART6_DIV_H __AT (0x4001D008);



// ------------------------------  Field Item: UART6_DIV_H_DIV_H  ---------------------------------
// SVD Line: 22287

//  <item> SFDITEM_FIELD__UART6_DIV_H_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D008) uart baud rate divisor high 8 bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_DIV_H >> 0) & 0xFF), ((UART6_DIV_H = (UART6_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART6_DIV_H  ----------------------------------
// SVD Line: 22278

//  <rtree> SFDITEM_REG__UART6_DIV_H
//    <name> DIV_H </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D008) Divisor high 8 bits register </i>
//    <loc> ( (unsigned int)((UART6_DIV_H >> 0) & 0xFFFFFFFF), ((UART6_DIV_H = (UART6_DIV_H & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_DIV_H_DIV_H </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_LCR0  -------------------------------
// SVD Line: 22296

unsigned int UART6_LCR0 __AT (0x4001D00C);



// -------------------------------  Field Item: UART6_LCR0_WLS  -----------------------------------
// SVD Line: 22305

//  <item> SFDITEM_FIELD__UART6_LCR0_WLS
//    <name> WLS </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001D00C) uart data mode select bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_LCR0 >> 0) & 0x3), ((UART6_LCR0 = (UART6_LCR0 & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR0_STB  -----------------------------------
// SVD Line: 22312

//  <item> SFDITEM_FIELD__UART6_LCR0_STB
//    <name> STB </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001D00C) Number of STOP bits </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR0 ) </loc>
//      <o.2..2> STB
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR0_PEN  -----------------------------------
// SVD Line: 22319

//  <item> SFDITEM_FIELD__UART6_LCR0_PEN
//    <name> PEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D00C) uart parity enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR0 ) </loc>
//      <o.3..3> PEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR0_EPS  -----------------------------------
// SVD Line: 22326

//  <item> SFDITEM_FIELD__UART6_LCR0_EPS
//    <name> EPS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D00C) odd/eveen number select bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR0 ) </loc>
//      <o.4..4> EPS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LCR0_SP  -----------------------------------
// SVD Line: 22333

//  <item> SFDITEM_FIELD__UART6_LCR0_SP
//    <name> SP </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D00C) stick parity </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR0 ) </loc>
//      <o.5..5> SP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR0_SUB  -----------------------------------
// SVD Line: 22340

//  <item> SFDITEM_FIELD__UART6_LCR0_SUB
//    <name> SUB </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D00C) Sets up break </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR0 ) </loc>
//      <o.6..6> SUB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_LCR0  -----------------------------------
// SVD Line: 22296

//  <rtree> SFDITEM_REG__UART6_LCR0
//    <name> LCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D00C) uart control register 0 </i>
//    <loc> ( (unsigned int)((UART6_LCR0 >> 0) & 0xFFFFFFFF), ((UART6_LCR0 = (UART6_LCR0 & ~(0x7FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_LCR0_WLS </item>
//    <item> SFDITEM_FIELD__UART6_LCR0_STB </item>
//    <item> SFDITEM_FIELD__UART6_LCR0_PEN </item>
//    <item> SFDITEM_FIELD__UART6_LCR0_EPS </item>
//    <item> SFDITEM_FIELD__UART6_LCR0_SP </item>
//    <item> SFDITEM_FIELD__UART6_LCR0_SUB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_LCR1  -------------------------------
// SVD Line: 22349

unsigned int UART6_LCR1 __AT (0x4001D010);



// -------------------------------  Field Item: UART6_LCR1_RXEN  ----------------------------------
// SVD Line: 22358

//  <item> SFDITEM_FIELD__UART6_LCR1_RXEN
//    <name> RXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D010) uart receiver enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.0..0> RXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR1_TXEN  ----------------------------------
// SVD Line: 22365

//  <item> SFDITEM_FIELD__UART6_LCR1_TXEN
//    <name> TXEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001D010) uart Transmitter enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.1..1> TXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR1_LOOP  ----------------------------------
// SVD Line: 22372

//  <item> SFDITEM_FIELD__UART6_LCR1_LOOP
//    <name> LOOP </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D010) uart loop back mode enable </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.4..4> LOOP
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LCR1_WLS2  ----------------------------------
// SVD Line: 22379

//  <item> SFDITEM_FIELD__UART6_LCR1_WLS2
//    <name> WLS2 </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D010) uart 9 bit data mode enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.5..5> WLS2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART6_LCR1_INVRX  ----------------------------------
// SVD Line: 22386

//  <item> SFDITEM_FIELD__UART6_LCR1_INVRX
//    <name> INVRX </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D010) uart rx input inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.6..6> INVRX
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART6_LCR1_INVTX  ----------------------------------
// SVD Line: 22393

//  <item> SFDITEM_FIELD__UART6_LCR1_INVTX
//    <name> INVTX </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D010) uart tx output inverse enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LCR1 ) </loc>
//      <o.7..7> INVTX
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_LCR1  -----------------------------------
// SVD Line: 22349

//  <rtree> SFDITEM_REG__UART6_LCR1
//    <name> LCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D010) uart control register 1 </i>
//    <loc> ( (unsigned int)((UART6_LCR1 >> 0) & 0xFFFFFFFF), ((UART6_LCR1 = (UART6_LCR1 & ~(0xF3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_LCR1_RXEN </item>
//    <item> SFDITEM_FIELD__UART6_LCR1_TXEN </item>
//    <item> SFDITEM_FIELD__UART6_LCR1_LOOP </item>
//    <item> SFDITEM_FIELD__UART6_LCR1_WLS2 </item>
//    <item> SFDITEM_FIELD__UART6_LCR1_INVRX </item>
//    <item> SFDITEM_FIELD__UART6_LCR1_INVTX </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_FCR  --------------------------------
// SVD Line: 22402

unsigned int UART6_FCR __AT (0x4001D014);



// -------------------------------  Field Item: UART6_FCR_FIFOE  ----------------------------------
// SVD Line: 22411

//  <item> SFDITEM_FIELD__UART6_FCR_FIFOE
//    <name> FIFOE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D014) RX and TX FIFO enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_FCR ) </loc>
//      <o.0..0> FIFOE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART6_FCR  -----------------------------------
// SVD Line: 22402

//  <rtree> SFDITEM_REG__UART6_FCR
//    <name> FCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D014) FIFO Control Register </i>
//    <loc> ( (unsigned int)((UART6_FCR >> 0) & 0xFFFFFFFF), ((UART6_FCR = (UART6_FCR & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_FCR_FIFOE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_EFR  --------------------------------
// SVD Line: 22420

unsigned int UART6_EFR __AT (0x4001D018);



// --------------------------------  Field Item: UART6_EFR_CTS  -----------------------------------
// SVD Line: 22429

//  <item> SFDITEM_FIELD__UART6_EFR_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D018) hardware transmiison flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_EFR ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_EFR_RTS  -----------------------------------
// SVD Line: 22436

//  <item> SFDITEM_FIELD__UART6_EFR_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D018) hardware reception flow control enable/disable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_EFR ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART6_EFR  -----------------------------------
// SVD Line: 22420

//  <rtree> SFDITEM_REG__UART6_EFR
//    <name> EFR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D018) hardware flow control register </i>
//    <loc> ( (unsigned int)((UART6_EFR >> 0) & 0xFFFFFFFF), ((UART6_EFR = (UART6_EFR & ~(0xC0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xC0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_EFR_CTS </item>
//    <item> SFDITEM_FIELD__UART6_EFR_RTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_IER  --------------------------------
// SVD Line: 22445

unsigned int UART6_IER __AT (0x4001D01C);



// -------------------------------  Field Item: UART6_IER_ERXEN  ----------------------------------
// SVD Line: 22454

//  <item> SFDITEM_FIELD__UART6_IER_ERXEN
//    <name> ERXEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D01C) receiving data not empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.0..0> ERXEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_IER_ETXE  -----------------------------------
// SVD Line: 22461

//  <item> SFDITEM_FIELD__UART6_IER_ETXE
//    <name> ETXE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001D01C) transmitting data empty interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.1..1> ETXE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_IER_ETC  -----------------------------------
// SVD Line: 22468

//  <item> SFDITEM_FIELD__UART6_IER_ETC
//    <name> ETC </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001D01C) transmitting completed interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.2..2> ETC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_IER_EPE  -----------------------------------
// SVD Line: 22475

//  <item> SFDITEM_FIELD__UART6_IER_EPE
//    <name> EPE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D01C) parity error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.3..3> EPE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_IER_EFE  -----------------------------------
// SVD Line: 22482

//  <item> SFDITEM_FIELD__UART6_IER_EFE
//    <name> EFE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D01C) overflow or frame error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.4..4> EFE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_IER_ENE  -----------------------------------
// SVD Line: 22489

//  <item> SFDITEM_FIELD__UART6_IER_ENE
//    <name> ENE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D01C) noise error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.5..5> ENE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_IER_EOEBI  ----------------------------------
// SVD Line: 22496

//  <item> SFDITEM_FIELD__UART6_IER_EOEBI
//    <name> EOEBI </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D01C) overflow error or break error interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.6..6> EOEBI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_IER_EDCTS  ----------------------------------
// SVD Line: 22503

//  <item> SFDITEM_FIELD__UART6_IER_EDCTS
//    <name> EDCTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D01C) CTS_n changing interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_IER ) </loc>
//      <o.7..7> EDCTS
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART6_IER  -----------------------------------
// SVD Line: 22445

//  <rtree> SFDITEM_REG__UART6_IER
//    <name> IER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D01C) Interrupt Enable register </i>
//    <loc> ( (unsigned int)((UART6_IER >> 0) & 0xFFFFFFFF), ((UART6_IER = (UART6_IER & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_IER_ERXEN </item>
//    <item> SFDITEM_FIELD__UART6_IER_ETXE </item>
//    <item> SFDITEM_FIELD__UART6_IER_ETC </item>
//    <item> SFDITEM_FIELD__UART6_IER_EPE </item>
//    <item> SFDITEM_FIELD__UART6_IER_EFE </item>
//    <item> SFDITEM_FIELD__UART6_IER_ENE </item>
//    <item> SFDITEM_FIELD__UART6_IER_EOEBI </item>
//    <item> SFDITEM_FIELD__UART6_IER_EDCTS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_LSR0  -------------------------------
// SVD Line: 22512

unsigned int UART6_LSR0 __AT (0x4001D020);



// --------------------------------  Field Item: UART6_LSR0_DR  -----------------------------------
// SVD Line: 22521

//  <item> SFDITEM_FIELD__UART6_LSR0_DR
//    <name> DR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D020) Data ready flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.0..0> DR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_OE  -----------------------------------
// SVD Line: 22528

//  <item> SFDITEM_FIELD__UART6_LSR0_OE
//    <name> OE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001D020) overrun error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.1..1> OE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_PE  -----------------------------------
// SVD Line: 22535

//  <item> SFDITEM_FIELD__UART6_LSR0_PE
//    <name> PE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001D020) parity error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.2..2> PE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_FE  -----------------------------------
// SVD Line: 22542

//  <item> SFDITEM_FIELD__UART6_LSR0_FE
//    <name> FE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D020) frame error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.3..3> FE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_BI  -----------------------------------
// SVD Line: 22549

//  <item> SFDITEM_FIELD__UART6_LSR0_BI
//    <name> BI </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D020) break error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.4..4> BI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LSR0_THRE  ----------------------------------
// SVD Line: 22556

//  <item> SFDITEM_FIELD__UART6_LSR0_THRE
//    <name> THRE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D020) the empty flag of TX holding register or TX FIFO </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.5..5> THRE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_TC  -----------------------------------
// SVD Line: 22563

//  <item> SFDITEM_FIELD__UART6_LSR0_TC
//    <name> TC </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D020) Transmitting finished flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.6..6> TC
//    </check>
//  </item>
//  


// --------------------------------  Field Item: UART6_LSR0_NE  -----------------------------------
// SVD Line: 22570

//  <item> SFDITEM_FIELD__UART6_LSR0_NE
//    <name> NE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D020) noise error flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR0 ) </loc>
//      <o.7..7> NE
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_LSR0  -----------------------------------
// SVD Line: 22512

//  <rtree> SFDITEM_REG__UART6_LSR0
//    <name> LSR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D020) Line Status Register 0 </i>
//    <loc> ( (unsigned int)((UART6_LSR0 >> 0) & 0xFFFFFFFF), ((UART6_LSR0 = (UART6_LSR0 & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_LSR0_DR </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_OE </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_PE </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_FE </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_BI </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_THRE </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_TC </item>
//    <item> SFDITEM_FIELD__UART6_LSR0_NE </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_LSR1  -------------------------------
// SVD Line: 22579

unsigned int UART6_LSR1 __AT (0x4001D024);



// -------------------------------  Field Item: UART6_LSR1_IDLE  ----------------------------------
// SVD Line: 22588

//  <item> SFDITEM_FIELD__UART6_LSR1_IDLE
//    <name> IDLE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D024) IDLE flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.0..0> IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LSR1_FBRK  ----------------------------------
// SVD Line: 22595

//  <item> SFDITEM_FIELD__UART6_LSR1_FBRK
//    <name> FBRK </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4001D024) LIN break occurrer flag </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.2..2> FBRK
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LSR1_DCTS  ----------------------------------
// SVD Line: 22602

//  <item> SFDITEM_FIELD__UART6_LSR1_DCTS
//    <name> DCTS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D024) flag of pin CTS_n signal changing </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.3..3> DCTS
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART6_LSR1_UART_IDLE  --------------------------------
// SVD Line: 22609

//  <item> SFDITEM_FIELD__UART6_LSR1_UART_IDLE
//    <name> UART_IDLE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D024) UART IDLE </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.5..5> UART_IDLE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LSR1_CTS  -----------------------------------
// SVD Line: 22616

//  <item> SFDITEM_FIELD__UART6_LSR1_CTS
//    <name> CTS </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D024) Hardware flow status - CTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.6..6> CTS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: UART6_LSR1_RTS  -----------------------------------
// SVD Line: 22623

//  <item> SFDITEM_FIELD__UART6_LSR1_RTS
//    <name> RTS </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D024) Hardware flow status - RTS </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LSR1 ) </loc>
//      <o.7..7> RTS
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_LSR1  -----------------------------------
// SVD Line: 22579

//  <rtree> SFDITEM_REG__UART6_LSR1
//    <name> LSR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D024) Line Status Register 1 </i>
//    <loc> ( (unsigned int)((UART6_LSR1 >> 0) & 0xFFFFFFFF), ((UART6_LSR1 = (UART6_LSR1 & ~(0xEDUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xED) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_LSR1_IDLE </item>
//    <item> SFDITEM_FIELD__UART6_LSR1_FBRK </item>
//    <item> SFDITEM_FIELD__UART6_LSR1_DCTS </item>
//    <item> SFDITEM_FIELD__UART6_LSR1_UART_IDLE </item>
//    <item> SFDITEM_FIELD__UART6_LSR1_CTS </item>
//    <item> SFDITEM_FIELD__UART6_LSR1_RTS </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART6_SMP_CNT  ------------------------------
// SVD Line: 22632

unsigned int UART6_SMP_CNT __AT (0x4001D028);



// ----------------------------  Field Item: UART6_SMP_CNT_SMP_CNT  -------------------------------
// SVD Line: 22641

//  <item> SFDITEM_FIELD__UART6_SMP_CNT_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x4001D028) uart sample counter </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_SMP_CNT >> 0) & 0x3), ((UART6_SMP_CNT = (UART6_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART6_SMP_CNT  ---------------------------------
// SVD Line: 22632

//  <rtree> SFDITEM_REG__UART6_SMP_CNT
//    <name> SMP_CNT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D028) uart sample counter register </i>
//    <loc> ( (unsigned int)((UART6_SMP_CNT >> 0) & 0xFFFFFFFF), ((UART6_SMP_CNT = (UART6_SMP_CNT & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_SMP_CNT_SMP_CNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_GUARD  -------------------------------
// SVD Line: 22650

unsigned int UART6_GUARD __AT (0x4001D034);



// ----------------------------  Field Item: UART6_GUARD_GUARD_CNT  -------------------------------
// SVD Line: 22659

//  <item> SFDITEM_FIELD__UART6_GUARD_GUARD_CNT
//    <name> GUARD_CNT </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x4001D034) Guard interval count value </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_GUARD >> 0) & 0xF), ((UART6_GUARD = (UART6_GUARD & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: UART6_GUARD_GUARD_EN  --------------------------------
// SVD Line: 22666

//  <item> SFDITEM_FIELD__UART6_GUARD_GUARD_EN
//    <name> GUARD_EN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D034) Guard interval time added enabling signal </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_GUARD ) </loc>
//      <o.4..4> GUARD_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_GUARD  ----------------------------------
// SVD Line: 22650

//  <rtree> SFDITEM_REG__UART6_GUARD
//    <name> GUARD </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D034) uart guard time register </i>
//    <loc> ( (unsigned int)((UART6_GUARD >> 0) & 0xFFFFFFFF), ((UART6_GUARD = (UART6_GUARD & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_GUARD_GUARD_CNT </item>
//    <item> SFDITEM_FIELD__UART6_GUARD_GUARD_EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_SLEEP  -------------------------------
// SVD Line: 22675

unsigned int UART6_SLEEP __AT (0x4001D03C);



// ----------------------------  Field Item: UART6_SLEEP_SLEEP_EN  --------------------------------
// SVD Line: 22684

//  <item> SFDITEM_FIELD__UART6_SLEEP_SLEEP_EN
//    <name> SLEEP_EN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D03C) uart sleep function enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_SLEEP ) </loc>
//      <o.0..0> SLEEP_EN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_SLEEP  ----------------------------------
// SVD Line: 22675

//  <rtree> SFDITEM_REG__UART6_SLEEP
//    <name> SLEEP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D03C) uart sleep enable register </i>
//    <loc> ( (unsigned int)((UART6_SLEEP >> 0) & 0xFFFFFFFF), ((UART6_SLEEP = (UART6_SLEEP & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_SLEEP_SLEEP_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_DMA  --------------------------------
// SVD Line: 22693

unsigned int UART6_DMA __AT (0x4001D040);



// ------------------------------  Field Item: UART6_DMA_RXDMAEN  ---------------------------------
// SVD Line: 22702

//  <item> SFDITEM_FIELD__UART6_DMA_RXDMAEN
//    <name> RXDMAEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4001D040) uart RX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_DMA ) </loc>
//      <o.0..0> RXDMAEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART6_DMA_TXDMAEN  ---------------------------------
// SVD Line: 22709

//  <item> SFDITEM_FIELD__UART6_DMA_TXDMAEN
//    <name> TXDMAEN </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4001D040) uart TX DMA enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_DMA ) </loc>
//      <o.1..1> TXDMAEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: UART6_DMA  -----------------------------------
// SVD Line: 22693

//  <rtree> SFDITEM_REG__UART6_DMA
//    <name> DMA </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D040) uart DMA enable register </i>
//    <loc> ( (unsigned int)((UART6_DMA >> 0) & 0xFFFFFFFF), ((UART6_DMA = (UART6_DMA & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_DMA_RXDMAEN </item>
//    <item> SFDITEM_FIELD__UART6_DMA_TXDMAEN </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART6_DIV_FRAC  -----------------------------
// SVD Line: 22718

unsigned int UART6_DIV_FRAC __AT (0x4001D044);



// ---------------------------  Field Item: UART6_DIV_FRAC_DIV_FRAC  ------------------------------
// SVD Line: 22727

//  <item> SFDITEM_FIELD__UART6_DIV_FRAC_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D044) uart fractional divider </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_DIV_FRAC >> 0) & 0xFF), ((UART6_DIV_FRAC = (UART6_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Register RTree: UART6_DIV_FRAC  ---------------------------------
// SVD Line: 22718

//  <rtree> SFDITEM_REG__UART6_DIV_FRAC
//    <name> DIV_FRAC </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D044) Uart Fractional Divider Address </i>
//    <loc> ( (unsigned int)((UART6_DIV_FRAC >> 0) & 0xFFFFFFFF), ((UART6_DIV_FRAC = (UART6_DIV_FRAC & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_DIV_FRAC_DIV_FRAC </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART6_RS485CR  ------------------------------
// SVD Line: 22736

unsigned int UART6_RS485CR __AT (0x4001D04C);



// -----------------------------  Field Item: UART6_RS485CR_DLYEN  --------------------------------
// SVD Line: 22745

//  <item> SFDITEM_FIELD__UART6_RS485CR_DLYEN
//    <name> DLYEN </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D04C) Delay insert between the last stop bit and rts_n or dtr_n de-assertion </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_RS485CR ) </loc>
//      <o.4..4> DLYEN
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART6_RS485CR_INVPOL  --------------------------------
// SVD Line: 22752

//  <item> SFDITEM_FIELD__UART6_RS485CR_INVPOL
//    <name> INVPOL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D04C) inverse the polarity of rts_n </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_RS485CR ) </loc>
//      <o.5..5> INVPOL
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART6_RS485CR_RS485EN  -------------------------------
// SVD Line: 22759

//  <item> SFDITEM_FIELD__UART6_RS485CR_RS485EN
//    <name> RS485EN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D04C) RS485 mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_RS485CR ) </loc>
//      <o.7..7> RS485EN
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: UART6_RS485CR  ---------------------------------
// SVD Line: 22736

//  <rtree> SFDITEM_REG__UART6_RS485CR
//    <name> RS485CR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D04C) Uart RS485 control register </i>
//    <loc> ( (unsigned int)((UART6_RS485CR >> 0) & 0xFFFFFFFF), ((UART6_RS485CR = (UART6_RS485CR & ~(0xB0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xB0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_RS485CR_DLYEN </item>
//    <item> SFDITEM_FIELD__UART6_RS485CR_INVPOL </item>
//    <item> SFDITEM_FIELD__UART6_RS485CR_RS485EN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_SLADDR  ------------------------------
// SVD Line: 22768

unsigned int UART6_SLADDR __AT (0x4001D050);



// -----------------------------  Field Item: UART6_SLADDR_SLADDR  --------------------------------
// SVD Line: 22777

//  <item> SFDITEM_FIELD__UART6_SLADDR_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D050) slave address for RS485 </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_SLADDR >> 0) & 0xFF), ((UART6_SLADDR = (UART6_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Register RTree: UART6_SLADDR  ----------------------------------
// SVD Line: 22768

//  <rtree> SFDITEM_REG__UART6_SLADDR
//    <name> SLADDR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D050) Uart address for wake up </i>
//    <loc> ( (unsigned int)((UART6_SLADDR >> 0) & 0xFFFFFFFF), ((UART6_SLADDR = (UART6_SLADDR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_SLADDR_SLADDR </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: UART6_CNTR  -------------------------------
// SVD Line: 22786

unsigned int UART6_CNTR __AT (0x4001D054);



// -------------------------------  Field Item: UART6_CNTR_CNTR  ----------------------------------
// SVD Line: 22795

//  <item> SFDITEM_FIELD__UART6_CNTR_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4001D054) Uart Counter time delay in RS485 mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((UART6_CNTR >> 0) & 0xFF), ((UART6_CNTR = (UART6_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: UART6_CNTR  -----------------------------------
// SVD Line: 22786

//  <rtree> SFDITEM_REG__UART6_CNTR
//    <name> CNTR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D054) Uart Counter time delay in RS485 mode </i>
//    <loc> ( (unsigned int)((UART6_CNTR >> 0) & 0xFFFFFFFF), ((UART6_CNTR = (UART6_CNTR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_CNTR_CNTR </item>
//  </rtree>
//  


// --------------------------  Register Item Address: UART6_MULCOMCR  -----------------------------
// SVD Line: 22804

unsigned int UART6_MULCOMCR __AT (0x4001D058);



// ----------------------------  Field Item: UART6_MULCOMCR_IDLEIE  -------------------------------
// SVD Line: 22813

//  <item> SFDITEM_FIELD__UART6_MULCOMCR_IDLEIE
//    <name> IDLEIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D058) IDLE interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_MULCOMCR ) </loc>
//      <o.4..4> IDLEIE
//    </check>
//  </item>
//  


// ----------------------------  Field Item: UART6_MULCOMCR_RWUCRT  -------------------------------
// SVD Line: 22820

//  <item> SFDITEM_FIELD__UART6_MULCOMCR_RWUCRT
//    <name> RWUCRT </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D058) Receiver wakeup control </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_MULCOMCR ) </loc>
//      <o.5..5> RWUCRT
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART6_MULCOMCR_WAKESEL  -------------------------------
// SVD Line: 22827

//  <item> SFDITEM_FIELD__UART6_MULCOMCR_WAKESEL
//    <name> WAKESEL </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D058) Wakeup method select </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_MULCOMCR ) </loc>
//      <o.6..6> WAKESEL
//    </check>
//  </item>
//  


// ---------------------------  Field Item: UART6_MULCOMCR_MULCOMEN  ------------------------------
// SVD Line: 22834

//  <item> SFDITEM_FIELD__UART6_MULCOMCR_MULCOMEN
//    <name> MULCOMEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D058) Multi communication enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_MULCOMCR ) </loc>
//      <o.7..7> MULCOMEN
//    </check>
//  </item>
//  


// -----------------------------  Register RTree: UART6_MULCOMCR  ---------------------------------
// SVD Line: 22804

//  <rtree> SFDITEM_REG__UART6_MULCOMCR
//    <name> MULCOMCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D058) Uart multiprocessor communication control register </i>
//    <loc> ( (unsigned int)((UART6_MULCOMCR >> 0) & 0xFFFFFFFF), ((UART6_MULCOMCR = (UART6_MULCOMCR & ~(0xF0UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF0) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_MULCOMCR_IDLEIE </item>
//    <item> SFDITEM_FIELD__UART6_MULCOMCR_RWUCRT </item>
//    <item> SFDITEM_FIELD__UART6_MULCOMCR_WAKESEL </item>
//    <item> SFDITEM_FIELD__UART6_MULCOMCR_MULCOMEN </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: UART6_LINCR  -------------------------------
// SVD Line: 22843

unsigned int UART6_LINCR __AT (0x4001D05C);



// ----------------------------  Field Item: UART6_LINCR_LABAUDEN  --------------------------------
// SVD Line: 22852

//  <item> SFDITEM_FIELD__UART6_LINCR_LABAUDEN
//    <name> LABAUDEN </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x4001D05C) 0x55 used to auto baud-rate detection enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LINCR ) </loc>
//      <o.3..3> LABAUDEN
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART6_LINCR_SDBRK  ---------------------------------
// SVD Line: 22859

//  <item> SFDITEM_FIELD__UART6_LINCR_SDBRK
//    <name> SDBRK </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x4001D05C) LIN Mode whether transmit enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LINCR ) </loc>
//      <o.4..4> SDBRK
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART6_LINCR_LBRKDL  ---------------------------------
// SVD Line: 22866

//  <item> SFDITEM_FIELD__UART6_LINCR_LBRKDL
//    <name> LBRKDL </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4001D05C) LIN Mode break detect length </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LINCR ) </loc>
//      <o.5..5> LBRKDL
//    </check>
//  </item>
//  


// -----------------------------  Field Item: UART6_LINCR_LBRKIE  ---------------------------------
// SVD Line: 22873

//  <item> SFDITEM_FIELD__UART6_LINCR_LBRKIE
//    <name> LBRKIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x4001D05C) LIN Break character detect interrupt enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LINCR ) </loc>
//      <o.6..6> LBRKIE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: UART6_LINCR_LINEN  ---------------------------------
// SVD Line: 22880

//  <item> SFDITEM_FIELD__UART6_LINCR_LINEN
//    <name> LINEN </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x4001D05C) LIN Mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) UART6_LINCR ) </loc>
//      <o.7..7> LINEN
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: UART6_LINCR  ----------------------------------
// SVD Line: 22843

//  <rtree> SFDITEM_REG__UART6_LINCR
//    <name> LINCR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4001D05C) Uart Lin control register </i>
//    <loc> ( (unsigned int)((UART6_LINCR >> 0) & 0xFFFFFFFF), ((UART6_LINCR = (UART6_LINCR & ~(0xF8UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF8) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__UART6_LINCR_LABAUDEN </item>
//    <item> SFDITEM_FIELD__UART6_LINCR_SDBRK </item>
//    <item> SFDITEM_FIELD__UART6_LINCR_LBRKDL </item>
//    <item> SFDITEM_FIELD__UART6_LINCR_LBRKIE </item>
//    <item> SFDITEM_FIELD__UART6_LINCR_LINEN </item>
//  </rtree>
//  


// ---------------------------------  Peripheral View: UART6  -------------------------------------
// SVD Line: 22227

//  <view> UART6
//    <name> UART6 </name>
//    <item> SFDITEM_REG__UART6_RBR </item>
//    <item> SFDITEM_REG__UART6_DIV_L </item>
//    <item> SFDITEM_REG__UART6_DIV_H </item>
//    <item> SFDITEM_REG__UART6_LCR0 </item>
//    <item> SFDITEM_REG__UART6_LCR1 </item>
//    <item> SFDITEM_REG__UART6_FCR </item>
//    <item> SFDITEM_REG__UART6_EFR </item>
//    <item> SFDITEM_REG__UART6_IER </item>
//    <item> SFDITEM_REG__UART6_LSR0 </item>
//    <item> SFDITEM_REG__UART6_LSR1 </item>
//    <item> SFDITEM_REG__UART6_SMP_CNT </item>
//    <item> SFDITEM_REG__UART6_GUARD </item>
//    <item> SFDITEM_REG__UART6_SLEEP </item>
//    <item> SFDITEM_REG__UART6_DMA </item>
//    <item> SFDITEM_REG__UART6_DIV_FRAC </item>
//    <item> SFDITEM_REG__UART6_RS485CR </item>
//    <item> SFDITEM_REG__UART6_SLADDR </item>
//    <item> SFDITEM_REG__UART6_CNTR </item>
//    <item> SFDITEM_REG__UART6_MULCOMCR </item>
//    <item> SFDITEM_REG__UART6_LINCR </item>
//  </view>
//  


// ----------------------------  Register Item Address: CAN1_STAT  --------------------------------
// SVD Line: 22907

unsigned int CAN1_STAT __AT (0x400078A0);



// ------------------------------  Field Item: CAN1_STAT_BUSOFF  ----------------------------------
// SVD Line: 22916

//  <item> SFDITEM_FIELD__CAN1_STAT_BUSOFF
//    <name> BUSOFF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400078A0) BUS off status </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.0..0> BUSOFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_STAT_TACTIVE  ---------------------------------
// SVD Line: 22923

//  <item> SFDITEM_FIELD__CAN1_STAT_TACTIVE
//    <name> TACTIVE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400078A0) Transmission Active </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.1..1> TACTIVE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_STAT_RACTIVE  ---------------------------------
// SVD Line: 22930

//  <item> SFDITEM_FIELD__CAN1_STAT_RACTIVE
//    <name> RACTIVE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400078A0) Reception Active </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.2..2> RACTIVE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TSSS  -----------------------------------
// SVD Line: 22937

//  <item> SFDITEM_FIELD__CAN1_STAT_TSSS
//    <name> TSSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400078A0) Transmission Secondary single shot mode for STB </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.3..3> TSSS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TPSS  -----------------------------------
// SVD Line: 22944

//  <item> SFDITEM_FIELD__CAN1_STAT_TPSS
//    <name> TPSS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400078A0) Transmission Primary single shot mode for PTB </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.4..4> TPSS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_LBMI  -----------------------------------
// SVD Line: 22951

//  <item> SFDITEM_FIELD__CAN1_STAT_LBMI
//    <name> LBMI </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400078A0) Loop back mode internal </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.5..5> LBMI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_LBME  -----------------------------------
// SVD Line: 22958

//  <item> SFDITEM_FIELD__CAN1_STAT_LBME
//    <name> LBME </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400078A0) Loop back mode, external </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.6..6> LBME
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_RESET  ----------------------------------
// SVD Line: 22965

//  <item> SFDITEM_FIELD__CAN1_STAT_RESET
//    <name> RESET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400078A0) reset request bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.7..7> RESET
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_TSA  -----------------------------------
// SVD Line: 22972

//  <item> SFDITEM_FIELD__CAN1_STAT_TSA
//    <name> TSA </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400078A0) Transmit Secondary Abort </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.8..8> TSA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TSALL  ----------------------------------
// SVD Line: 22979

//  <item> SFDITEM_FIELD__CAN1_STAT_TSALL
//    <name> TSALL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400078A0) Transmit Secondary All frames </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.9..9> TSALL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TSONE  ----------------------------------
// SVD Line: 22986

//  <item> SFDITEM_FIELD__CAN1_STAT_TSONE
//    <name> TSONE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400078A0) Transmit Secondary one Frame </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.10..10> TSONE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_TPA  -----------------------------------
// SVD Line: 22993

//  <item> SFDITEM_FIELD__CAN1_STAT_TPA
//    <name> TPA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400078A0) Transmit Primary Abort </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.11..11> TPA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_TPE  -----------------------------------
// SVD Line: 23000

//  <item> SFDITEM_FIELD__CAN1_STAT_TPE
//    <name> TPE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400078A0) Transmit Primary Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.12..12> TPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_STBY  -----------------------------------
// SVD Line: 23007

//  <item> SFDITEM_FIELD__CAN1_STAT_STBY
//    <name> STBY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400078A0) Transceiver Standby mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.13..13> STBY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_LOM  -----------------------------------
// SVD Line: 23014

//  <item> SFDITEM_FIELD__CAN1_STAT_LOM
//    <name> LOM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400078A0) Listen Only mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.14..14> LOM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TBSEL  ----------------------------------
// SVD Line: 23021

//  <item> SFDITEM_FIELD__CAN1_STAT_TBSEL
//    <name> TBSEL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400078A0) Transmit Buffer Select </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.15..15> TBSEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_STAT_TSSTAT  ----------------------------------
// SVD Line: 23028

//  <item> SFDITEM_FIELD__CAN1_STAT_TSSTAT
//    <name> TSSTAT </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x400078A0) Transmit Secondary status bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_STAT >> 16) & 0x3), ((CAN1_STAT = (CAN1_STAT & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_TTTBM  ----------------------------------
// SVD Line: 23035

//  <item> SFDITEM_FIELD__CAN1_STAT_TTTBM
//    <name> TTTBM </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400078A0) TTCAN Transmit Buffer Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.20..20> TTTBM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_STAT_TSMODE  ----------------------------------
// SVD Line: 23042

//  <item> SFDITEM_FIELD__CAN1_STAT_TSMODE
//    <name> TSMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400078A0) Transmit buffer Secondary operation Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.21..21> TSMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_STAT_TSNEXT  ----------------------------------
// SVD Line: 23049

//  <item> SFDITEM_FIELD__CAN1_STAT_TSNEXT
//    <name> TSNEXT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400078A0) Transmit Buffer Secondary next </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.22..22> TSNEXT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_RSTAT  ----------------------------------
// SVD Line: 23056

//  <item> SFDITEM_FIELD__CAN1_STAT_RSTAT
//    <name> RSTAT </name>
//    <r> 
//    <i> [Bits 25..24] RO (@ 0x400078A0) Receive Buffer status bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_STAT >> 24) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_STAT_RREL  -----------------------------------
// SVD Line: 23063

//  <item> SFDITEM_FIELD__CAN1_STAT_RREL
//    <name> RREL </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400078A0) Receive Buffer Release </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.28..28> RREL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_ROV  -----------------------------------
// SVD Line: 23070

//  <item> SFDITEM_FIELD__CAN1_STAT_ROV
//    <name> ROV </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400078A0) Receive Buffer Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.29..29> ROV
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_STAT_ROM  -----------------------------------
// SVD Line: 23077

//  <item> SFDITEM_FIELD__CAN1_STAT_ROM
//    <name> ROM </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400078A0) Receive Buffer Overflow Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_STAT ) </loc>
//      <o.30..30> ROM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_STAT  -----------------------------------
// SVD Line: 22907

//  <rtree> SFDITEM_REG__CAN1_STAT
//    <name> STAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078A0) configuration and status register </i>
//    <loc> ( (unsigned int)((CAN1_STAT >> 0) & 0xFFFFFFFF), ((CAN1_STAT = (CAN1_STAT & ~(0x7073FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7073FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_STAT_BUSOFF </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TACTIVE </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_RACTIVE </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSSS </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TPSS </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_LBMI </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_LBME </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_RESET </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSA </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSALL </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSONE </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TPA </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TPE </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_STBY </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_LOM </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TBSEL </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSSTAT </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TTTBM </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSMODE </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_TSNEXT </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_RSTAT </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_RREL </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_ROV </item>
//    <item> SFDITEM_FIELD__CAN1_STAT_ROM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN1_RTIE  --------------------------------
// SVD Line: 23086

unsigned int CAN1_RTIE __AT (0x400078A4);



// -------------------------------  Field Item: CAN1_RTIE_TSFF  -----------------------------------
// SVD Line: 23095

//  <item> SFDITEM_FIELD__CAN1_RTIE_TSFF
//    <name> TSFF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x400078A4) Transmit Secondary Buffer full flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.0..0> TSFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_EIE  -----------------------------------
// SVD Line: 23102

//  <item> SFDITEM_FIELD__CAN1_RTIE_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x400078A4) Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.1..1> EIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_TSIE  -----------------------------------
// SVD Line: 23109

//  <item> SFDITEM_FIELD__CAN1_RTIE_TSIE
//    <name> TSIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x400078A4) Transmit Secondary Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.2..2> TSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_TPIE  -----------------------------------
// SVD Line: 23116

//  <item> SFDITEM_FIELD__CAN1_RTIE_TPIE
//    <name> TPIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x400078A4) Transmit Primary Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.3..3> TPIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_RAFIE  ----------------------------------
// SVD Line: 23123

//  <item> SFDITEM_FIELD__CAN1_RTIE_RAFIE
//    <name> RAFIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x400078A4) RB Almost Full Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.4..4> RAFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_RFIE  -----------------------------------
// SVD Line: 23130

//  <item> SFDITEM_FIELD__CAN1_RTIE_RFIE
//    <name> RFIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400078A4) RB Full Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.5..5> RFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_ROIE  -----------------------------------
// SVD Line: 23137

//  <item> SFDITEM_FIELD__CAN1_RTIE_ROIE
//    <name> ROIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x400078A4) RB Overflow Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.6..6> ROIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_RIE  -----------------------------------
// SVD Line: 23144

//  <item> SFDITEM_FIELD__CAN1_RTIE_RIE
//    <name> RIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x400078A4) Receive Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.7..7> RIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_AIF  -----------------------------------
// SVD Line: 23151

//  <item> SFDITEM_FIELD__CAN1_RTIE_AIF
//    <name> AIF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x400078A4) Abort Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.8..8> AIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_EIF  -----------------------------------
// SVD Line: 23158

//  <item> SFDITEM_FIELD__CAN1_RTIE_EIF
//    <name> EIF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x400078A4) Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.9..9> EIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_TSIF  -----------------------------------
// SVD Line: 23165

//  <item> SFDITEM_FIELD__CAN1_RTIE_TSIF
//    <name> TSIF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x400078A4) Transmission Secondary Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.10..10> TSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_TPIF  -----------------------------------
// SVD Line: 23172

//  <item> SFDITEM_FIELD__CAN1_RTIE_TPIF
//    <name> TPIF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x400078A4) Transmission Primary Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.11..11> TPIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_RAFIF  ----------------------------------
// SVD Line: 23179

//  <item> SFDITEM_FIELD__CAN1_RTIE_RAFIF
//    <name> RAFIF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x400078A4) RB Almost Full Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.12..12> RAFIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_RFIF  -----------------------------------
// SVD Line: 23186

//  <item> SFDITEM_FIELD__CAN1_RTIE_RFIF
//    <name> RFIF </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x400078A4) RB Full Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.13..13> RFIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_ROIF  -----------------------------------
// SVD Line: 23193

//  <item> SFDITEM_FIELD__CAN1_RTIE_ROIF
//    <name> ROIF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x400078A4) RB Overflow Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.14..14> ROIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_RIF  -----------------------------------
// SVD Line: 23200

//  <item> SFDITEM_FIELD__CAN1_RTIE_RIF
//    <name> RIF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x400078A4) Receive Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.15..15> RIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_BEIF  -----------------------------------
// SVD Line: 23207

//  <item> SFDITEM_FIELD__CAN1_RTIE_BEIF
//    <name> BEIF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400078A4) Bus Error Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.16..16> BEIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_BEIE  -----------------------------------
// SVD Line: 23214

//  <item> SFDITEM_FIELD__CAN1_RTIE_BEIE
//    <name> BEIE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400078A4) Bus Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.17..17> BEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_ALIF  -----------------------------------
// SVD Line: 23221

//  <item> SFDITEM_FIELD__CAN1_RTIE_ALIF
//    <name> ALIF </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400078A4) Arbitration Lost Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.18..18> ALIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_ALIE  -----------------------------------
// SVD Line: 23228

//  <item> SFDITEM_FIELD__CAN1_RTIE_ALIE
//    <name> ALIE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400078A4) Arbitration Lost Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.19..19> ALIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_EPIF  -----------------------------------
// SVD Line: 23235

//  <item> SFDITEM_FIELD__CAN1_RTIE_EPIF
//    <name> EPIF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400078A4) Error Passive Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.20..20> EPIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_EPIE  -----------------------------------
// SVD Line: 23242

//  <item> SFDITEM_FIELD__CAN1_RTIE_EPIE
//    <name> EPIE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400078A4) Error Passive Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.21..21> EPIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_EPASS  ----------------------------------
// SVD Line: 23249

//  <item> SFDITEM_FIELD__CAN1_RTIE_EPASS
//    <name> EPASS </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400078A4) Error Passive Mode Active enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.22..22> EPASS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_EWARN  ----------------------------------
// SVD Line: 23256

//  <item> SFDITEM_FIELD__CAN1_RTIE_EWARN
//    <name> EWARN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400078A4) Error Warning Limit Reached </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_RTIE ) </loc>
//      <o.23..23> EWARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_RTIE_EWL  -----------------------------------
// SVD Line: 23263

//  <item> SFDITEM_FIELD__CAN1_RTIE_EWL
//    <name> EWL </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x400078A4) Programmable Error Warnig Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_RTIE >> 24) & 0xF), ((CAN1_RTIE = (CAN1_RTIE & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_RTIE_AFWL  -----------------------------------
// SVD Line: 23270

//  <item> SFDITEM_FIELD__CAN1_RTIE_AFWL
//    <name> AFWL </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x400078A4) Receive Buffer Almost Full Warning Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_RTIE >> 28) & 0xF), ((CAN1_RTIE = (CAN1_RTIE & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_RTIE  -----------------------------------
// SVD Line: 23086

//  <rtree> SFDITEM_REG__CAN1_RTIE
//    <name> RTIE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078A4) Receive and Transmit Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((CAN1_RTIE >> 0) & 0xFFFFFFFF), ((CAN1_RTIE = (CAN1_RTIE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_RTIE_TSFF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_TSIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_TPIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RAFIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RFIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_ROIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_AIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_TSIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_TPIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RAFIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RFIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_ROIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_RIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_BEIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_BEIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_ALIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_ALIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EPIF </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EPIE </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EPASS </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EWARN </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_EWL </item>
//    <item> SFDITEM_FIELD__CAN1_RTIE_AFWL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN1_S_Seg  -------------------------------
// SVD Line: 23279

unsigned int CAN1_S_Seg __AT (0x400078A8);



// -----------------------------  Field Item: CAN1_S_Seg_S_Seg_1  ---------------------------------
// SVD Line: 23288

//  <item> SFDITEM_FIELD__CAN1_S_Seg_S_Seg_1
//    <name> S_Seg_1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x400078A8) Bit Timing Segment 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_S_Seg >> 0) & 0xFF), ((CAN1_S_Seg = (CAN1_S_Seg & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CAN1_S_Seg_S_Seg_2  ---------------------------------
// SVD Line: 23295

//  <item> SFDITEM_FIELD__CAN1_S_Seg_S_Seg_2
//    <name> S_Seg_2 </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x400078A8) Bit Timing Segment 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_S_Seg >> 8) & 0x7F), ((CAN1_S_Seg = (CAN1_S_Seg & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN1_S_Seg_S_SJW  ----------------------------------
// SVD Line: 23302

//  <item> SFDITEM_FIELD__CAN1_S_Seg_S_SJW
//    <name> S_SJW </name>
//    <rw> 
//    <i> [Bits 22..16] RW (@ 0x400078A8) Synchronization Jump Width </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_S_Seg >> 16) & 0x7F), ((CAN1_S_Seg = (CAN1_S_Seg & ~(0x7FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CAN1_S_Seg_S_PRESC  ---------------------------------
// SVD Line: 23309

//  <item> SFDITEM_FIELD__CAN1_S_Seg_S_PRESC
//    <name> S_PRESC </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x400078A8) Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_S_Seg >> 24) & 0xFF), ((CAN1_S_Seg = (CAN1_S_Seg & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN1_S_Seg  -----------------------------------
// SVD Line: 23279

//  <rtree> SFDITEM_REG__CAN1_S_Seg
//    <name> S_Seg </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078A8) Bit Timing Register </i>
//    <loc> ( (unsigned int)((CAN1_S_Seg >> 0) & 0xFFFFFFFF), ((CAN1_S_Seg = (CAN1_S_Seg & ~(0xFF7F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_S_Seg_S_Seg_1 </item>
//    <item> SFDITEM_FIELD__CAN1_S_Seg_S_Seg_2 </item>
//    <item> SFDITEM_FIELD__CAN1_S_Seg_S_SJW </item>
//    <item> SFDITEM_FIELD__CAN1_S_Seg_S_PRESC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CAN1_EALCAP  -------------------------------
// SVD Line: 23318

unsigned int CAN1_EALCAP __AT (0x400078B0);



// -------------------------------  Field Item: CAN1_EALCAP_ALC  ----------------------------------
// SVD Line: 23327

//  <item> SFDITEM_FIELD__CAN1_EALCAP_ALC
//    <name> ALC </name>
//    <r> 
//    <i> [Bits 4..0] RO (@ 0x400078B0) Arbitration Lost Capture </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_EALCAP >> 0) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN1_EALCAP_KOER  ----------------------------------
// SVD Line: 23334

//  <item> SFDITEM_FIELD__CAN1_EALCAP_KOER
//    <name> KOER </name>
//    <r> 
//    <i> [Bits 7..5] RO (@ 0x400078B0) Kind of Error </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_EALCAP >> 5) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN1_EALCAP_RECNT  ---------------------------------
// SVD Line: 23341

//  <item> SFDITEM_FIELD__CAN1_EALCAP_RECNT
//    <name> RECNT </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x400078B0) Receive Error Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_EALCAP >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN1_EALCAP_TECNT  ---------------------------------
// SVD Line: 23348

//  <item> SFDITEM_FIELD__CAN1_EALCAP_TECNT
//    <name> TECNT </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x400078B0) Transmit Error Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_EALCAP >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN1_EALCAP  ----------------------------------
// SVD Line: 23318

//  <rtree> SFDITEM_REG__CAN1_EALCAP
//    <name> EALCAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078B0) Error and Arbitration Lost Capture Register </i>
//    <loc> ( (unsigned int)((CAN1_EALCAP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CAN1_EALCAP_ALC </item>
//    <item> SFDITEM_FIELD__CAN1_EALCAP_KOER </item>
//    <item> SFDITEM_FIELD__CAN1_EALCAP_RECNT </item>
//    <item> SFDITEM_FIELD__CAN1_EALCAP_TECNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CAN1_ACFCTRL  ------------------------------
// SVD Line: 23357

unsigned int CAN1_ACFCTRL __AT (0x400078B4);



// -----------------------------  Field Item: CAN1_ACFCTRL_ACFADR  --------------------------------
// SVD Line: 23366

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_ACFADR
//    <name> ACFADR </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x400078B4) Acceptance filter address </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_ACFCTRL >> 0) & 0xF), ((CAN1_ACFCTRL = (CAN1_ACFCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CAN1_ACFCTRL_SELMASK  --------------------------------
// SVD Line: 23373

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_SELMASK
//    <name> SELMASK </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x400078B4) Select Acceptance MASK </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.5..5> SELMASK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE0  ----------------------------------
// SVD Line: 23380

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE0
//    <name> AE0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.16..16> AE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE1  ----------------------------------
// SVD Line: 23387

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE1
//    <name> AE1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.17..17> AE1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE2  ----------------------------------
// SVD Line: 23394

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE2
//    <name> AE2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.18..18> AE2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE3  ----------------------------------
// SVD Line: 23401

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE3
//    <name> AE3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.19..19> AE3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE4  ----------------------------------
// SVD Line: 23408

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE4
//    <name> AE4 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.20..20> AE4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE5  ----------------------------------
// SVD Line: 23415

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE5
//    <name> AE5 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.21..21> AE5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE6  ----------------------------------
// SVD Line: 23422

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE6
//    <name> AE6 </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.22..22> AE6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE7  ----------------------------------
// SVD Line: 23429

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE7
//    <name> AE7 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.23..23> AE7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE8  ----------------------------------
// SVD Line: 23436

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE8
//    <name> AE8 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.24..24> AE8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE9  ----------------------------------
// SVD Line: 23443

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE9
//    <name> AE9 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.25..25> AE9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE10  ---------------------------------
// SVD Line: 23450

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE10
//    <name> AE10 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.26..26> AE10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE11  ---------------------------------
// SVD Line: 23457

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE11
//    <name> AE11 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.27..27> AE11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE12  ---------------------------------
// SVD Line: 23464

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE12
//    <name> AE12 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.28..28> AE12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE13  ---------------------------------
// SVD Line: 23471

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE13
//    <name> AE13 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.29..29> AE13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE14  ---------------------------------
// SVD Line: 23478

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE14
//    <name> AE14 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.30..30> AE14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN1_ACFCTRL_AE15  ---------------------------------
// SVD Line: 23485

//  <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE15
//    <name> AE15 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400078B4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACFCTRL ) </loc>
//      <o.31..31> AE15
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CAN1_ACFCTRL  ----------------------------------
// SVD Line: 23357

//  <rtree> SFDITEM_REG__CAN1_ACFCTRL
//    <name> ACFCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078B4) Acceptance Filter Control Register </i>
//    <loc> ( (unsigned int)((CAN1_ACFCTRL >> 0) & 0xFFFFFFFF), ((CAN1_ACFCTRL = (CAN1_ACFCTRL & ~(0xFFFF002FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF002F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_ACFADR </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_SELMASK </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE0 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE1 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE2 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE3 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE4 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE5 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE6 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE7 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE8 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE9 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE10 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE11 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE12 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE13 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE14 </item>
//    <item> SFDITEM_FIELD__CAN1_ACFCTRL_AE15 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN1_ACF0  --------------------------------
// SVD Line: 23494

unsigned int CAN1_ACF0 __AT (0x400078B8);



// -------------------------------  Field Item: CAN1_ACF0_ACODE  ----------------------------------
// SVD Line: 23503

//  <item> SFDITEM_FIELD__CAN1_ACF0_ACODE
//    <name> ACODE </name>
//    <rw> 
//    <i> [Bits 28..0] RW (@ 0x400078B8) Acceptance Code </i>
//    <edit> 
//      <loc> ( (unsigned int)((CAN1_ACF0 >> 0) & 0x1FFFFFFF), ((CAN1_ACF0 = (CAN1_ACF0 & ~(0x1FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_ACF0_AIDE  -----------------------------------
// SVD Line: 23510

//  <item> SFDITEM_FIELD__CAN1_ACF0_AIDE
//    <name> AIDE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400078B8) Acceptance Mask IDE Bit value </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACF0 ) </loc>
//      <o.29..29> AIDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_ACF0_AIDEE  ----------------------------------
// SVD Line: 23517

//  <item> SFDITEM_FIELD__CAN1_ACF0_AIDEE
//    <name> AIDEE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400078B8) Acceptance Mask IDE bit check enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_ACF0 ) </loc>
//      <o.30..30> AIDEE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_ACF0  -----------------------------------
// SVD Line: 23494

//  <rtree> SFDITEM_REG__CAN1_ACF0
//    <name> ACF0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078B8) Acceptance Code Register </i>
//    <loc> ( (unsigned int)((CAN1_ACF0 >> 0) & 0xFFFFFFFF), ((CAN1_ACF0 = (CAN1_ACF0 & ~(0x7FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_ACF0_ACODE </item>
//    <item> SFDITEM_FIELD__CAN1_ACF0_AIDE </item>
//    <item> SFDITEM_FIELD__CAN1_ACF0_AIDEE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN1_VER  --------------------------------
// SVD Line: 23526

unsigned int CAN1_VER __AT (0x400078BC);



// --------------------------------  Field Item: CAN1_VER_VER  ------------------------------------
// SVD Line: 23535

//  <item> SFDITEM_FIELD__CAN1_VER_VER
//    <name> VER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400078BC) Version of CAN-CTRL </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN1_VER >> 0) & 0xFFFF), ((CAN1_VER = (CAN1_VER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_VER_TBPTR  -----------------------------------
// SVD Line: 23542

//  <item> SFDITEM_FIELD__CAN1_VER_TBPTR
//    <name> TBPTR </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x400078BC) pointer to a TB message slot </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_VER >> 16) & 0x3F), ((CAN1_VER = (CAN1_VER & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TBF  ------------------------------------
// SVD Line: 23549

//  <item> SFDITEM_FIELD__CAN1_VER_TBF
//    <name> TBF </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x400078BC) set TB slot to Filled </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.22..22> TBF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TBE  ------------------------------------
// SVD Line: 23556

//  <item> SFDITEM_FIELD__CAN1_VER_TBE
//    <name> TBE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x400078BC) set TB slot to Empty </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.23..23> TBE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TTEN  -----------------------------------
// SVD Line: 23563

//  <item> SFDITEM_FIELD__CAN1_VER_TTEN
//    <name> TTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x400078BC) Timer Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.24..24> TTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN1_VER_PRESC  -----------------------------------
// SVD Line: 23570

//  <item> SFDITEM_FIELD__CAN1_VER_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x400078BC) TTCAN Timer Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_VER >> 25) & 0x3), ((CAN1_VER = (CAN1_VER & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TTIF  -----------------------------------
// SVD Line: 23577

//  <item> SFDITEM_FIELD__CAN1_VER_TTIF
//    <name> TTIF </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x400078BC) Timer Trigger Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.27..27> TTIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TTIE  -----------------------------------
// SVD Line: 23584

//  <item> SFDITEM_FIELD__CAN1_VER_TTIE
//    <name> TTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x400078BC) Timer Trigger Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.28..28> TTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_TEIF  -----------------------------------
// SVD Line: 23591

//  <item> SFDITEM_FIELD__CAN1_VER_TEIF
//    <name> TEIF </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x400078BC) Trigger Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.29..29> TEIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_WTIF  -----------------------------------
// SVD Line: 23598

//  <item> SFDITEM_FIELD__CAN1_VER_WTIF
//    <name> WTIF </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x400078BC) Watch Trigger Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.30..30> WTIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN1_VER_WTIE  -----------------------------------
// SVD Line: 23605

//  <item> SFDITEM_FIELD__CAN1_VER_WTIE
//    <name> WTIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400078BC) Watch Trigger Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_VER ) </loc>
//      <o.31..31> WTIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_VER  ------------------------------------
// SVD Line: 23526

//  <rtree> SFDITEM_REG__CAN1_VER
//    <name> VER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078BC) Version Information Register 0 </i>
//    <loc> ( (unsigned int)((CAN1_VER >> 0) & 0xFFFFFFFF), ((CAN1_VER = (CAN1_VER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_VER_VER </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TBPTR </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TBF </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TBE </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TTEN </item>
//    <item> SFDITEM_FIELD__CAN1_VER_PRESC </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TTIF </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TTIE </item>
//    <item> SFDITEM_FIELD__CAN1_VER_TEIF </item>
//    <item> SFDITEM_FIELD__CAN1_VER_WTIF </item>
//    <item> SFDITEM_FIELD__CAN1_VER_WTIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN1_MSG  --------------------------------
// SVD Line: 23614

unsigned int CAN1_MSG __AT (0x400078C0);



// ---------------------------------  Field Item: CAN1_MSG_ID  ------------------------------------
// SVD Line: 23623

//  <item> SFDITEM_FIELD__CAN1_MSG_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 28..0] RW (@ 0x400078C0) Reference Message </i>
//    <edit> 
//      <loc> ( (unsigned int)((CAN1_MSG >> 0) & 0x1FFFFFFF), ((CAN1_MSG = (CAN1_MSG & ~(0x1FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN1_MSG_IDE  ------------------------------------
// SVD Line: 23630

//  <item> SFDITEM_FIELD__CAN1_MSG_IDE
//    <name> IDE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x400078C0) Reference Message IDE Bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN1_MSG ) </loc>
//      <o.31..31> IDE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_MSG  ------------------------------------
// SVD Line: 23614

//  <rtree> SFDITEM_REG__CAN1_MSG
//    <name> MSG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078C0) TTCAN: Reference Message </i>
//    <loc> ( (unsigned int)((CAN1_MSG >> 0) & 0xFFFFFFFF), ((CAN1_MSG = (CAN1_MSG & ~(0x9FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x9FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_MSG_ID </item>
//    <item> SFDITEM_FIELD__CAN1_MSG_IDE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN1_CFG  --------------------------------
// SVD Line: 23639

unsigned int CAN1_CFG __AT (0x400078C4);



// -------------------------------  Field Item: CAN1_CFG_TTPTR  -----------------------------------
// SVD Line: 23648

//  <item> SFDITEM_FIELD__CAN1_CFG_TTPTR
//    <name> TTPTR </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x400078C4) Transmit Trigger TB Slot Pointer </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_CFG >> 0) & 0x3F), ((CAN1_CFG = (CAN1_CFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN1_CFG_TTYPE  -----------------------------------
// SVD Line: 23655

//  <item> SFDITEM_FIELD__CAN1_CFG_TTYPE
//    <name> TTYPE </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x400078C4) trigger type </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_CFG >> 8) & 0x7), ((CAN1_CFG = (CAN1_CFG & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN1_CFG_TEW  ------------------------------------
// SVD Line: 23662

//  <item> SFDITEM_FIELD__CAN1_CFG_TEW
//    <name> TEW </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x400078C4) Transmit enable window </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN1_CFG >> 12) & 0xF), ((CAN1_CFG = (CAN1_CFG & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN1_CFG_TRIG  -----------------------------------
// SVD Line: 23669

//  <item> SFDITEM_FIELD__CAN1_CFG_TRIG
//    <name> TRIG </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x400078C4) trigger time </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN1_CFG >> 16) & 0xFFFF), ((CAN1_CFG = (CAN1_CFG & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CAN1_CFG  ------------------------------------
// SVD Line: 23639

//  <rtree> SFDITEM_REG__CAN1_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078C4) TTCAN:Trigger Configuration </i>
//    <loc> ( (unsigned int)((CAN1_CFG >> 0) & 0xFFFFFFFF), ((CAN1_CFG = (CAN1_CFG & ~(0xFFFFF73FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF73F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_CFG_TTPTR </item>
//    <item> SFDITEM_FIELD__CAN1_CFG_TTYPE </item>
//    <item> SFDITEM_FIELD__CAN1_CFG_TEW </item>
//    <item> SFDITEM_FIELD__CAN1_CFG_TRIG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN1_WTRIG  -------------------------------
// SVD Line: 23678

unsigned int CAN1_WTRIG __AT (0x400078C8);



// ------------------------------  Field Item: CAN1_WTRIG_WTRIG  ----------------------------------
// SVD Line: 23687

//  <item> SFDITEM_FIELD__CAN1_WTRIG_WTRIG
//    <name> WTRIG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x400078C8) watch trigger time </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN1_WTRIG >> 0) & 0xFFFF), ((CAN1_WTRIG = (CAN1_WTRIG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN1_WTRIG  -----------------------------------
// SVD Line: 23678

//  <rtree> SFDITEM_REG__CAN1_WTRIG
//    <name> WTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x400078C8) TTCAN: Watch Trigger Tim </i>
//    <loc> ( (unsigned int)((CAN1_WTRIG >> 0) & 0xFFFFFFFF), ((CAN1_WTRIG = (CAN1_WTRIG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN1_WTRIG_WTRIG </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CAN1  -------------------------------------
// SVD Line: 22892

//  <view> CAN1
//    <name> CAN1 </name>
//    <item> SFDITEM_REG__CAN1_STAT </item>
//    <item> SFDITEM_REG__CAN1_RTIE </item>
//    <item> SFDITEM_REG__CAN1_S_Seg </item>
//    <item> SFDITEM_REG__CAN1_EALCAP </item>
//    <item> SFDITEM_REG__CAN1_ACFCTRL </item>
//    <item> SFDITEM_REG__CAN1_ACF0 </item>
//    <item> SFDITEM_REG__CAN1_VER </item>
//    <item> SFDITEM_REG__CAN1_MSG </item>
//    <item> SFDITEM_REG__CAN1_CFG </item>
//    <item> SFDITEM_REG__CAN1_WTRIG </item>
//  </view>
//  


// ----------------------------  Register Item Address: CAN2_STAT  --------------------------------
// SVD Line: 23714

unsigned int CAN2_STAT __AT (0x40007CA0);



// ------------------------------  Field Item: CAN2_STAT_BUSOFF  ----------------------------------
// SVD Line: 23723

//  <item> SFDITEM_FIELD__CAN2_STAT_BUSOFF
//    <name> BUSOFF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007CA0) BUS off status </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.0..0> BUSOFF
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_STAT_TACTIVE  ---------------------------------
// SVD Line: 23730

//  <item> SFDITEM_FIELD__CAN2_STAT_TACTIVE
//    <name> TACTIVE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007CA0) Transmission Active </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.1..1> TACTIVE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_STAT_RACTIVE  ---------------------------------
// SVD Line: 23737

//  <item> SFDITEM_FIELD__CAN2_STAT_RACTIVE
//    <name> RACTIVE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007CA0) Reception Active </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.2..2> RACTIVE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TSSS  -----------------------------------
// SVD Line: 23744

//  <item> SFDITEM_FIELD__CAN2_STAT_TSSS
//    <name> TSSS </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007CA0) Transmission Secondary single shot mode for STB </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.3..3> TSSS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TPSS  -----------------------------------
// SVD Line: 23751

//  <item> SFDITEM_FIELD__CAN2_STAT_TPSS
//    <name> TPSS </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007CA0) Transmission Primary single shot mode for PTB </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.4..4> TPSS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_LBMI  -----------------------------------
// SVD Line: 23758

//  <item> SFDITEM_FIELD__CAN2_STAT_LBMI
//    <name> LBMI </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007CA0) Loop back mode internal </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.5..5> LBMI
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_LBME  -----------------------------------
// SVD Line: 23765

//  <item> SFDITEM_FIELD__CAN2_STAT_LBME
//    <name> LBME </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007CA0) Loop back mode, external </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.6..6> LBME
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_RESET  ----------------------------------
// SVD Line: 23772

//  <item> SFDITEM_FIELD__CAN2_STAT_RESET
//    <name> RESET </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007CA0) reset request bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.7..7> RESET
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_TSA  -----------------------------------
// SVD Line: 23779

//  <item> SFDITEM_FIELD__CAN2_STAT_TSA
//    <name> TSA </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007CA0) Transmit Secondary Abort </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.8..8> TSA
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TSALL  ----------------------------------
// SVD Line: 23786

//  <item> SFDITEM_FIELD__CAN2_STAT_TSALL
//    <name> TSALL </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007CA0) Transmit Secondary All frames </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.9..9> TSALL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TSONE  ----------------------------------
// SVD Line: 23793

//  <item> SFDITEM_FIELD__CAN2_STAT_TSONE
//    <name> TSONE </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007CA0) Transmit Secondary one Frame </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.10..10> TSONE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_TPA  -----------------------------------
// SVD Line: 23800

//  <item> SFDITEM_FIELD__CAN2_STAT_TPA
//    <name> TPA </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007CA0) Transmit Primary Abort </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.11..11> TPA
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_TPE  -----------------------------------
// SVD Line: 23807

//  <item> SFDITEM_FIELD__CAN2_STAT_TPE
//    <name> TPE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007CA0) Transmit Primary Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.12..12> TPE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_STBY  -----------------------------------
// SVD Line: 23814

//  <item> SFDITEM_FIELD__CAN2_STAT_STBY
//    <name> STBY </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007CA0) Transceiver Standby mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.13..13> STBY
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_LOM  -----------------------------------
// SVD Line: 23821

//  <item> SFDITEM_FIELD__CAN2_STAT_LOM
//    <name> LOM </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007CA0) Listen Only mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.14..14> LOM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TBSEL  ----------------------------------
// SVD Line: 23828

//  <item> SFDITEM_FIELD__CAN2_STAT_TBSEL
//    <name> TBSEL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007CA0) Transmit Buffer Select </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.15..15> TBSEL
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_STAT_TSSTAT  ----------------------------------
// SVD Line: 23835

//  <item> SFDITEM_FIELD__CAN2_STAT_TSSTAT
//    <name> TSSTAT </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40007CA0) Transmit Secondary status bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_STAT >> 16) & 0x3), ((CAN2_STAT = (CAN2_STAT & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_TTTBM  ----------------------------------
// SVD Line: 23842

//  <item> SFDITEM_FIELD__CAN2_STAT_TTTBM
//    <name> TTTBM </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007CA0) TTCAN Transmit Buffer Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.20..20> TTTBM
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_STAT_TSMODE  ----------------------------------
// SVD Line: 23849

//  <item> SFDITEM_FIELD__CAN2_STAT_TSMODE
//    <name> TSMODE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007CA0) Transmit buffer Secondary operation Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.21..21> TSMODE
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_STAT_TSNEXT  ----------------------------------
// SVD Line: 23856

//  <item> SFDITEM_FIELD__CAN2_STAT_TSNEXT
//    <name> TSNEXT </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007CA0) Transmit Buffer Secondary next </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.22..22> TSNEXT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_RSTAT  ----------------------------------
// SVD Line: 23863

//  <item> SFDITEM_FIELD__CAN2_STAT_RSTAT
//    <name> RSTAT </name>
//    <r> 
//    <i> [Bits 25..24] RO (@ 0x40007CA0) Receive Buffer status bits </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_STAT >> 24) & 0x3) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_STAT_RREL  -----------------------------------
// SVD Line: 23870

//  <item> SFDITEM_FIELD__CAN2_STAT_RREL
//    <name> RREL </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007CA0) Receive Buffer Release </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.28..28> RREL
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_ROV  -----------------------------------
// SVD Line: 23877

//  <item> SFDITEM_FIELD__CAN2_STAT_ROV
//    <name> ROV </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007CA0) Receive Buffer Overflow </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.29..29> ROV
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_STAT_ROM  -----------------------------------
// SVD Line: 23884

//  <item> SFDITEM_FIELD__CAN2_STAT_ROM
//    <name> ROM </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007CA0) Receive Buffer Overflow Mode </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_STAT ) </loc>
//      <o.30..30> ROM
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_STAT  -----------------------------------
// SVD Line: 23714

//  <rtree> SFDITEM_REG__CAN2_STAT
//    <name> STAT </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CA0) configuration and status register </i>
//    <loc> ( (unsigned int)((CAN2_STAT >> 0) & 0xFFFFFFFF), ((CAN2_STAT = (CAN2_STAT & ~(0x7073FFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7073FFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_STAT_BUSOFF </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TACTIVE </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_RACTIVE </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSSS </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TPSS </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_LBMI </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_LBME </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_RESET </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSA </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSALL </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSONE </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TPA </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TPE </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_STBY </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_LOM </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TBSEL </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSSTAT </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TTTBM </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSMODE </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_TSNEXT </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_RSTAT </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_RREL </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_ROV </item>
//    <item> SFDITEM_FIELD__CAN2_STAT_ROM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN2_RTIE  --------------------------------
// SVD Line: 23893

unsigned int CAN2_RTIE __AT (0x40007CA4);



// -------------------------------  Field Item: CAN2_RTIE_TSFF  -----------------------------------
// SVD Line: 23902

//  <item> SFDITEM_FIELD__CAN2_RTIE_TSFF
//    <name> TSFF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007CA4) Transmit Secondary Buffer full flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.0..0> TSFF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_EIE  -----------------------------------
// SVD Line: 23909

//  <item> SFDITEM_FIELD__CAN2_RTIE_EIE
//    <name> EIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007CA4) Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.1..1> EIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_TSIE  -----------------------------------
// SVD Line: 23916

//  <item> SFDITEM_FIELD__CAN2_RTIE_TSIE
//    <name> TSIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007CA4) Transmit Secondary Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.2..2> TSIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_TPIE  -----------------------------------
// SVD Line: 23923

//  <item> SFDITEM_FIELD__CAN2_RTIE_TPIE
//    <name> TPIE </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007CA4) Transmit Primary Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.3..3> TPIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_RAFIE  ----------------------------------
// SVD Line: 23930

//  <item> SFDITEM_FIELD__CAN2_RTIE_RAFIE
//    <name> RAFIE </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007CA4) RB Almost Full Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.4..4> RAFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_RFIE  -----------------------------------
// SVD Line: 23937

//  <item> SFDITEM_FIELD__CAN2_RTIE_RFIE
//    <name> RFIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007CA4) RB Full Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.5..5> RFIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_ROIE  -----------------------------------
// SVD Line: 23944

//  <item> SFDITEM_FIELD__CAN2_RTIE_ROIE
//    <name> ROIE </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007CA4) RB Overflow Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.6..6> ROIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_RIE  -----------------------------------
// SVD Line: 23951

//  <item> SFDITEM_FIELD__CAN2_RTIE_RIE
//    <name> RIE </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007CA4) Receive Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.7..7> RIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_AIF  -----------------------------------
// SVD Line: 23958

//  <item> SFDITEM_FIELD__CAN2_RTIE_AIF
//    <name> AIF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007CA4) Abort Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.8..8> AIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_EIF  -----------------------------------
// SVD Line: 23965

//  <item> SFDITEM_FIELD__CAN2_RTIE_EIF
//    <name> EIF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007CA4) Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.9..9> EIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_TSIF  -----------------------------------
// SVD Line: 23972

//  <item> SFDITEM_FIELD__CAN2_RTIE_TSIF
//    <name> TSIF </name>
//    <rw> 
//    <i> [Bit 10] RW (@ 0x40007CA4) Transmission Secondary Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.10..10> TSIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_TPIF  -----------------------------------
// SVD Line: 23979

//  <item> SFDITEM_FIELD__CAN2_RTIE_TPIF
//    <name> TPIF </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x40007CA4) Transmission Primary Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.11..11> TPIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_RAFIF  ----------------------------------
// SVD Line: 23986

//  <item> SFDITEM_FIELD__CAN2_RTIE_RAFIF
//    <name> RAFIF </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007CA4) RB Almost Full Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.12..12> RAFIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_RFIF  -----------------------------------
// SVD Line: 23993

//  <item> SFDITEM_FIELD__CAN2_RTIE_RFIF
//    <name> RFIF </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007CA4) RB Full Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.13..13> RFIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_ROIF  -----------------------------------
// SVD Line: 24000

//  <item> SFDITEM_FIELD__CAN2_RTIE_ROIF
//    <name> ROIF </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007CA4) RB Overflow Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.14..14> ROIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_RIF  -----------------------------------
// SVD Line: 24007

//  <item> SFDITEM_FIELD__CAN2_RTIE_RIF
//    <name> RIF </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007CA4) Receive Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.15..15> RIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_BEIF  -----------------------------------
// SVD Line: 24014

//  <item> SFDITEM_FIELD__CAN2_RTIE_BEIF
//    <name> BEIF </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40007CA4) Bus Error Interrupt flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.16..16> BEIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_BEIE  -----------------------------------
// SVD Line: 24021

//  <item> SFDITEM_FIELD__CAN2_RTIE_BEIE
//    <name> BEIE </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40007CA4) Bus Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.17..17> BEIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_ALIF  -----------------------------------
// SVD Line: 24028

//  <item> SFDITEM_FIELD__CAN2_RTIE_ALIF
//    <name> ALIF </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40007CA4) Arbitration Lost Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.18..18> ALIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_ALIE  -----------------------------------
// SVD Line: 24035

//  <item> SFDITEM_FIELD__CAN2_RTIE_ALIE
//    <name> ALIE </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40007CA4) Arbitration Lost Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.19..19> ALIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_EPIF  -----------------------------------
// SVD Line: 24042

//  <item> SFDITEM_FIELD__CAN2_RTIE_EPIF
//    <name> EPIF </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007CA4) Error Passive Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.20..20> EPIF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_EPIE  -----------------------------------
// SVD Line: 24049

//  <item> SFDITEM_FIELD__CAN2_RTIE_EPIE
//    <name> EPIE </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007CA4) Error Passive Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.21..21> EPIE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_EPASS  ----------------------------------
// SVD Line: 24056

//  <item> SFDITEM_FIELD__CAN2_RTIE_EPASS
//    <name> EPASS </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007CA4) Error Passive Mode Active enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.22..22> EPASS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_EWARN  ----------------------------------
// SVD Line: 24063

//  <item> SFDITEM_FIELD__CAN2_RTIE_EWARN
//    <name> EWARN </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007CA4) Error Warning Limit Reached </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_RTIE ) </loc>
//      <o.23..23> EWARN
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_RTIE_EWL  -----------------------------------
// SVD Line: 24070

//  <item> SFDITEM_FIELD__CAN2_RTIE_EWL
//    <name> EWL </name>
//    <rw> 
//    <i> [Bits 27..24] RW (@ 0x40007CA4) Programmable Error Warnig Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_RTIE >> 24) & 0xF), ((CAN2_RTIE = (CAN2_RTIE & ~(0xFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_RTIE_AFWL  -----------------------------------
// SVD Line: 24077

//  <item> SFDITEM_FIELD__CAN2_RTIE_AFWL
//    <name> AFWL </name>
//    <rw> 
//    <i> [Bits 31..28] RW (@ 0x40007CA4) Receive Buffer Almost Full Warning Limit </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_RTIE >> 28) & 0xF), ((CAN2_RTIE = (CAN2_RTIE & ~(0xFUL << 28 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 28 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_RTIE  -----------------------------------
// SVD Line: 23893

//  <rtree> SFDITEM_REG__CAN2_RTIE
//    <name> RTIE </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CA4) Receive and Transmit Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((CAN2_RTIE >> 0) & 0xFFFFFFFF), ((CAN2_RTIE = (CAN2_RTIE & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_RTIE_TSFF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_TSIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_TPIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RAFIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RFIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_ROIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_AIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_TSIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_TPIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RAFIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RFIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_ROIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_RIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_BEIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_BEIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_ALIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_ALIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EPIF </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EPIE </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EPASS </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EWARN </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_EWL </item>
//    <item> SFDITEM_FIELD__CAN2_RTIE_AFWL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN2_S_Seg  -------------------------------
// SVD Line: 24086

unsigned int CAN2_S_Seg __AT (0x40007CA8);



// -----------------------------  Field Item: CAN2_S_Seg_S_Seg_1  ---------------------------------
// SVD Line: 24095

//  <item> SFDITEM_FIELD__CAN2_S_Seg_S_Seg_1
//    <name> S_Seg_1 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007CA8) Bit Timing Segment 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_S_Seg >> 0) & 0xFF), ((CAN2_S_Seg = (CAN2_S_Seg & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CAN2_S_Seg_S_Seg_2  ---------------------------------
// SVD Line: 24102

//  <item> SFDITEM_FIELD__CAN2_S_Seg_S_Seg_2
//    <name> S_Seg_2 </name>
//    <rw> 
//    <i> [Bits 14..8] RW (@ 0x40007CA8) Bit Timing Segment 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_S_Seg >> 8) & 0x7F), ((CAN2_S_Seg = (CAN2_S_Seg & ~(0x7FUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN2_S_Seg_S_SJW  ----------------------------------
// SVD Line: 24109

//  <item> SFDITEM_FIELD__CAN2_S_Seg_S_SJW
//    <name> S_SJW </name>
//    <rw> 
//    <i> [Bits 22..16] RW (@ 0x40007CA8) Synchronization Jump Width </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_S_Seg >> 16) & 0x7F), ((CAN2_S_Seg = (CAN2_S_Seg & ~(0x7FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -----------------------------  Field Item: CAN2_S_Seg_S_PRESC  ---------------------------------
// SVD Line: 24116

//  <item> SFDITEM_FIELD__CAN2_S_Seg_S_PRESC
//    <name> S_PRESC </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40007CA8) Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_S_Seg >> 24) & 0xFF), ((CAN2_S_Seg = (CAN2_S_Seg & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN2_S_Seg  -----------------------------------
// SVD Line: 24086

//  <rtree> SFDITEM_REG__CAN2_S_Seg
//    <name> S_Seg </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CA8) Bit Timing Register </i>
//    <loc> ( (unsigned int)((CAN2_S_Seg >> 0) & 0xFFFFFFFF), ((CAN2_S_Seg = (CAN2_S_Seg & ~(0xFF7F7FFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF7F7FFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_S_Seg_S_Seg_1 </item>
//    <item> SFDITEM_FIELD__CAN2_S_Seg_S_Seg_2 </item>
//    <item> SFDITEM_FIELD__CAN2_S_Seg_S_SJW </item>
//    <item> SFDITEM_FIELD__CAN2_S_Seg_S_PRESC </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CAN2_EALCAP  -------------------------------
// SVD Line: 24125

unsigned int CAN2_EALCAP __AT (0x40007CB0);



// -------------------------------  Field Item: CAN2_EALCAP_ALC  ----------------------------------
// SVD Line: 24134

//  <item> SFDITEM_FIELD__CAN2_EALCAP_ALC
//    <name> ALC </name>
//    <r> 
//    <i> [Bits 4..0] RO (@ 0x40007CB0) Arbitration Lost Capture </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_EALCAP >> 0) & 0x1F) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN2_EALCAP_KOER  ----------------------------------
// SVD Line: 24141

//  <item> SFDITEM_FIELD__CAN2_EALCAP_KOER
//    <name> KOER </name>
//    <r> 
//    <i> [Bits 7..5] RO (@ 0x40007CB0) Kind of Error </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_EALCAP >> 5) & 0x7) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN2_EALCAP_RECNT  ---------------------------------
// SVD Line: 24148

//  <item> SFDITEM_FIELD__CAN2_EALCAP_RECNT
//    <name> RECNT </name>
//    <r> 
//    <i> [Bits 23..16] RO (@ 0x40007CB0) Receive Error Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_EALCAP >> 16) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// ------------------------------  Field Item: CAN2_EALCAP_TECNT  ---------------------------------
// SVD Line: 24155

//  <item> SFDITEM_FIELD__CAN2_EALCAP_TECNT
//    <name> TECNT </name>
//    <r> 
//    <i> [Bits 31..24] RO (@ 0x40007CB0) Transmit Error Count </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_EALCAP >> 24) & 0xFF) ) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN2_EALCAP  ----------------------------------
// SVD Line: 24125

//  <rtree> SFDITEM_REG__CAN2_EALCAP
//    <name> EALCAP </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CB0) Error and Arbitration Lost Capture Register </i>
//    <loc> ( (unsigned int)((CAN2_EALCAP >> 0) & 0xFFFFFFFF) ) </loc>
//    <item> SFDITEM_FIELD__CAN2_EALCAP_ALC </item>
//    <item> SFDITEM_FIELD__CAN2_EALCAP_KOER </item>
//    <item> SFDITEM_FIELD__CAN2_EALCAP_RECNT </item>
//    <item> SFDITEM_FIELD__CAN2_EALCAP_TECNT </item>
//  </rtree>
//  


// ---------------------------  Register Item Address: CAN2_ACFCTRL  ------------------------------
// SVD Line: 24164

unsigned int CAN2_ACFCTRL __AT (0x40007CB4);



// -----------------------------  Field Item: CAN2_ACFCTRL_ACFADR  --------------------------------
// SVD Line: 24173

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_ACFADR
//    <name> ACFADR </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40007CB4) Acceptance filter address </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_ACFCTRL >> 0) & 0xF), ((CAN2_ACFCTRL = (CAN2_ACFCTRL & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ----------------------------  Field Item: CAN2_ACFCTRL_SELMASK  --------------------------------
// SVD Line: 24180

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_SELMASK
//    <name> SELMASK </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007CB4) Select Acceptance MASK </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.5..5> SELMASK
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE0  ----------------------------------
// SVD Line: 24187

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE0
//    <name> AE0 </name>
//    <rw> 
//    <i> [Bit 16] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.16..16> AE0
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE1  ----------------------------------
// SVD Line: 24194

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE1
//    <name> AE1 </name>
//    <rw> 
//    <i> [Bit 17] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.17..17> AE1
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE2  ----------------------------------
// SVD Line: 24201

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE2
//    <name> AE2 </name>
//    <rw> 
//    <i> [Bit 18] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.18..18> AE2
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE3  ----------------------------------
// SVD Line: 24208

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE3
//    <name> AE3 </name>
//    <rw> 
//    <i> [Bit 19] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.19..19> AE3
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE4  ----------------------------------
// SVD Line: 24215

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE4
//    <name> AE4 </name>
//    <rw> 
//    <i> [Bit 20] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.20..20> AE4
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE5  ----------------------------------
// SVD Line: 24222

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE5
//    <name> AE5 </name>
//    <rw> 
//    <i> [Bit 21] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.21..21> AE5
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE6  ----------------------------------
// SVD Line: 24229

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE6
//    <name> AE6 </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.22..22> AE6
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE7  ----------------------------------
// SVD Line: 24236

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE7
//    <name> AE7 </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.23..23> AE7
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE8  ----------------------------------
// SVD Line: 24243

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE8
//    <name> AE8 </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.24..24> AE8
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE9  ----------------------------------
// SVD Line: 24250

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE9
//    <name> AE9 </name>
//    <rw> 
//    <i> [Bit 25] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.25..25> AE9
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE10  ---------------------------------
// SVD Line: 24257

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE10
//    <name> AE10 </name>
//    <rw> 
//    <i> [Bit 26] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.26..26> AE10
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE11  ---------------------------------
// SVD Line: 24264

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE11
//    <name> AE11 </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.27..27> AE11
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE12  ---------------------------------
// SVD Line: 24271

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE12
//    <name> AE12 </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.28..28> AE12
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE13  ---------------------------------
// SVD Line: 24278

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE13
//    <name> AE13 </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.29..29> AE13
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE14  ---------------------------------
// SVD Line: 24285

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE14
//    <name> AE14 </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.30..30> AE14
//    </check>
//  </item>
//  


// ------------------------------  Field Item: CAN2_ACFCTRL_AE15  ---------------------------------
// SVD Line: 24292

//  <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE15
//    <name> AE15 </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007CB4) Acceptance Filter Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACFCTRL ) </loc>
//      <o.31..31> AE15
//    </check>
//  </item>
//  


// ------------------------------  Register RTree: CAN2_ACFCTRL  ----------------------------------
// SVD Line: 24164

//  <rtree> SFDITEM_REG__CAN2_ACFCTRL
//    <name> ACFCTRL </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CB4) Acceptance Filter Control Register </i>
//    <loc> ( (unsigned int)((CAN2_ACFCTRL >> 0) & 0xFFFFFFFF), ((CAN2_ACFCTRL = (CAN2_ACFCTRL & ~(0xFFFF002FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF002F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_ACFADR </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_SELMASK </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE0 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE1 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE2 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE3 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE4 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE5 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE6 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE7 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE8 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE9 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE10 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE11 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE12 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE13 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE14 </item>
//    <item> SFDITEM_FIELD__CAN2_ACFCTRL_AE15 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN2_ACF0  --------------------------------
// SVD Line: 24301

unsigned int CAN2_ACF0 __AT (0x40007CB8);



// -------------------------------  Field Item: CAN2_ACF0_ACODE  ----------------------------------
// SVD Line: 24310

//  <item> SFDITEM_FIELD__CAN2_ACF0_ACODE
//    <name> ACODE </name>
//    <rw> 
//    <i> [Bits 28..0] RW (@ 0x40007CB8) Acceptance Code </i>
//    <edit> 
//      <loc> ( (unsigned int)((CAN2_ACF0 >> 0) & 0x1FFFFFFF), ((CAN2_ACF0 = (CAN2_ACF0 & ~(0x1FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_ACF0_AIDE  -----------------------------------
// SVD Line: 24317

//  <item> SFDITEM_FIELD__CAN2_ACF0_AIDE
//    <name> AIDE </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007CB8) Acceptance Mask IDE Bit value </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACF0 ) </loc>
//      <o.29..29> AIDE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_ACF0_AIDEE  ----------------------------------
// SVD Line: 24324

//  <item> SFDITEM_FIELD__CAN2_ACF0_AIDEE
//    <name> AIDEE </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007CB8) Acceptance Mask IDE bit check enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_ACF0 ) </loc>
//      <o.30..30> AIDEE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_ACF0  -----------------------------------
// SVD Line: 24301

//  <rtree> SFDITEM_REG__CAN2_ACF0
//    <name> ACF0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CB8) Acceptance Code Register </i>
//    <loc> ( (unsigned int)((CAN2_ACF0 >> 0) & 0xFFFFFFFF), ((CAN2_ACF0 = (CAN2_ACF0 & ~(0x7FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x7FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_ACF0_ACODE </item>
//    <item> SFDITEM_FIELD__CAN2_ACF0_AIDE </item>
//    <item> SFDITEM_FIELD__CAN2_ACF0_AIDEE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN2_VER  --------------------------------
// SVD Line: 24333

unsigned int CAN2_VER __AT (0x40007CBC);



// --------------------------------  Field Item: CAN2_VER_VER  ------------------------------------
// SVD Line: 24342

//  <item> SFDITEM_FIELD__CAN2_VER_VER
//    <name> VER </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40007CBC) Version of CAN-CTRL </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN2_VER >> 0) & 0xFFFF), ((CAN2_VER = (CAN2_VER & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_VER_TBPTR  -----------------------------------
// SVD Line: 24349

//  <item> SFDITEM_FIELD__CAN2_VER_TBPTR
//    <name> TBPTR </name>
//    <rw> 
//    <i> [Bits 21..16] RW (@ 0x40007CBC) pointer to a TB message slot </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_VER >> 16) & 0x3F), ((CAN2_VER = (CAN2_VER & ~(0x3FUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TBF  ------------------------------------
// SVD Line: 24356

//  <item> SFDITEM_FIELD__CAN2_VER_TBF
//    <name> TBF </name>
//    <rw> 
//    <i> [Bit 22] RW (@ 0x40007CBC) set TB slot to Filled </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.22..22> TBF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TBE  ------------------------------------
// SVD Line: 24363

//  <item> SFDITEM_FIELD__CAN2_VER_TBE
//    <name> TBE </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007CBC) set TB slot to Empty </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.23..23> TBE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TTEN  -----------------------------------
// SVD Line: 24370

//  <item> SFDITEM_FIELD__CAN2_VER_TTEN
//    <name> TTEN </name>
//    <rw> 
//    <i> [Bit 24] RW (@ 0x40007CBC) Timer Trigger Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.24..24> TTEN
//    </check>
//  </item>
//  


// -------------------------------  Field Item: CAN2_VER_PRESC  -----------------------------------
// SVD Line: 24377

//  <item> SFDITEM_FIELD__CAN2_VER_PRESC
//    <name> PRESC </name>
//    <rw> 
//    <i> [Bits 26..25] RW (@ 0x40007CBC) TTCAN Timer Prescaler </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_VER >> 25) & 0x3), ((CAN2_VER = (CAN2_VER & ~(0x3UL << 25 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 25 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TTIF  -----------------------------------
// SVD Line: 24384

//  <item> SFDITEM_FIELD__CAN2_VER_TTIF
//    <name> TTIF </name>
//    <rw> 
//    <i> [Bit 27] RW (@ 0x40007CBC) Timer Trigger Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.27..27> TTIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TTIE  -----------------------------------
// SVD Line: 24391

//  <item> SFDITEM_FIELD__CAN2_VER_TTIE
//    <name> TTIE </name>
//    <rw> 
//    <i> [Bit 28] RW (@ 0x40007CBC) Timer Trigger Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.28..28> TTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_TEIF  -----------------------------------
// SVD Line: 24398

//  <item> SFDITEM_FIELD__CAN2_VER_TEIF
//    <name> TEIF </name>
//    <rw> 
//    <i> [Bit 29] RW (@ 0x40007CBC) Trigger Error Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.29..29> TEIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_WTIF  -----------------------------------
// SVD Line: 24405

//  <item> SFDITEM_FIELD__CAN2_VER_WTIF
//    <name> WTIF </name>
//    <rw> 
//    <i> [Bit 30] RW (@ 0x40007CBC) Watch Trigger Interrupt Flag </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.30..30> WTIF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: CAN2_VER_WTIE  -----------------------------------
// SVD Line: 24412

//  <item> SFDITEM_FIELD__CAN2_VER_WTIE
//    <name> WTIE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007CBC) Watch Trigger Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_VER ) </loc>
//      <o.31..31> WTIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_VER  ------------------------------------
// SVD Line: 24333

//  <rtree> SFDITEM_REG__CAN2_VER
//    <name> VER </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CBC) Version Information Register 0 </i>
//    <loc> ( (unsigned int)((CAN2_VER >> 0) & 0xFFFFFFFF), ((CAN2_VER = (CAN2_VER & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_VER_VER </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TBPTR </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TBF </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TBE </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TTEN </item>
//    <item> SFDITEM_FIELD__CAN2_VER_PRESC </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TTIF </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TTIE </item>
//    <item> SFDITEM_FIELD__CAN2_VER_TEIF </item>
//    <item> SFDITEM_FIELD__CAN2_VER_WTIF </item>
//    <item> SFDITEM_FIELD__CAN2_VER_WTIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN2_MSG  --------------------------------
// SVD Line: 24421

unsigned int CAN2_MSG __AT (0x40007CC0);



// ---------------------------------  Field Item: CAN2_MSG_ID  ------------------------------------
// SVD Line: 24430

//  <item> SFDITEM_FIELD__CAN2_MSG_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 28..0] RW (@ 0x40007CC0) Reference Message </i>
//    <edit> 
//      <loc> ( (unsigned int)((CAN2_MSG >> 0) & 0x1FFFFFFF), ((CAN2_MSG = (CAN2_MSG & ~(0x1FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1FFFFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN2_MSG_IDE  ------------------------------------
// SVD Line: 24437

//  <item> SFDITEM_FIELD__CAN2_MSG_IDE
//    <name> IDE </name>
//    <rw> 
//    <i> [Bit 31] RW (@ 0x40007CC0) Reference Message IDE Bit </i>
//    <check> 
//      <loc> ( (unsigned int) CAN2_MSG ) </loc>
//      <o.31..31> IDE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_MSG  ------------------------------------
// SVD Line: 24421

//  <rtree> SFDITEM_REG__CAN2_MSG
//    <name> MSG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CC0) TTCAN: Reference Message </i>
//    <loc> ( (unsigned int)((CAN2_MSG >> 0) & 0xFFFFFFFF), ((CAN2_MSG = (CAN2_MSG & ~(0x9FFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x9FFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_MSG_ID </item>
//    <item> SFDITEM_FIELD__CAN2_MSG_IDE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: CAN2_CFG  --------------------------------
// SVD Line: 24446

unsigned int CAN2_CFG __AT (0x40007CC4);



// -------------------------------  Field Item: CAN2_CFG_TTPTR  -----------------------------------
// SVD Line: 24455

//  <item> SFDITEM_FIELD__CAN2_CFG_TTPTR
//    <name> TTPTR </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007CC4) Transmit Trigger TB Slot Pointer </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_CFG >> 0) & 0x3F), ((CAN2_CFG = (CAN2_CFG & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: CAN2_CFG_TTYPE  -----------------------------------
// SVD Line: 24462

//  <item> SFDITEM_FIELD__CAN2_CFG_TTYPE
//    <name> TTYPE </name>
//    <rw> 
//    <i> [Bits 10..8] RW (@ 0x40007CC4) trigger type </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_CFG >> 8) & 0x7), ((CAN2_CFG = (CAN2_CFG & ~(0x7UL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN2_CFG_TEW  ------------------------------------
// SVD Line: 24469

//  <item> SFDITEM_FIELD__CAN2_CFG_TEW
//    <name> TEW </name>
//    <rw> 
//    <i> [Bits 15..12] RW (@ 0x40007CC4) Transmit enable window </i>
//    <edit> 
//      <loc> ( (unsigned char)((CAN2_CFG >> 12) & 0xF), ((CAN2_CFG = (CAN2_CFG & ~(0xFUL << 12 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 12 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: CAN2_CFG_TRIG  -----------------------------------
// SVD Line: 24476

//  <item> SFDITEM_FIELD__CAN2_CFG_TRIG
//    <name> TRIG </name>
//    <rw> 
//    <i> [Bits 31..16] RW (@ 0x40007CC4) trigger time </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN2_CFG >> 16) & 0xFFFF), ((CAN2_CFG = (CAN2_CFG & ~(0xFFFFUL << 16 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: CAN2_CFG  ------------------------------------
// SVD Line: 24446

//  <rtree> SFDITEM_REG__CAN2_CFG
//    <name> CFG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CC4) TTCAN:Trigger Configuration </i>
//    <loc> ( (unsigned int)((CAN2_CFG >> 0) & 0xFFFFFFFF), ((CAN2_CFG = (CAN2_CFG & ~(0xFFFFF73FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFF73F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_CFG_TTPTR </item>
//    <item> SFDITEM_FIELD__CAN2_CFG_TTYPE </item>
//    <item> SFDITEM_FIELD__CAN2_CFG_TEW </item>
//    <item> SFDITEM_FIELD__CAN2_CFG_TRIG </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: CAN2_WTRIG  -------------------------------
// SVD Line: 24485

unsigned int CAN2_WTRIG __AT (0x40007CC8);



// ------------------------------  Field Item: CAN2_WTRIG_WTRIG  ----------------------------------
// SVD Line: 24494

//  <item> SFDITEM_FIELD__CAN2_WTRIG_WTRIG
//    <name> WTRIG </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40007CC8) watch trigger time </i>
//    <edit> 
//      <loc> ( (unsigned short)((CAN2_WTRIG >> 0) & 0xFFFF), ((CAN2_WTRIG = (CAN2_WTRIG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Register RTree: CAN2_WTRIG  -----------------------------------
// SVD Line: 24485

//  <rtree> SFDITEM_REG__CAN2_WTRIG
//    <name> WTRIG </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007CC8) TTCAN: Watch Trigger Tim </i>
//    <loc> ( (unsigned int)((CAN2_WTRIG >> 0) & 0xFFFFFFFF), ((CAN2_WTRIG = (CAN2_WTRIG & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__CAN2_WTRIG_WTRIG </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: CAN2  -------------------------------------
// SVD Line: 23699

//  <view> CAN2
//    <name> CAN2 </name>
//    <item> SFDITEM_REG__CAN2_STAT </item>
//    <item> SFDITEM_REG__CAN2_RTIE </item>
//    <item> SFDITEM_REG__CAN2_S_Seg </item>
//    <item> SFDITEM_REG__CAN2_EALCAP </item>
//    <item> SFDITEM_REG__CAN2_ACFCTRL </item>
//    <item> SFDITEM_REG__CAN2_ACF0 </item>
//    <item> SFDITEM_REG__CAN2_VER </item>
//    <item> SFDITEM_REG__CAN2_MSG </item>
//    <item> SFDITEM_REG__CAN2_CFG </item>
//    <item> SFDITEM_REG__CAN2_WTRIG </item>
//  </view>
//  


// -----------------------------  Register Item Address: LIN0_SYS  --------------------------------
// SVD Line: 24521

unsigned int LIN0_SYS __AT (0x40007000);



// ---------------------------------  Field Item: LIN0_SYS_LM  ------------------------------------
// SVD Line: 24530

//  <item> SFDITEM_FIELD__LIN0_SYS_LM
//    <name> LM </name>
//    <rw> 
//    <i> [Bits 1..0] RW (@ 0x40007000) LIN Mode Select </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_SYS >> 0) & 0x3), ((LIN0_SYS = (LIN0_SYS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_SYS  ------------------------------------
// SVD Line: 24521

//  <rtree> SFDITEM_REG__LIN0_SYS
//    <name> SYS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007000) LIN System Control Register </i>
//    <loc> ( (unsigned int)((LIN0_SYS >> 0) & 0xFFFFFFFF), ((LIN0_SYS = (LIN0_SYS & ~(0x3UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_SYS_LM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_CTRL1  -------------------------------
// SVD Line: 24539

unsigned int LIN0_CTRL1 __AT (0x40007004);



// --------------------------------  Field Item: LIN0_CTRL1_SM  -----------------------------------
// SVD Line: 24548

//  <item> SFDITEM_FIELD__LIN0_CTRL1_SM
//    <name> SM </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007004) LIN Slave Mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.0..0> SM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_LBM  -----------------------------------
// SVD Line: 24555

//  <item> SFDITEM_FIELD__LIN0_CTRL1_LBM
//    <name> LBM </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007004) LIN Loop back Mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.1..1> LBM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_STM  -----------------------------------
// SVD Line: 24562

//  <item> SFDITEM_FIELD__LIN0_CTRL1_STM
//    <name> STM </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007004) LIN Self Test Mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.2..2> STM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_SCM  -----------------------------------
// SVD Line: 24569

//  <item> SFDITEM_FIELD__LIN0_CTRL1_SCM
//    <name> SCM </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007004) LIN software control Mode enable bit </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.3..3> SCM
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_BLT  -----------------------------------
// SVD Line: 24576

//  <item> SFDITEM_FIELD__LIN0_CTRL1_BLT
//    <name> BLT </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007004) LIN Break Length threshold select </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.4..4> BLT
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_BTL  -----------------------------------
// SVD Line: 24583

//  <item> SFDITEM_FIELD__LIN0_CTRL1_BTL
//    <name> BTL </name>
//    <rw> 
//    <i> [Bits 11..8] RW (@ 0x40007004) LIN Break field transmit length in master mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_CTRL1 >> 8) & 0xF), ((LIN0_CTRL1 = (LIN0_CTRL1 & ~(0xFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_ATWU  ----------------------------------
// SVD Line: 24590

//  <item> SFDITEM_FIELD__LIN0_CTRL1_ATWU
//    <name> ATWU </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x40007004) Control the behavior of the LIN hardware during sleep mode </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.12..12> ATWU
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_RSE  -----------------------------------
// SVD Line: 24597

//  <item> SFDITEM_FIELD__LIN0_CTRL1_RSE
//    <name> RSE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x40007004) LIN Slave Automatic Resynchronization Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.13..13> RSE
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_MCS  -----------------------------------
// SVD Line: 24604

//  <item> SFDITEM_FIELD__LIN0_CTRL1_MCS
//    <name> MCS </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x40007004) Disable the hardware checksum calculation </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.14..14> MCS
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_BDL  -----------------------------------
// SVD Line: 24611

//  <item> SFDITEM_FIELD__LIN0_CTRL1_BDL
//    <name> BDL </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x40007004) Break delimiter length </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.15..15> BDL
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_HIL  -----------------------------------
// SVD Line: 24618

//  <item> SFDITEM_FIELD__LIN0_CTRL1_HIL
//    <name> HIL </name>
//    <rw> 
//    <i> [Bits 17..16] RW (@ 0x40007004) Header inter-byte length between sync field and PID filed in master mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_CTRL1 >> 16) & 0x3), ((LIN0_CTRL1 = (LIN0_CTRL1 & ~(0x3UL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_RSL  -----------------------------------
// SVD Line: 24625

//  <item> SFDITEM_FIELD__LIN0_CTRL1_RSL
//    <name> RSL </name>
//    <rw> 
//    <i> [Bits 19..18] RW (@ 0x40007004) Response inter space length, only for master mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_CTRL1 >> 18) & 0x3), ((LIN0_CTRL1 = (LIN0_CTRL1 & ~(0x3UL << 18 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 18 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_RIL  -----------------------------------
// SVD Line: 24632

//  <item> SFDITEM_FIELD__LIN0_CTRL1_RIL
//    <name> RIL </name>
//    <rw> 
//    <i> [Bits 21..20] RW (@ 0x40007004) Response inter byte length between response data </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_CTRL1 >> 20) & 0x3), ((LIN0_CTRL1 = (LIN0_CTRL1 & ~(0x3UL << 20 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 20 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL1_DIOB  ----------------------------------
// SVD Line: 24639

//  <item> SFDITEM_FIELD__LIN0_CTRL1_DIOB
//    <name> DIOB </name>
//    <rw> 
//    <i> [Bit 23] RW (@ 0x40007004) LIN State machine goes to IDLE on bit error detection </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL1 ) </loc>
//      <o.23..23> DIOB
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LIN0_CTRL1  -----------------------------------
// SVD Line: 24539

//  <rtree> SFDITEM_REG__LIN0_CTRL1
//    <name> CTRL1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007004) LIN Control Register 1 </i>
//    <loc> ( (unsigned int)((LIN0_CTRL1 >> 0) & 0xFFFFFFFF), ((LIN0_CTRL1 = (LIN0_CTRL1 & ~(0xBFFF1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xBFFF1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_SM </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_LBM </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_STM </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_SCM </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_BLT </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_BTL </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_ATWU </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_RSE </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_MCS </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_BDL </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_HIL </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_RSL </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_RIL </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL1_DIOB </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_CTRL2  -------------------------------
// SVD Line: 24648

unsigned int LIN0_CTRL2 __AT (0x40007008);



// -------------------------------  Field Item: LIN0_CTRL2_HTR  -----------------------------------
// SVD Line: 24657

//  <item> SFDITEM_FIELD__LIN0_CTRL2_HTR
//    <name> HTR </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007008) Header Transmission Requeset </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL2 ) </loc>
//      <o.0..0> HTR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL2_RTR  -----------------------------------
// SVD Line: 24664

//  <item> SFDITEM_FIELD__LIN0_CTRL2_RTR
//    <name> RTR </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007008) Data Transmission Request </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL2 ) </loc>
//      <o.2..2> RTR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL2_RDR  -----------------------------------
// SVD Line: 24671

//  <item> SFDITEM_FIELD__LIN0_CTRL2_RDR
//    <name> RDR </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007008) Response Discard Request </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL2 ) </loc>
//      <o.3..3> RDR
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_CTRL2_WUTR  ----------------------------------
// SVD Line: 24678

//  <item> SFDITEM_FIELD__LIN0_CTRL2_WUTR
//    <name> WUTR </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007008) Wakeup TX Request </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_CTRL2 ) </loc>
//      <o.4..4> WUTR
//    </check>
//  </item>
//  


// -------------------------------  Register RTree: LIN0_CTRL2  -----------------------------------
// SVD Line: 24648

//  <rtree> SFDITEM_REG__LIN0_CTRL2
//    <name> CTRL2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007008) LIN Control register 2 </i>
//    <loc> ( (unsigned int)((LIN0_CTRL2 >> 0) & 0xFFFFFFFF), ((LIN0_CTRL2 = (LIN0_CTRL2 & ~(0x1DUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1D) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_CTRL2_HTR </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL2_RTR </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL2_RDR </item>
//    <item> SFDITEM_FIELD__LIN0_CTRL2_WUTR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_IEN  --------------------------------
// SVD Line: 24687

unsigned int LIN0_IEN __AT (0x4000700C);



// -------------------------------  Field Item: LIN0_IEN_HTRIE  -----------------------------------
// SVD Line: 24696

//  <item> SFDITEM_FIELD__LIN0_IEN_HTRIE
//    <name> HTRIE </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000700C) Header Received Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.0..0> HTRIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_RTIE  -----------------------------------
// SVD Line: 24703

//  <item> SFDITEM_FIELD__LIN0_IEN_RTIE
//    <name> RTIE </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x4000700C) Response Transmitted Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.1..1> RTIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_RRIE  -----------------------------------
// SVD Line: 24710

//  <item> SFDITEM_FIELD__LIN0_IEN_RRIE
//    <name> RRIE </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x4000700C) Response Reception Complete Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.2..2> RRIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_WUIE  -----------------------------------
// SVD Line: 24717

//  <item> SFDITEM_FIELD__LIN0_IEN_WUIE
//    <name> WUIE </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x4000700C) Wakeup Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.5..5> WUIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_FEIE  -----------------------------------
// SVD Line: 24724

//  <item> SFDITEM_FIELD__LIN0_IEN_FEIE
//    <name> FEIE </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000700C) Framing Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.8..8> FEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_BOIE  -----------------------------------
// SVD Line: 24731

//  <item> SFDITEM_FIELD__LIN0_IEN_BOIE
//    <name> BOIE </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000700C) Buffer Overrun Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.9..9> BOIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_HEIE  -----------------------------------
// SVD Line: 24738

//  <item> SFDITEM_FIELD__LIN0_IEN_HEIE
//    <name> HEIE </name>
//    <rw> 
//    <i> [Bit 11] RW (@ 0x4000700C) Header Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.11..11> HEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_CEIE  -----------------------------------
// SVD Line: 24745

//  <item> SFDITEM_FIELD__LIN0_IEN_CEIE
//    <name> CEIE </name>
//    <rw> 
//    <i> [Bit 12] RW (@ 0x4000700C) Checksum error Interrupt enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.12..12> CEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_BEIE  -----------------------------------
// SVD Line: 24752

//  <item> SFDITEM_FIELD__LIN0_IEN_BEIE
//    <name> BEIE </name>
//    <rw> 
//    <i> [Bit 13] RW (@ 0x4000700C) Bit Error Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.13..13> BEIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_TOIE  -----------------------------------
// SVD Line: 24759

//  <item> SFDITEM_FIELD__LIN0_IEN_TOIE
//    <name> TOIE </name>
//    <rw> 
//    <i> [Bit 14] RW (@ 0x4000700C) Timeout Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.14..14> TOIE
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_IEN_LZIE  -----------------------------------
// SVD Line: 24766

//  <item> SFDITEM_FIELD__LIN0_IEN_LZIE
//    <name> LZIE </name>
//    <rw> 
//    <i> [Bit 15] RW (@ 0x4000700C) Long Zero Interrupt Enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IEN ) </loc>
//      <o.15..15> LZIE
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_IEN  ------------------------------------
// SVD Line: 24687

//  <rtree> SFDITEM_REG__LIN0_IEN
//    <name> IEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000700C) LIN Interrupt Enable Register </i>
//    <loc> ( (unsigned int)((LIN0_IEN >> 0) & 0xFFFFFFFF), ((LIN0_IEN = (LIN0_IEN & ~(0xFB27UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFB27) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IEN_HTRIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_RTIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_RRIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_WUIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_FEIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_BOIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_HEIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_CEIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_BEIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_TOIE </item>
//    <item> SFDITEM_FIELD__LIN0_IEN_LZIE </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_STS  --------------------------------
// SVD Line: 24775

unsigned int LIN0_STS __AT (0x40007010);



// --------------------------------  Field Item: LIN0_STS_HTRF  -----------------------------------
// SVD Line: 24784

//  <item> SFDITEM_FIELD__LIN0_STS_HTRF
//    <name> HTRF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007010) Header Transmission/Reception Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.0..0> HTRF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_DTF  ------------------------------------
// SVD Line: 24791

//  <item> SFDITEM_FIELD__LIN0_STS_DTF
//    <name> DTF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007010) Data Transmission Completed Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.1..1> DTF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_DRF  ------------------------------------
// SVD Line: 24798

//  <item> SFDITEM_FIELD__LIN0_STS_DRF
//    <name> DRF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007010) Data Reception Completed Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.2..2> DRF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_WUF  ------------------------------------
// SVD Line: 24805

//  <item> SFDITEM_FIELD__LIN0_STS_WUF
//    <name> WUF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007010) Wake-up Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.3..3> WUF
//    </check>
//  </item>
//  


// ---------------------------------  Field Item: LIN0_STS_PS  ------------------------------------
// SVD Line: 24812

//  <item> SFDITEM_FIELD__LIN0_STS_PS
//    <name> PS </name>
//    <r> 
//    <i> [Bit 4] RO (@ 0x40007010) LIN receive pin state </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.4..4> PS
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_RTIP  -----------------------------------
// SVD Line: 24819

//  <item> SFDITEM_FIELD__LIN0_STS_RTIP
//    <name> RTIP </name>
//    <r> 
//    <i> [Bit 5] RO (@ 0x40007010) Response TX in Progress </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.5..5> RTIP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_RRIP  -----------------------------------
// SVD Line: 24826

//  <item> SFDITEM_FIELD__LIN0_STS_RRIP
//    <name> RRIP </name>
//    <r> 
//    <i> [Bit 6] RO (@ 0x40007010) Response RX in Progress </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_STS ) </loc>
//      <o.6..6> RRIP
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_STS_STS  ------------------------------------
// SVD Line: 24833

//  <item> SFDITEM_FIELD__LIN0_STS_STS
//    <name> STS </name>
//    <r> 
//    <i> [Bits 11..8] RO (@ 0x40007010) LIN mode status </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_STS >> 8) & 0xF) ) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_STS  ------------------------------------
// SVD Line: 24775

//  <rtree> SFDITEM_REG__LIN0_STS
//    <name> STS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007010) LIN Status Register </i>
//    <loc> ( (unsigned int)((LIN0_STS >> 0) & 0xFFFFFFFF), ((LIN0_STS = (LIN0_STS & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_STS_HTRF </item>
//    <item> SFDITEM_FIELD__LIN0_STS_DTF </item>
//    <item> SFDITEM_FIELD__LIN0_STS_DRF </item>
//    <item> SFDITEM_FIELD__LIN0_STS_WUF </item>
//    <item> SFDITEM_FIELD__LIN0_STS_PS </item>
//    <item> SFDITEM_FIELD__LIN0_STS_RTIP </item>
//    <item> SFDITEM_FIELD__LIN0_STS_RRIP </item>
//    <item> SFDITEM_FIELD__LIN0_STS_STS </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_ESTS  --------------------------------
// SVD Line: 24842

unsigned int LIN0_ESTS __AT (0x40007014);



// --------------------------------  Field Item: LIN0_ESTS_NF  ------------------------------------
// SVD Line: 24851

//  <item> SFDITEM_FIELD__LIN0_ESTS_NF
//    <name> NF </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x40007014) Noise Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.0..0> NF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_ESTS_BOF  -----------------------------------
// SVD Line: 24858

//  <item> SFDITEM_FIELD__LIN0_ESTS_BOF
//    <name> BOF </name>
//    <rw> 
//    <i> [Bit 1] RW (@ 0x40007014) Buffer Overrun Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.1..1> BOF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_ESTS_FEF  -----------------------------------
// SVD Line: 24865

//  <item> SFDITEM_FIELD__LIN0_ESTS_FEF
//    <name> FEF </name>
//    <rw> 
//    <i> [Bit 2] RW (@ 0x40007014) Framing Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.2..2> FEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_ESTS_IPEF  -----------------------------------
// SVD Line: 24872

//  <item> SFDITEM_FIELD__LIN0_ESTS_IPEF
//    <name> IPEF </name>
//    <rw> 
//    <i> [Bit 3] RW (@ 0x40007014) Identifier Parity Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.3..3> IPEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_ESTS_BDEF  -----------------------------------
// SVD Line: 24879

//  <item> SFDITEM_FIELD__LIN0_ESTS_BDEF
//    <name> BDEF </name>
//    <rw> 
//    <i> [Bit 4] RW (@ 0x40007014) Break Delimiter Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.4..4> BDEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_ESTS_SFEF  -----------------------------------
// SVD Line: 24886

//  <item> SFDITEM_FIELD__LIN0_ESTS_SFEF
//    <name> SFEF </name>
//    <rw> 
//    <i> [Bit 5] RW (@ 0x40007014) Synch Field Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.5..5> SFEF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_ESTS_CEF  -----------------------------------
// SVD Line: 24893

//  <item> SFDITEM_FIELD__LIN0_ESTS_CEF
//    <name> CEF </name>
//    <rw> 
//    <i> [Bit 6] RW (@ 0x40007014) Checksum Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.6..6> CEF
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_ESTS_BEF  -----------------------------------
// SVD Line: 24900

//  <item> SFDITEM_FIELD__LIN0_ESTS_BEF
//    <name> BEF </name>
//    <rw> 
//    <i> [Bit 7] RW (@ 0x40007014) Bit Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.7..7> BEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_ESTS_TOEF  -----------------------------------
// SVD Line: 24907

//  <item> SFDITEM_FIELD__LIN0_ESTS_TOEF
//    <name> TOEF </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007014) Time Out Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.8..8> TOEF
//    </check>
//  </item>
//  


// -------------------------------  Field Item: LIN0_ESTS_LZEF  -----------------------------------
// SVD Line: 24914

//  <item> SFDITEM_FIELD__LIN0_ESTS_LZEF
//    <name> LZEF </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007014) Long Zero Error Flag </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_ESTS ) </loc>
//      <o.9..9> LZEF
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_ESTS  -----------------------------------
// SVD Line: 24842

//  <rtree> SFDITEM_REG__LIN0_ESTS
//    <name> ESTS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007014) LIN Error Status register </i>
//    <loc> ( (unsigned int)((LIN0_ESTS >> 0) & 0xFFFFFFFF), ((LIN0_ESTS = (LIN0_ESTS & ~(0x3FFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3FF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_ESTS_NF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_BOF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_FEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_IPEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_BDEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_SFEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_CEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_BEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_TOEF </item>
//    <item> SFDITEM_FIELD__LIN0_ESTS_LZEF </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_TO1  --------------------------------
// SVD Line: 24923

unsigned int LIN0_TO1 __AT (0x40007018);



// --------------------------------  Field Item: LIN0_TO1_HTO  ------------------------------------
// SVD Line: 24932

//  <item> SFDITEM_FIELD__LIN0_TO1_HTO
//    <name> HTO </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007018) Header timeout value </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_TO1 >> 0) & 0x3F), ((LIN0_TO1 = (LIN0_TO1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_TO1  ------------------------------------
// SVD Line: 24923

//  <rtree> SFDITEM_REG__LIN0_TO1
//    <name> TO1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007018) LIN Time out control register 1 </i>
//    <loc> ( (unsigned int)((LIN0_TO1 >> 0) & 0xFFFFFFFF), ((LIN0_TO1 = (LIN0_TO1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_TO1_HTO </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_TO2  --------------------------------
// SVD Line: 24941

unsigned int LIN0_TO2 __AT (0x4000701C);



// --------------------------------  Field Item: LIN0_TO2_TOEN  -----------------------------------
// SVD Line: 24950

//  <item> SFDITEM_FIELD__LIN0_TO2_TOEN
//    <name> TOEN </name>
//    <rw> 
//    <i> [Bit 0] RW (@ 0x4000701C) Header timeout enable </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_TO2 ) </loc>
//      <o.0..0> TOEN
//    </check>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_TO2  ------------------------------------
// SVD Line: 24941

//  <rtree> SFDITEM_REG__LIN0_TO2
//    <name> TO2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000701C) LIN Time out control register 2 </i>
//    <loc> ( (unsigned int)((LIN0_TO2 >> 0) & 0xFFFFFFFF), ((LIN0_TO2 = (LIN0_TO2 & ~(0x1UL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_TO2_TOEN </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_IBR  --------------------------------
// SVD Line: 24959

unsigned int LIN0_IBR __AT (0x40007020);



// --------------------------------  Field Item: LIN0_IBR_IBR  ------------------------------------
// SVD Line: 24968

//  <item> SFDITEM_FIELD__LIN0_IBR_IBR
//    <name> IBR </name>
//    <rw> 
//    <i> [Bits 11..0] RW (@ 0x40007020) Integer baud rate divide value </i>
//    <edit> 
//      <loc> ( (unsigned short)((LIN0_IBR >> 0) & 0xFFF), ((LIN0_IBR = (LIN0_IBR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_IBR  ------------------------------------
// SVD Line: 24959

//  <rtree> SFDITEM_REG__LIN0_IBR
//    <name> IBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007020) LIN integer baud rate register </i>
//    <loc> ( (unsigned int)((LIN0_IBR >> 0) & 0xFFFFFFFF), ((LIN0_IBR = (LIN0_IBR & ~(0xFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IBR_IBR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_FBR  --------------------------------
// SVD Line: 24977

unsigned int LIN0_FBR __AT (0x40007024);



// --------------------------------  Field Item: LIN0_FBR_FBR  ------------------------------------
// SVD Line: 24986

//  <item> SFDITEM_FIELD__LIN0_FBR_FBR
//    <name> FBR </name>
//    <rw> 
//    <i> [Bits 3..0] RW (@ 0x40007024) Fractional baud rate divide value </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_FBR >> 0) & 0xF), ((LIN0_FBR = (LIN0_FBR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_FBR  ------------------------------------
// SVD Line: 24977

//  <rtree> SFDITEM_REG__LIN0_FBR
//    <name> FBR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007024) LIN fractional baud rate register </i>
//    <loc> ( (unsigned int)((LIN0_FBR >> 0) & 0xFFFFFFFF), ((LIN0_FBR = (LIN0_FBR & ~(0xFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_FBR_FBR </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_CS  ---------------------------------
// SVD Line: 24995

unsigned int LIN0_CS __AT (0x40007028);



// ---------------------------------  Field Item: LIN0_CS_CS  -------------------------------------
// SVD Line: 25004

//  <item> SFDITEM_FIELD__LIN0_CS_CS
//    <name> CS </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007028) LIN Checksum field value </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_CS >> 0) & 0xFF), ((LIN0_CS = (LIN0_CS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// ---------------------------------  Register RTree: LIN0_CS  ------------------------------------
// SVD Line: 24995

//  <rtree> SFDITEM_REG__LIN0_CS
//    <name> CS </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007028) LIN Checksum field register </i>
//    <loc> ( (unsigned int)((LIN0_CS >> 0) & 0xFFFFFFFF), ((LIN0_CS = (LIN0_CS & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_CS_CS </item>
//  </rtree>
//  


// -----------------------------  Register Item Address: LIN0_FRM  --------------------------------
// SVD Line: 25013

unsigned int LIN0_FRM __AT (0x4000702C);



// ---------------------------------  Field Item: LIN0_FRM_ID  ------------------------------------
// SVD Line: 25022

//  <item> SFDITEM_FIELD__LIN0_FRM_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000702C) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_FRM >> 0) & 0x3F), ((LIN0_FRM = (LIN0_FRM & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Field Item: LIN0_FRM_CST  ------------------------------------
// SVD Line: 25029

//  <item> SFDITEM_FIELD__LIN0_FRM_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000702C) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_FRM ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_FRM_DIR  ------------------------------------
// SVD Line: 25036

//  <item> SFDITEM_FIELD__LIN0_FRM_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000702C) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_FRM ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------------  Field Item: LIN0_FRM_DFL  ------------------------------------
// SVD Line: 25043

//  <item> SFDITEM_FIELD__LIN0_FRM_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..11] RW (@ 0x4000702C) Data field length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_FRM >> 11) & 0x3), ((LIN0_FRM = (LIN0_FRM & ~(0x3UL << 11 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3) << 11 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_FRM  ------------------------------------
// SVD Line: 25013

//  <rtree> SFDITEM_REG__LIN0_FRM
//    <name> FRM </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000702C) LIN Frame Control register </i>
//    <loc> ( (unsigned int)((LIN0_FRM >> 0) & 0xFFFFFFFF), ((LIN0_FRM = (LIN0_FRM & ~(0x1B3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1B3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_FRM_ID </item>
//    <item> SFDITEM_FIELD__LIN0_FRM_CST </item>
//    <item> SFDITEM_FIELD__LIN0_FRM_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_FRM_DFL </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_BDLR  --------------------------------
// SVD Line: 25052

unsigned int LIN0_BDLR __AT (0x40007030);



// -------------------------------  Field Item: LIN0_BDLR_DATA0  ----------------------------------
// SVD Line: 25061

//  <item> SFDITEM_FIELD__LIN0_BDLR_DATA0
//    <name> DATA0 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007030) Data 0 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDLR >> 0) & 0xFF), ((LIN0_BDLR = (LIN0_BDLR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDLR_DATA1  ----------------------------------
// SVD Line: 25068

//  <item> SFDITEM_FIELD__LIN0_BDLR_DATA1
//    <name> DATA1 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40007030) Data 1 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDLR >> 8) & 0xFF), ((LIN0_BDLR = (LIN0_BDLR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDLR_DATA2  ----------------------------------
// SVD Line: 25075

//  <item> SFDITEM_FIELD__LIN0_BDLR_DATA2
//    <name> DATA2 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40007030) Data 2 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDLR >> 16) & 0xFF), ((LIN0_BDLR = (LIN0_BDLR & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDLR_DATA3  ----------------------------------
// SVD Line: 25082

//  <item> SFDITEM_FIELD__LIN0_BDLR_DATA3
//    <name> DATA3 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40007030) Data 3 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDLR >> 24) & 0xFF), ((LIN0_BDLR = (LIN0_BDLR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_BDLR  -----------------------------------
// SVD Line: 25052

//  <rtree> SFDITEM_REG__LIN0_BDLR
//    <name> BDLR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007030) Buffer data low register </i>
//    <loc> ( (unsigned int)((LIN0_BDLR >> 0) & 0xFFFFFFFF), ((LIN0_BDLR = (LIN0_BDLR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_BDLR_DATA0 </item>
//    <item> SFDITEM_FIELD__LIN0_BDLR_DATA1 </item>
//    <item> SFDITEM_FIELD__LIN0_BDLR_DATA2 </item>
//    <item> SFDITEM_FIELD__LIN0_BDLR_DATA3 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_BDHR  --------------------------------
// SVD Line: 25091

unsigned int LIN0_BDHR __AT (0x40007034);



// -------------------------------  Field Item: LIN0_BDHR_DATA4  ----------------------------------
// SVD Line: 25100

//  <item> SFDITEM_FIELD__LIN0_BDHR_DATA4
//    <name> DATA4 </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x40007034) Data 4 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDHR >> 0) & 0xFF), ((LIN0_BDHR = (LIN0_BDHR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDHR_DATA5  ----------------------------------
// SVD Line: 25107

//  <item> SFDITEM_FIELD__LIN0_BDHR_DATA5
//    <name> DATA5 </name>
//    <rw> 
//    <i> [Bits 15..8] RW (@ 0x40007034) Data 5 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDHR >> 8) & 0xFF), ((LIN0_BDHR = (LIN0_BDHR & ~(0xFFUL << 8 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 8 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDHR_DATA6  ----------------------------------
// SVD Line: 25114

//  <item> SFDITEM_FIELD__LIN0_BDHR_DATA6
//    <name> DATA6 </name>
//    <rw> 
//    <i> [Bits 23..16] RW (@ 0x40007034) Data 6 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDHR >> 16) & 0xFF), ((LIN0_BDHR = (LIN0_BDHR & ~(0xFFUL << 16 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 16 ) ) )) </loc>
//    </edit>
//  </item>
//  


// -------------------------------  Field Item: LIN0_BDHR_DATA7  ----------------------------------
// SVD Line: 25121

//  <item> SFDITEM_FIELD__LIN0_BDHR_DATA7
//    <name> DATA7 </name>
//    <rw> 
//    <i> [Bits 31..24] RW (@ 0x40007034) Data 7 </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_BDHR >> 24) & 0xFF), ((LIN0_BDHR = (LIN0_BDHR & ~(0xFFUL << 24 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 24 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_BDHR  -----------------------------------
// SVD Line: 25091

//  <rtree> SFDITEM_REG__LIN0_BDHR
//    <name> BDHR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007034) Buffer data High register </i>
//    <loc> ( (unsigned int)((LIN0_BDHR >> 0) & 0xFFFFFFFF), ((LIN0_BDHR = (LIN0_BDHR & ~(0xFFFFFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFFFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_BDHR_DATA4 </item>
//    <item> SFDITEM_FIELD__LIN0_BDHR_DATA5 </item>
//    <item> SFDITEM_FIELD__LIN0_BDHR_DATA6 </item>
//    <item> SFDITEM_FIELD__LIN0_BDHR_DATA7 </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_IFEN  --------------------------------
// SVD Line: 25130

unsigned int LIN0_IFEN __AT (0x40007038);



// --------------------------------  Field Item: LIN0_IFEN_EN  ------------------------------------
// SVD Line: 25139

//  <item> SFDITEM_FIELD__LIN0_IFEN_EN
//    <name> EN </name>
//    <rw> 
//    <i> [Bits 15..0] RW (@ 0x40007038) Filter Number Enable </i>
//    <edit> 
//      <loc> ( (unsigned short)((LIN0_IFEN >> 0) & 0xFFFF), ((LIN0_IFEN = (LIN0_IFEN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u16:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_IFEN  -----------------------------------
// SVD Line: 25130

//  <rtree> SFDITEM_REG__LIN0_IFEN
//    <name> IFEN </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007038) LIN ID Filter enable register </i>
//    <loc> ( (unsigned int)((LIN0_IFEN >> 0) & 0xFFFFFFFF), ((LIN0_IFEN = (LIN0_IFEN & ~(0xFFFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFFFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFEN_EN </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_IFMR  --------------------------------
// SVD Line: 25148

unsigned int LIN0_IFMR __AT (0x4000703C);



// --------------------------------  Field Item: LIN0_IFMR_IFM  -----------------------------------
// SVD Line: 25157

//  <item> SFDITEM_FIELD__LIN0_IFMR_IFM
//    <name> IFM </name>
//    <rw> 
//    <i> [Bits 7..0] RW (@ 0x4000703C) ID Filter Mode </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFMR >> 0) & 0xFF), ((LIN0_IFMR = (LIN0_IFMR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_IFMR  -----------------------------------
// SVD Line: 25148

//  <rtree> SFDITEM_REG__LIN0_IFMR
//    <name> IFMR </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000703C) LIN ID Filter mode register </i>
//    <loc> ( (unsigned int)((LIN0_IFMR >> 0) & 0xFFFFFFFF), ((LIN0_IFMR = (LIN0_IFMR & ~(0xFFUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0xFF) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFMR_IFM </item>
//  </rtree>
//  


// ----------------------------  Register Item Address: LIN0_IFMI  --------------------------------
// SVD Line: 25166

unsigned int LIN0_IFMI __AT (0x40007040);



// -------------------------------  Field Item: LIN0_IFMI_IFMI  -----------------------------------
// SVD Line: 25175

//  <item> SFDITEM_FIELD__LIN0_IFMI_IFMI
//    <name> IFMI </name>
//    <rw> 
//    <i> [Bits 4..0] RW (@ 0x40007040) ID Filter match index </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFMI >> 0) & 0x1F), ((LIN0_IFMI = (LIN0_IFMI & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------------  Register RTree: LIN0_IFMI  -----------------------------------
// SVD Line: 25166

//  <rtree> SFDITEM_REG__LIN0_IFMI
//    <name> IFMI </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007040) LIN ID Filter match index register </i>
//    <loc> ( (unsigned int)((LIN0_IFMI >> 0) & 0xFFFFFFFF), ((LIN0_IFMI = (LIN0_IFMI & ~(0x1FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFMI_IFMI </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR0  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR0 __AT (0x40007044);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR0_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007044) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR0 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR0 = (LIN0_IFCR_IFCR_IFCR0 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR0_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007044) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR0 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR0_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007044) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR0 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR0_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007044) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR0 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR0 = (LIN0_IFCR_IFCR_IFCR0 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR0  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR0
//    <name> IFCR0 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007044) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR0 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR0 = (LIN0_IFCR_IFCR_IFCR0 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR0_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR1  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR1 __AT (0x40007048);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR1_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007048) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR1 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR1 = (LIN0_IFCR_IFCR_IFCR1 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR1_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007048) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR1 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR1_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007048) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR1 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR1_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007048) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR1 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR1 = (LIN0_IFCR_IFCR_IFCR1 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR1  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR1
//    <name> IFCR1 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007048) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR1 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR1 = (LIN0_IFCR_IFCR_IFCR1 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR1_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR2  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR2 __AT (0x4000704C);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR2_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000704C) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR2 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR2 = (LIN0_IFCR_IFCR_IFCR2 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR2_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000704C) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR2 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR2_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000704C) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR2 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR2_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4000704C) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR2 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR2 = (LIN0_IFCR_IFCR_IFCR2 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR2  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR2
//    <name> IFCR2 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000704C) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR2 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR2 = (LIN0_IFCR_IFCR_IFCR2 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR2_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR3  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR3 __AT (0x40007050);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR3_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007050) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR3 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR3 = (LIN0_IFCR_IFCR_IFCR3 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR3_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007050) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR3 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR3_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007050) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR3 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR3_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007050) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR3 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR3 = (LIN0_IFCR_IFCR_IFCR3 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR3  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR3
//    <name> IFCR3 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007050) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR3 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR3 = (LIN0_IFCR_IFCR_IFCR3 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR3_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR4  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR4 __AT (0x40007054);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR4_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007054) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR4 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR4 = (LIN0_IFCR_IFCR_IFCR4 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR4_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007054) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR4 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR4_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007054) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR4 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR4_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007054) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR4 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR4 = (LIN0_IFCR_IFCR_IFCR4 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR4  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR4
//    <name> IFCR4 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007054) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR4 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR4 = (LIN0_IFCR_IFCR_IFCR4 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR4_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR5  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR5 __AT (0x40007058);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR5_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007058) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR5 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR5 = (LIN0_IFCR_IFCR_IFCR5 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR5_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007058) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR5 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR5_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007058) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR5 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR5_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007058) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR5 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR5 = (LIN0_IFCR_IFCR_IFCR5 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR5  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR5
//    <name> IFCR5 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007058) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR5 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR5 = (LIN0_IFCR_IFCR_IFCR5 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR5_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR6  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR6 __AT (0x4000705C);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR6_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000705C) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR6 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR6 = (LIN0_IFCR_IFCR_IFCR6 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR6_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000705C) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR6 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR6_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000705C) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR6 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR6_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4000705C) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR6 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR6 = (LIN0_IFCR_IFCR_IFCR6 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR6  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR6
//    <name> IFCR6 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000705C) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR6 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR6 = (LIN0_IFCR_IFCR_IFCR6 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR6_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR7  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR7 __AT (0x40007060);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR7_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007060) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR7 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR7 = (LIN0_IFCR_IFCR_IFCR7 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR7_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007060) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR7 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR7_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007060) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR7 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR7_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007060) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR7 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR7 = (LIN0_IFCR_IFCR_IFCR7 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR7  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR7
//    <name> IFCR7 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007060) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR7 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR7 = (LIN0_IFCR_IFCR_IFCR7 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR7_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR8  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR8 __AT (0x40007064);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR8_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007064) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR8 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR8 = (LIN0_IFCR_IFCR_IFCR8 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR8_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007064) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR8 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR8_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007064) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR8 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR8_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007064) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR8 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR8 = (LIN0_IFCR_IFCR_IFCR8 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR8  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR8
//    <name> IFCR8 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007064) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR8 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR8 = (LIN0_IFCR_IFCR_IFCR8 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR8_DFL </item>
//  </rtree>
//  


// -----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR9  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR9 __AT (0x40007068);



// ---------------------------  Field Item: LIN0_IFCR_IFCR_IFCR9_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007068) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR9 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR9 = (LIN0_IFCR_IFCR_IFCR9 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR9_CST  ------------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007068) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR9 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR9_DIR  ------------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007068) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR9 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR9_DFL  ------------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007068) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR9 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR9 = (LIN0_IFCR_IFCR_IFCR9 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR9  ------------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR9
//    <name> IFCR9 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007068) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR9 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR9 = (LIN0_IFCR_IFCR_IFCR9 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR9_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR10  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR10 __AT (0x4000706C);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR10_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000706C) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR10 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR10 = (LIN0_IFCR_IFCR_IFCR10 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR10_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000706C) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR10 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR10_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000706C) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR10 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR10_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4000706C) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR10 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR10 = (LIN0_IFCR_IFCR_IFCR10 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR10  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR10
//    <name> IFCR10 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000706C) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR10 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR10 = (LIN0_IFCR_IFCR_IFCR10 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR10_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR11  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR11 __AT (0x40007070);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR11_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007070) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR11 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR11 = (LIN0_IFCR_IFCR_IFCR11 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR11_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007070) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR11 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR11_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007070) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR11 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR11_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007070) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR11 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR11 = (LIN0_IFCR_IFCR_IFCR11 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR11  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR11
//    <name> IFCR11 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007070) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR11 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR11 = (LIN0_IFCR_IFCR_IFCR11 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR11_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR12  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR12 __AT (0x40007074);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR12_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007074) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR12 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR12 = (LIN0_IFCR_IFCR_IFCR12 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR12_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007074) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR12 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR12_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007074) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR12 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR12_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007074) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR12 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR12 = (LIN0_IFCR_IFCR_IFCR12 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR12  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR12
//    <name> IFCR12 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007074) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR12 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR12 = (LIN0_IFCR_IFCR_IFCR12 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR12_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR13  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR13 __AT (0x40007078);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR13_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007078) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR13 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR13 = (LIN0_IFCR_IFCR_IFCR13 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR13_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007078) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR13 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR13_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007078) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR13 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR13_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007078) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR13 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR13 = (LIN0_IFCR_IFCR_IFCR13 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR13  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR13
//    <name> IFCR13 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007078) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR13 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR13 = (LIN0_IFCR_IFCR_IFCR13 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR13_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR14  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR14 __AT (0x4000707C);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR14_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x4000707C) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR14 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR14 = (LIN0_IFCR_IFCR_IFCR14 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR14_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x4000707C) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR14 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR14_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x4000707C) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR14 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR14_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x4000707C) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR14 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR14 = (LIN0_IFCR_IFCR_IFCR14 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR14  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR14
//    <name> IFCR14 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x4000707C) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR14 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR14 = (LIN0_IFCR_IFCR_IFCR14 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR14_DFL </item>
//  </rtree>
//  


// ----------------------  Register Item Address: LIN0_IFCR_IFCR_IFCR15  --------------------------
// SVD Line: 25184

unsigned int LIN0_IFCR_IFCR_IFCR15 __AT (0x40007080);



// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR15_ID  ------------------------------
// SVD Line: 25196

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_ID
//    <name> ID </name>
//    <rw> 
//    <i> [Bits 5..0] RW (@ 0x40007080) Identifier </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR15 >> 0) & 0x3F), ((LIN0_IFCR_IFCR_IFCR15 = (LIN0_IFCR_IFCR_IFCR15 & ~(0x3FUL << 0 )) | ((unsigned long)(Gui_u8:GuiVal & 0x3F) << 0 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR15_CST  -----------------------------
// SVD Line: 25203

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_CST
//    <name> CST </name>
//    <rw> 
//    <i> [Bit 8] RW (@ 0x40007080) Checksum type </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR15 ) </loc>
//      <o.8..8> CST
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR15_DIR  -----------------------------
// SVD Line: 25210

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_DIR
//    <name> DIR </name>
//    <rw> 
//    <i> [Bit 9] RW (@ 0x40007080) Direction </i>
//    <check> 
//      <loc> ( (unsigned int) LIN0_IFCR_IFCR_IFCR15 ) </loc>
//      <o.9..9> DIR
//    </check>
//  </item>
//  


// --------------------------  Field Item: LIN0_IFCR_IFCR_IFCR15_DFL  -----------------------------
// SVD Line: 25217

//  <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_DFL
//    <name> DFL </name>
//    <rw> 
//    <i> [Bits 12..10] RW (@ 0x40007080) Data Field Length </i>
//    <edit> 
//      <loc> ( (unsigned char)((LIN0_IFCR_IFCR_IFCR15 >> 10) & 0x7), ((LIN0_IFCR_IFCR_IFCR15 = (LIN0_IFCR_IFCR_IFCR15 & ~(0x7UL << 10 )) | ((unsigned long)(Gui_u8:GuiVal & 0x7) << 10 ) ) )) </loc>
//    </edit>
//  </item>
//  


// --------------------------  Register RTree: LIN0_IFCR_IFCR_IFCR15  -----------------------------
// SVD Line: 25184

//  <rtree> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR15
//    <name> IFCR15 </name>
//    <rw> 
//    <i> [Bits 31..0] RW (@ 0x40007080) LIN ID filter control register </i>
//    <loc> ( (unsigned int)((LIN0_IFCR_IFCR_IFCR15 >> 0) & 0xFFFFFFFF), ((LIN0_IFCR_IFCR_IFCR15 = (LIN0_IFCR_IFCR_IFCR15 & ~(0x1F3FUL << 0 )) | ((unsigned long)(Gui_u32:GuiVal & 0x1F3F) << 0 ) ) )) </loc>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_ID </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_CST </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_DIR </item>
//    <item> SFDITEM_FIELD__LIN0_IFCR_IFCR_IFCR15_DFL </item>
//  </rtree>
//  


// ----------------------------------  Peripheral View: LIN0  -------------------------------------
// SVD Line: 24506

//  <view> LIN0
//    <name> LIN0 </name>
//    <item> SFDITEM_REG__LIN0_SYS </item>
//    <item> SFDITEM_REG__LIN0_CTRL1 </item>
//    <item> SFDITEM_REG__LIN0_CTRL2 </item>
//    <item> SFDITEM_REG__LIN0_IEN </item>
//    <item> SFDITEM_REG__LIN0_STS </item>
//    <item> SFDITEM_REG__LIN0_ESTS </item>
//    <item> SFDITEM_REG__LIN0_TO1 </item>
//    <item> SFDITEM_REG__LIN0_TO2 </item>
//    <item> SFDITEM_REG__LIN0_IBR </item>
//    <item> SFDITEM_REG__LIN0_FBR </item>
//    <item> SFDITEM_REG__LIN0_CS </item>
//    <item> SFDITEM_REG__LIN0_FRM </item>
//    <item> SFDITEM_REG__LIN0_BDLR </item>
//    <item> SFDITEM_REG__LIN0_BDHR </item>
//    <item> SFDITEM_REG__LIN0_IFEN </item>
//    <item> SFDITEM_REG__LIN0_IFMR </item>
//    <item> SFDITEM_REG__LIN0_IFMI </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR0 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR1 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR2 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR3 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR4 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR5 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR6 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR7 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR8 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR9 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR10 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR11 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR12 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR13 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR14 </item>
//    <item> SFDITEM_REG__LIN0_IFCR_IFCR_IFCR15 </item>
//  </view>
//  


// ------------------------------------------------------------------------------------------------
// -----                              Interrupt Number Definition                             -----
// ------------------------------------------------------------------------------------------------



// ------------------------  ARM Cortex-M3 Specific Interrupt Numbers  ----------------------------

//  <qitem> Reset_IRQ
//    <name> Reset </name>
//    <i> Reset Vector, invoked on Power up and warm reset </i>
//    <loc> 1 </loc>
//  </qitem>
//  
//  <qitem> NonMaskableInt_IRQ
//    <name> NonMaskableInt </name>
//    <i> Non maskable Interrupt, cannot be stopped or preempted </i>
//    <loc> 2 </loc>
//  </qitem>
//  
//  <qitem> HardFault_IRQ
//    <name> HardFault </name>
//    <i> Hard Fault, all classes of Fault </i>
//    <loc> 3 </loc>
//  </qitem>
//  
//  <qitem> MemoryManagement_IRQ
//    <name> MemoryManagement </name>
//    <i> Memory Management, MPU mismatch, including Access Violation and No Match </i>
//    <loc> 4 </loc>
//  </qitem>
//  
//  <qitem> BusFault_IRQ
//    <name> BusFault </name>
//    <i> Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault </i>
//    <loc> 5 </loc>
//  </qitem>
//  
//  <qitem> UsageFault_IRQ
//    <name> UsageFault </name>
//    <i> Usage Fault, i.e. Undef Instruction, Illegal State Transition </i>
//    <loc> 6 </loc>
//  </qitem>
//  
//  <qitem> SVCall_IRQ
//    <name> SVCall </name>
//    <i> System Service Call via SVC instruction </i>
//    <loc> 11 </loc>
//  </qitem>
//  
//  <qitem> DebugMonitor_IRQ
//    <name> DebugMonitor </name>
//    <i> Debug Monitor </i>
//    <loc> 12 </loc>
//  </qitem>
//  
//  <qitem> PendSV_IRQ
//    <name> PendSV </name>
//    <i> Pendable request for system service </i>
//    <loc> 14 </loc>
//  </qitem>
//  
//  <qitem> SysTick_IRQ
//    <name> SysTick </name>
//    <i> System Tick Timer </i>
//    <loc> 15 </loc>
//  </qitem>
//  


// ----------------------------  AC78xx Specific Interrupt Numbers  -------------------------------

//  <qitem> PWDT_IRQ
//    <name> PWDT </name>
//    <i> PWDT </i>
//    <loc> 16 </loc>
//  </qitem>
//  
//  <qitem> uart1_IRQ
//    <name> uart1 </name>
//    <i> uart1 </i>
//    <loc> 17 </loc>
//  </qitem>
//  
//  <qitem> uart2_IRQ
//    <name> uart2 </name>
//    <i> uart2 </i>
//    <loc> 18 </loc>
//  </qitem>
//  
//  <qitem> UART3_IRQ
//    <name> UART3 </name>
//    <i> UART3 </i>
//    <loc> 19 </loc>
//  </qitem>
//  
//  <qitem> UART4_IRQ
//    <name> UART4 </name>
//    <i> UART4 </i>
//    <loc> 20 </loc>
//  </qitem>
//  
//  <qitem> UART5_IRQ
//    <name> UART5 </name>
//    <i> UART5 </i>
//    <loc> 21 </loc>
//  </qitem>
//  
//  <qitem> UART6_IRQ
//    <name> UART6 </name>
//    <i> UART6 </i>
//    <loc> 22 </loc>
//  </qitem>
//  
//  <qitem> SPI1_IRQ
//    <name> SPI1 </name>
//    <i> SPI1 </i>
//    <loc> 29 </loc>
//  </qitem>
//  
//  <qitem> SPI2_IRQ
//    <name> SPI2 </name>
//    <i> SPI2 </i>
//    <loc> 30 </loc>
//  </qitem>
//  
//  <qitem> I2C1_IRQ
//    <name> I2C1 </name>
//    <i> I2C1 </i>
//    <loc> 31 </loc>
//  </qitem>
//  
//  <qitem> I2C2_IRQ
//    <name> I2C2 </name>
//    <i> I2C2 </i>
//    <loc> 32 </loc>
//  </qitem>
//  
//  <qitem> TIMER0_IRQ
//    <name> TIMER0 </name>
//    <i> TIMER0 </i>
//    <loc> 45 </loc>
//  </qitem>
//  
//  <qitem> TIMER1_IRQ
//    <name> TIMER1 </name>
//    <i> TIMER1 </i>
//    <loc> 46 </loc>
//  </qitem>
//  
//  <qitem> RTC_IRQ
//    <name> RTC </name>
//    <i> RTC </i>
//    <loc> 48 </loc>
//  </qitem>
//  
//  <qitem> WDOG_IRQ
//    <name> WDOG </name>
//    <i> WDOG </i>
//    <loc> 49 </loc>
//  </qitem>
//  
//  <qitem> PWM0_IRQ
//    <name> PWM0 </name>
//    <i> PWM0 </i>
//    <loc> 50 </loc>
//  </qitem>
//  
//  <qitem> PWM1_IRQ
//    <name> PWM1 </name>
//    <i> PWM1 </i>
//    <loc> 51 </loc>
//  </qitem>
//  
//  <qitem> PWM2_IRQ
//    <name> PWM2 </name>
//    <i> PWM2 </i>
//    <loc> 52 </loc>
//  </qitem>
//  
//  <qitem> LIN0_IRQ
//    <name> LIN0 </name>
//    <i> LIN0 </i>
//    <loc> 54 </loc>
//  </qitem>
//  
//  <qitem> CAN1_IRQ
//    <name> CAN1 </name>
//    <i> CAN1 </i>
//    <loc> 58 </loc>
//  </qitem>
//  
//  <qitem> CAN2_IRQ
//    <name> CAN2 </name>
//    <i> CAN2 </i>
//    <loc> 59 </loc>
//  </qitem>
//  
//  <qitem> ADC_IRQ
//    <name> ADC </name>
//    <i> ADC </i>
//    <loc> 60 </loc>
//  </qitem>
//  
//  <qitem> ACMP0__IRQ
//    <name> ACMP0_ </name>
//    <i> ACMP0_ </i>
//    <loc> 61 </loc>
//  </qitem>
//  
//  <qitem> ACMP1__IRQ
//    <name> ACMP1_ </name>
//    <i> ACMP1_ </i>
//    <loc> 62 </loc>
//  </qitem>
//  
//  <qitem> TIMER2_IRQ
//    <name> TIMER2 </name>
//    <i> TIMER2 </i>
//    <loc> 63 </loc>
//  </qitem>
//  
//  <qitem> TIMER3_IRQ
//    <name> TIMER3 </name>
//    <i> TIMER3 </i>
//    <loc> 64 </loc>
//  </qitem>
//  
//  <qitem> TIMER4_IRQ
//    <name> TIMER4 </name>
//    <i> TIMER4 </i>
//    <loc> 65 </loc>
//  </qitem>
//  
//  <qitem> TIMER5_IRQ
//    <name> TIMER5 </name>
//    <i> TIMER5 </i>
//    <loc> 66 </loc>
//  </qitem>
//  
//  <qitem> TIMER6_IRQ
//    <name> TIMER6 </name>
//    <i> TIMER6 </i>
//    <loc> 67 </loc>
//  </qitem>
//  
//  <qitem> TIMER7_IRQ
//    <name> TIMER7 </name>
//    <i> TIMER7 </i>
//    <loc> 68 </loc>
//  </qitem>
//  
//  <qitem> PWM3_IRQ
//    <name> PWM3 </name>
//    <i> PWM3 </i>
//    <loc> 69 </loc>
//  </qitem>
//  
//  <irqtable> AC78xx_IRQTable
//    <name> AC78xx Interrupt Table </name>
//    <nvicPrioBits> 3 </nvicPrioBits>
//    <qitem> Reset_IRQ </qitem>
//    <qitem> NonMaskableInt_IRQ </qitem>
//    <qitem> HardFault_IRQ </qitem>
//    <qitem> MemoryManagement_IRQ </qitem>
//    <qitem> BusFault_IRQ </qitem>
//    <qitem> UsageFault_IRQ </qitem>
//    <qitem> SVCall_IRQ </qitem>
//    <qitem> DebugMonitor_IRQ </qitem>
//    <qitem> PendSV_IRQ </qitem>
//    <qitem> SysTick_IRQ </qitem>
//    <qitem> PWDT_IRQ </qitem>
//    <qitem> uart1_IRQ </qitem>
//    <qitem> uart2_IRQ </qitem>
//    <qitem> UART3_IRQ </qitem>
//    <qitem> UART4_IRQ </qitem>
//    <qitem> UART5_IRQ </qitem>
//    <qitem> UART6_IRQ </qitem>
//    <qitem> SPI1_IRQ </qitem>
//    <qitem> SPI2_IRQ </qitem>
//    <qitem> I2C1_IRQ </qitem>
//    <qitem> I2C2_IRQ </qitem>
//    <qitem> TIMER0_IRQ </qitem>
//    <qitem> TIMER1_IRQ </qitem>
//    <qitem> RTC_IRQ </qitem>
//    <qitem> WDOG_IRQ </qitem>
//    <qitem> PWM0_IRQ </qitem>
//    <qitem> PWM1_IRQ </qitem>
//    <qitem> PWM2_IRQ </qitem>
//    <qitem> LIN0_IRQ </qitem>
//    <qitem> CAN1_IRQ </qitem>
//    <qitem> CAN2_IRQ </qitem>
//    <qitem> ADC_IRQ </qitem>
//    <qitem> ACMP0__IRQ </qitem>
//    <qitem> ACMP1__IRQ </qitem>
//    <qitem> TIMER2_IRQ </qitem>
//    <qitem> TIMER3_IRQ </qitem>
//    <qitem> TIMER4_IRQ </qitem>
//    <qitem> TIMER5_IRQ </qitem>
//    <qitem> TIMER6_IRQ </qitem>
//    <qitem> TIMER7_IRQ </qitem>
//    <qitem> PWM3_IRQ </qitem>
//  </irqtable>


// --------------------------------  Peripheral Menu: 'AC78xx'  -----------------------------------



// ------------------------------------------------------------------------------------------------
// -----                                       Main Menu                                      -----
// ------------------------------------------------------------------------------------------------

//  <b> ACMP
//    <m> ACMP0 </m>
//    <m> ACMP1 </m>
//  </b>
//  
//  <b> ADC
//    <m> ADC </m>
//  </b>
//  
//  <b> CAN
//    <m> CAN1 </m>
//    <m> CAN2 </m>
//  </b>
//  
//  <b> CTU
//    <m> CTU </m>
//  </b>
//  
//  <b> I2C
//    <m> I2C1 </m>
//    <m> I2C2 </m>
//  </b>
//  
//  <b> LIN
//    <m> LIN0 </m>
//  </b>
//  
//  <b> PWDT
//    <m> PWDT </m>
//  </b>
//  
//  <b> PWM
//    <m> PWM0 </m>
//    <m> PWM1 </m>
//    <m> PWM2 </m>
//    <m> PWM3 </m>
//  </b>
//  
//  <b> RTC
//    <m> RTC </m>
//  </b>
//  
//  <b> SPI
//    <m> SPI1 </m>
//    <m> SPI2 </m>
//  </b>
//  
//  <b> TIMER
//    <m> TIMER </m>
//    <m> TIMER0 </m>
//    <m> TIMER1 </m>
//    <m> TIMER2 </m>
//    <m> TIMER3 </m>
//    <m> TIMER4 </m>
//    <m> TIMER5 </m>
//    <m> TIMER6 </m>
//    <m> TIMER7 </m>
//  </b>
//  
//  <b> UART
//    <m> UART2 </m>
//    <m> UART3 </m>
//    <m> UART4 </m>
//    <m> UART5 </m>
//    <m> UART6 </m>
//  </b>
//  
//  <b> WDOG
//    <m> WDOG </m>
//  </b>
//  
//  <b> uart
//    <m> uart1 </m>
//  </b>
//  
